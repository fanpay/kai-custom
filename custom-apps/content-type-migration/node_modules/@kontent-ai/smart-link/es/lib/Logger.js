export var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["Debug"] = 1] = "Debug";
    LogLevel[LogLevel["Info"] = 2] = "Info";
    LogLevel[LogLevel["Warn"] = 3] = "Warn";
    LogLevel[LogLevel["Error"] = 4] = "Error";
})(LogLevel || (LogLevel = {}));
export class Logger {
    static setLogLevel(level) {
        Logger.logLevel = level;
    }
    static error(...args) {
        if (Logger.logLevel <= LogLevel.Error) {
            console.error('[KSL][Error]: ', ...args);
        }
    }
    static warn(...args) {
        if (Logger.logLevel <= LogLevel.Warn) {
            console.warn('[KSL][Warning]: ', ...args);
        }
    }
    static info(...args) {
        if (Logger.logLevel <= LogLevel.Info) {
            console.info('[KSL][Info]: ', ...args);
        }
    }
    static debug(...args) {
        if (Logger.logLevel <= LogLevel.Debug) {
            console.log(...args);
        }
    }
    static debugGroupCollapsed(...args) {
        if (Logger.logLevel <= LogLevel.Debug) {
            console.groupCollapsed(...args);
        }
    }
    static debugGroup(...args) {
        if (Logger.logLevel <= LogLevel.Debug) {
            console.group(...args);
        }
    }
    static debugGroupEnd() {
        if (Logger.logLevel <= LogLevel.Debug) {
            console.groupEnd();
        }
    }
}
Logger.logLevel = LogLevel.Info;
//# sourceMappingURL=Logger.js.map