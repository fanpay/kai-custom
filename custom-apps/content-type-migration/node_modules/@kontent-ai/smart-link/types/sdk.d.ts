import { IRefreshMessageData, IRefreshMessageMetadata, IUpdateMessageData } from './lib/IFrameCommunicatorTypes';
import { IKSLPublicConfiguration } from './lib/ConfigurationManager';
import { Callback, EventHandler } from './lib/EventManager';
export declare enum KontentSmartLinkEvent {
    Refresh = "refresh",
    Update = "update"
}
declare type KontentSmartLinkEventMap = {
    readonly [KontentSmartLinkEvent.Refresh]: EventHandler<IRefreshMessageData, IRefreshMessageMetadata, Callback>;
    readonly [KontentSmartLinkEvent.Update]: EventHandler<IUpdateMessageData>;
};
declare class KontentSmartLink {
    private static instance;
    private sdk;
    static initializeOnLoad(configuration?: Partial<IKSLPublicConfiguration>): Promise<KontentSmartLink>;
    static initialize(configuration?: Partial<IKSLPublicConfiguration>): KontentSmartLink;
    destroy: () => void;
    setConfiguration: (configuration: Partial<IKSLPublicConfiguration>) => void;
    on: <TEvent extends keyof KontentSmartLinkEventMap>(event: TEvent, handler: KontentSmartLinkEventMap[TEvent]) => void;
    off: <TEvent extends keyof KontentSmartLinkEventMap>(event: TEvent, handler: KontentSmartLinkEventMap[TEvent]) => void;
}
export default KontentSmartLink;
