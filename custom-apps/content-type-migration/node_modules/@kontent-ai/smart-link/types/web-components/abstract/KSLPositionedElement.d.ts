import { KSLCustomElement } from './KSLCustomElement';
export declare enum ElementPositionOffset {
    Bottom = "bottom",
    BottomEnd = "bottom-end",
    BottomStart = "bottom-start",
    Left = "left",
    LeftEnd = "left-end",
    LeftStart = "left-start",
    None = "",
    Right = "right",
    RightEnd = "right-end",
    RightStart = "right-start",
    Top = "top",
    TopEnd = "top-end",
    TopStart = "top-start"
}
export interface IPositionable {
    readonly adjustPosition: () => void;
}
export declare abstract class KSLPositionedElement extends KSLCustomElement implements IPositionable {
    get position(): string;
    protected targetRef: HTMLElement | null;
    connectedCallback(): void;
    disconnectedCallback(): void;
    attachTo(element: HTMLElement): void;
    protected calculateTopOffset(thisRect: DOMRect, targetRect: DOMRect): number;
    protected calculateLeftOffset(thisRect: DOMRect, targetRect: DOMRect): number;
    abstract adjustPosition(): void;
}
