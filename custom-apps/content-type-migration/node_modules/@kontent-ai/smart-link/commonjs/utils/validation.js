"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateAddActionMessageData = exports.validateAddInitialMessageData = exports.validateContentComponentClickMessageData = exports.validateElementClickMessageData = exports.validateContentItemClickEditMessageData = void 0;
const Logger_1 = require("../lib/Logger");
function logErrors(errors) {
    errors.forEach((error) => {
        Logger_1.Logger.error(error);
    });
}
function validateContentItemClickEditMessageData(data) {
    const errors = [];
    if (!data.projectId) {
        errors.push('Project ID is required to handle element click.');
    }
    if (!data.languageCodename) {
        errors.push('Language codename is required to handle element click.');
    }
    if (!data.itemId) {
        errors.push('Item ID is required to handle element click.');
    }
    logErrors(errors);
    return errors.length === 0;
}
exports.validateContentItemClickEditMessageData = validateContentItemClickEditMessageData;
function validateElementClickMessageData(data) {
    if (!data.elementCodename) {
        Logger_1.Logger.error('Element codename is required to handle element click.');
        return false;
    }
    return validateContentItemClickEditMessageData(data);
}
exports.validateElementClickMessageData = validateElementClickMessageData;
function validateContentComponentClickMessageData(data) {
    if (!data.contentComponentId) {
        Logger_1.Logger.error('Content component ID is required to handle element click.');
        return false;
    }
    return validateContentItemClickEditMessageData(data);
}
exports.validateContentComponentClickMessageData = validateContentComponentClickMessageData;
function validateAddInitialMessageData(data) {
    const errors = [];
    if (!data.projectId) {
        errors.push('Project ID is required to handle add button click.');
    }
    if (!data.languageCodename) {
        errors.push('Language codename is required to handle add button click.');
    }
    if (!data.itemId) {
        errors.push('Item ID is required to handle add button click.');
    }
    if (!data.elementCodename) {
        errors.push('Element codename is required to handle add button click.');
    }
    if (!data.insertPosition) {
        errors.push('Insert position (placement, targetId) is required to handle add button click.');
    }
    logErrors(errors);
    return errors.length === 0;
}
exports.validateAddInitialMessageData = validateAddInitialMessageData;
function validateAddActionMessageData(data) {
    if (!data.action) {
        Logger_1.Logger.error('Action is required to handle add button click.');
        return false;
    }
    return validateAddInitialMessageData(data);
}
exports.validateAddActionMessageData = validateAddActionMessageData;
//# sourceMappingURL=validation.js.map