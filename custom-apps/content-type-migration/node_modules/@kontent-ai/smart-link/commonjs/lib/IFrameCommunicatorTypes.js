"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IFrameResponseType = exports.IFrameMessageType = exports.AddButtonPermissionCheckResult = exports.AddButtonPermission = exports.AddButtonElementType = exports.AddButtonAction = exports.InsertPositionPlacement = void 0;
var InsertPositionPlacement;
(function (InsertPositionPlacement) {
    InsertPositionPlacement["After"] = "after";
    InsertPositionPlacement["Before"] = "before";
    InsertPositionPlacement["End"] = "end";
    InsertPositionPlacement["Start"] = "start";
})(InsertPositionPlacement = exports.InsertPositionPlacement || (exports.InsertPositionPlacement = {}));
var AddButtonAction;
(function (AddButtonAction) {
    AddButtonAction["CreateComponent"] = "CreateComponent";
    AddButtonAction["CreateLinkedItem"] = "CreateLinkedItem";
    AddButtonAction["InsertLinkedItem"] = "InsertLinkedItem";
})(AddButtonAction = exports.AddButtonAction || (exports.AddButtonAction = {}));
var AddButtonElementType;
(function (AddButtonElementType) {
    AddButtonElementType["LinkedItems"] = "LinkedItems";
    AddButtonElementType["RichText"] = "RichText";
    AddButtonElementType["Unknown"] = "Unknown";
})(AddButtonElementType = exports.AddButtonElementType || (exports.AddButtonElementType = {}));
var AddButtonPermission;
(function (AddButtonPermission) {
    AddButtonPermission["CreateNew"] = "createNew";
    AddButtonPermission["Edit"] = "edit";
    AddButtonPermission["ViewParent"] = "viewParent";
})(AddButtonPermission = exports.AddButtonPermission || (exports.AddButtonPermission = {}));
var AddButtonPermissionCheckResult;
(function (AddButtonPermissionCheckResult) {
    AddButtonPermissionCheckResult["ItemNotTranslated"] = "ItemNotTranslated";
    AddButtonPermissionCheckResult["Ok"] = "Ok";
    AddButtonPermissionCheckResult["PermissionMissing"] = "PermissionMissing";
    AddButtonPermissionCheckResult["RteWithForbiddenComponents"] = "RteWithForbiddenComponents";
    AddButtonPermissionCheckResult["Unknown"] = "Unknown";
})(AddButtonPermissionCheckResult = exports.AddButtonPermissionCheckResult || (exports.AddButtonPermissionCheckResult = {}));
var IFrameMessageType;
(function (IFrameMessageType) {
    IFrameMessageType["ElementClicked"] = "kontent-smart-link:element:clicked";
    IFrameMessageType["ContentItemClicked"] = "kontent-smart-link:content-item:clicked";
    IFrameMessageType["ContentComponentClicked"] = "kontent-smart-link:content-component:clicked";
    IFrameMessageType["Initialized"] = "kontent-smart-link:initialized";
    IFrameMessageType["Status"] = "kontent-smart-link:status";
    IFrameMessageType["AddInitial"] = "kontent-smart-link:add:initial";
    IFrameMessageType["AddAction"] = "kontent-smart-link:add:action";
    IFrameMessageType["RefreshPreview"] = "kontent-smart-link:preview:refresh";
    IFrameMessageType["UpdatePreview"] = "kontent-smart-link:preview:update";
    IFrameMessageType["PreviewIFrameCurrentUrl"] = "kontent-smart-link:preview:current-url";
    IFrameMessageType["PreviewIFrameCurrentUrlResponse"] = "kontent-smart-link:preview:current-url:response";
})(IFrameMessageType = exports.IFrameMessageType || (exports.IFrameMessageType = {}));
var IFrameResponseType;
(function (IFrameResponseType) {
    IFrameResponseType["AddInitialResponse"] = "kontent-smart-link:add:initial:response";
})(IFrameResponseType = exports.IFrameResponseType || (exports.IFrameResponseType = {}));
//# sourceMappingURL=IFrameCommunicatorTypes.js.map