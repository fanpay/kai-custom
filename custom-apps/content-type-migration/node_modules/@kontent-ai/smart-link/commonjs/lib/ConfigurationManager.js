"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigurationManager = void 0;
const iframe_1 = require("../utils/iframe");
const defaultConfiguration = {
    debug: false,
    defaultDataAttributes: {
        languageCodename: undefined,
        projectId: undefined,
    },
    forceWebSpotlightMode: false,
    isInsideWebSpotlight: false,
    queryParam: 'ksl-enabled',
};
class ConfigurationManager {
    constructor() {
        this.update = (configuration = {}) => {
            this.configuration = Object.assign(Object.assign({}, this.configuration), configuration);
        };
        this.configuration = defaultConfiguration;
    }
    get debug() {
        return this.configuration.debug;
    }
    get queryParam() {
        return this.configuration.queryParam;
    }
    get defaultLanguageCodename() {
        return this.configuration.defaultDataAttributes.languageCodename;
    }
    get defaultProjectId() {
        return this.configuration.defaultDataAttributes.projectId;
    }
    get isInsideWebSpotlightPreviewIFrame() {
        const { forceWebSpotlightMode, isInsideWebSpotlight } = this.configuration;
        return forceWebSpotlightMode || ((0, iframe_1.isInsideIFrame)() && isInsideWebSpotlight);
    }
    static getInstance() {
        if (!ConfigurationManager.instance) {
            ConfigurationManager.instance = new ConfigurationManager();
        }
        return ConfigurationManager.instance;
    }
}
exports.ConfigurationManager = ConfigurationManager;
//# sourceMappingURL=ConfigurationManager.js.map