{
  "version": 3,
  "sources": ["../../mime/Mime.js", "../../mime/types/standard.js", "../../mime/types/other.js", "../../mime/index.js", "../../@kontent-ai/management-sdk/node_modules/@kontent-ai/core-sdk/lib/helpers/url.helper.ts", "../../@kontent-ai/management-sdk/node_modules/@kontent-ai/core-sdk/lib/helpers/header.helper.ts", "../../@kontent-ai/management-sdk/node_modules/@kontent-ai/core-sdk/lib/helpers/headers-helper.ts", "../../@kontent-ai/management-sdk/node_modules/@kontent-ai/core-sdk/lib/helpers/retry-helper.ts", "../../@kontent-ai/management-sdk/node_modules/@kontent-ai/core-sdk/lib/models/parameters.ts", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/bind.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/utils.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/core/AxiosError.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/null.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/toFormData.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/AxiosURLSearchParams.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/buildURL.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/core/InterceptorManager.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/defaults/transitional.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/platform/browser/classes/FormData.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/platform/browser/classes/Blob.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/platform/browser/index.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/platform/common/utils.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/platform/index.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/toURLEncodedForm.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/formDataToJSON.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/defaults/index.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/parseHeaders.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/core/AxiosHeaders.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/core/transformData.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/cancel/isCancel.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/cancel/CanceledError.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/core/settle.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/cookies.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/isAbsoluteURL.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/combineURLs.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/core/buildFullPath.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/isURLSameOrigin.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/parseProtocol.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/speedometer.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/adapters/xhr.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/adapters/adapters.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/core/dispatchRequest.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/core/mergeConfig.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/env/data.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/validator.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/core/Axios.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/cancel/CancelToken.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/spread.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/isAxiosError.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/helpers/HttpStatusCode.js", "../../@kontent-ai/management-sdk/node_modules/axios/lib/axios.js", "../../@kontent-ai/management-sdk/node_modules/axios/index.js", "../../@kontent-ai/management-sdk/node_modules/@kontent-ai/core-sdk/lib/http/http.debugger.ts", "../../@kontent-ai/management-sdk/node_modules/@kontent-ai/core-sdk/lib/http/http.functions.ts", "../../@kontent-ai/management-sdk/node_modules/@kontent-ai/core-sdk/lib/http/http.service.ts", "../../@kontent-ai/management-sdk/lib/models/content-management-api-endpoints.ts", "../../@kontent-ai/management-sdk/lib/models/content-items/content-item.models.ts", "../../@kontent-ai/management-sdk/lib/models/shared/shared-models.ts", "../../@kontent-ai/management-sdk/lib/models/assets/asset.models.ts", "../../@kontent-ai/management-sdk/lib/models/asset-folders/asset-folder.models.ts", "../../@kontent-ai/management-sdk/lib/models/taxonomies/taxonomy.models.ts", "../../@kontent-ai/management-sdk/lib/models/content-types/content-type.models.ts", "../../@kontent-ai/management-sdk/lib/models/content-type-snippets/content-type-snippet-elements.builder.ts", "../../@kontent-ai/management-sdk/lib/models/content-types/content-type-elements.builder.ts", "../../@kontent-ai/management-sdk/lib/models/language-variants/language-variant.models.ts", "../../@kontent-ai/management-sdk/lib/models/language-variants/language-variant-elements-builder.ts", "../../@kontent-ai/management-sdk/lib/models/elements/elements.models.ts", "../../@kontent-ai/management-sdk/lib/models/content-type-snippets/content-type-snippets.models.ts", "../../@kontent-ai/management-sdk/lib/models/workflow/workflow.models.ts", "../../@kontent-ai/management-sdk/lib/models/languages/language.models.ts", "../../@kontent-ai/management-sdk/lib/models/identifiers.ts", "../../@kontent-ai/management-sdk/lib/models/webhook/webhook.models.ts", "../../@kontent-ai/management-sdk/lib/models/collections/collection.models.ts", "../../@kontent-ai/management-sdk/lib/models/subscriptions/subscription.models.ts", "../../@kontent-ai/management-sdk/lib/models/roles/role.models.ts", "../../@kontent-ai/management-sdk/lib/models/project-users/project-users.models.ts", "../../@kontent-ai/management-sdk/lib/models/asset-renditions/asset-rendition.models.ts", "../../@kontent-ai/management-sdk/lib/models/environments/environment.models.ts", "../../@kontent-ai/management-sdk/lib/models/assets/asset-elements.builder.ts", "../../@kontent-ai/management-sdk/lib/models/spaces/space.models.ts", "../../@kontent-ai/management-sdk/lib/models/preview/preview.models.ts", "../../@kontent-ai/management-sdk/lib/queries/base-query.ts", "../../@kontent-ai/management-sdk/lib/queries/base-listing-query.ts", "../../@kontent-ai/management-sdk/lib/query-builders/content-item-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/id-and-external-id-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/data-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/id-codename-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/environment-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/language-id-and-codename-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/taxonomy-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/asset-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/workflow-step-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/content-type-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/content-item-external-id-identifier.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/language-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/content-type-codename-and-id-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/data-query-optional.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/webhook-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/action-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/collection-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/user-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/role-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/rendition-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/workflow-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/task-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/query-builders/space-identifier-query.class.ts", "../../@kontent-ai/management-sdk/lib/responses/base-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/content-items/content-item-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/assets/asset-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/asset-folders/asset-folder-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/taxonomies/taxonomy-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/content-types/content-type-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/language-variants/language-variant-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/content-type-snippets/content-type-snippet-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/workflow/workflow-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/languages/language-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/webhook/webhook-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/generic/generic-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/collections/collection-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/subscriptions/subscription-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/roles/role-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/project-users/project-users-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/asset-renditions/asset-rendition-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/spaces/space-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/environments/environment-responses.ts", "../../@kontent-ai/management-sdk/lib/responses/preview/preview-responses.ts", "../../@kontent-ai/management-sdk/lib/queries/content-items/list-content-items-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-items/view-content-item-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-items/add-content-item-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-items/update-content-item-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-items/delete-content-item-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-items/upsert-content-item-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/assets/list-assets-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/assets/view-assets-query.ts", "../../@kontent-ai/management-sdk/lib/queries/assets/upload-binary-file-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/assets/add-asset-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/assets/upsert-asset-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/assets/delete-asset-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/assets/upload-asset-from-url-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/taxonomies/list-taxonomies-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/taxonomies/delete-taxonomy-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/taxonomies/add-taxonomy-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/taxonomies/get-taxonomy-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/taxonomies/modify-taxonomy-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-types/list-content-types-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-types/view-content-type-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-types/delete-content-type-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-types/add-content-type-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-types/modify-content-type-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/language-variants/list-language-variants-of-item-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/language-variants/list-language-variants-of-content-type-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/language-variants/list-language-variants-of-content-type-with-components-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/language-variants/upsert-language-variant-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/language-variants/view-language-variant-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/language-variants/delete-language-variant-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/language-variants/list-language-variants-by-collection-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/language-variants/list-language-variants-by-space-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-type-snippets/list-content-type-snippets-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-type-snippets/view-content-type-snippet-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-type-snippets/add-content-type-snippet-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-type-snippets/modify-content-type-snippet-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/content-type-snippets/delete-content-type-snippet-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/languages/list-languages-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/languages/modify-language-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/languages/add-language-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/languages/view-language-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/workflow/list-workflow-steps-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/workflow/change-workflow-step-of-language-variant-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/workflow/publish-language-variant-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/workflow/create-new-version-of-language-variant-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/workflow/unpublish-language-variant-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/workflow/cancel-scheduled-publishing-of-language-variant-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/workflow/cancel-scheduled-unpublishing-of-language-variant-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/workflow/list-workflows-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/workflow/add-workflow-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/workflow/delete-workflow-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/workflow/update-workflow-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/workflow/change-workflow-of-language-variant-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/webhooks/delete-webhook-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/webhooks/add-webhook-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/webhooks/get-webhook-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/webhooks/list-webhooks-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/webhooks/enable-webhook-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/webhooks/disable-webhook-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/webhooks/add-legacy-webhook-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/webhooks/delete-legacy-webhook-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/webhooks/get-legacy-webhook-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/webhooks/list-legacy-webhooks-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/webhooks/enable-legacy-webhook-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/webhooks/disable-legacy-webhook-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/asset-folders/list-asset-folders.class.ts", "../../@kontent-ai/management-sdk/lib/queries/asset-folders/add-asset-folders.class.ts", "../../@kontent-ai/management-sdk/lib/queries/asset-folders/modify-asset-folders.class.ts", "../../@kontent-ai/management-sdk/lib/queries/generic/delete-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/generic/get-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/generic/patch-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/generic/post-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/generic/put-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/collections/list-collections-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/collections/set-collections-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/subscriptions/list-subscription-projects-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/subscriptions/list-subscription-users-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/subscriptions/view-subscription-project-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/subscriptions/view-subscription-user-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/subscriptions/activate-user-in-all-projects-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/subscriptions/deactivate-user-in-all-projects-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/roles/list-roles-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/roles/view-role-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/project-users/change-user-roles-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/project-users/invite-user-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/asset-renditions/list-asset-renditions-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/asset-renditions/view-assset-rendition-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/asset-renditions/add-asset-rendition-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/asset-renditions/modify-asset-rendition-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/spaces/add-space-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/spaces/delete-space-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/spaces/list-spaces-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/spaces/modify-space-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/spaces/view-space-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/environments/check-environment-validation-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/environments/clone-environment-query.ts", "../../@kontent-ai/management-sdk/lib/queries/environments/delete-environment-query.ts", "../../@kontent-ai/management-sdk/lib/queries/environments/get-environment-cloning-state-query.ts", "../../@kontent-ai/management-sdk/lib/queries/environments/list-project-validation-issues-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/environments/mark-environment-as-production-query.ts", "../../@kontent-ai/management-sdk/lib/queries/environments/start-project-validation-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/environments/modify-environment-query.ts", "../../@kontent-ai/management-sdk/lib/queries/environments/environment-information-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/preview/get-preview-configuration-query.class.ts", "../../@kontent-ai/management-sdk/lib/queries/preview/modify-preview-configuration-query.class.ts", "../../@kontent-ai/management-sdk/lib/mappers/base-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/content-items-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/elements-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/assets-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/taxonomy-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/content-type-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/environment-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/language-variant-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/content-type-snippet-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/workflow-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/language-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/webhook-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/asset-folder-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/generic-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/collections-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/subscription-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/role-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/project-user-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/asset-rendition-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/space-mapper.ts", "../../@kontent-ai/management-sdk/lib/mappers/preview-mapper.ts", "../../@kontent-ai/management-sdk/lib/sdk-info.generated.ts", "../../@kontent-ai/management-sdk/lib/services/base-management-service.class.ts", "../../@kontent-ai/management-sdk/lib/services/management-query-service.class.ts", "../../@kontent-ai/management-sdk/lib/services/mapping-service.class.ts", "../../@kontent-ai/management-sdk/lib/client/management-client.class.ts", "../../@kontent-ai/management-sdk/lib/client/management-client.factory.ts"],
  "sourcesContent": ["'use strict';\n\n/**\n * @param typeMap [Object] Map of MIME type -> Array[extensions]\n * @param ...\n */\nfunction Mime() {\n  this._types = Object.create(null);\n  this._extensions = Object.create(null);\n\n  for (let i = 0; i < arguments.length; i++) {\n    this.define(arguments[i]);\n  }\n\n  this.define = this.define.bind(this);\n  this.getType = this.getType.bind(this);\n  this.getExtension = this.getExtension.bind(this);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * If a type declares an extension that has already been defined, an error will\n * be thrown.  To suppress this error and force the extension to be associated\n * with the new type, pass `force`=true.  Alternatively, you may prefix the\n * extension with \"*\" to map the type to extension, without mapping the\n * extension to the type.\n *\n * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});\n *\n *\n * @param map (Object) type definitions\n * @param force (Boolean) if true, force overriding of existing definitions\n */\nMime.prototype.define = function(typeMap, force) {\n  for (let type in typeMap) {\n    let extensions = typeMap[type].map(function(t) {\n      return t.toLowerCase();\n    });\n    type = type.toLowerCase();\n\n    for (let i = 0; i < extensions.length; i++) {\n      const ext = extensions[i];\n\n      // '*' prefix = not the preferred type for this extension.  So fixup the\n      // extension, and skip it.\n      if (ext[0] === '*') {\n        continue;\n      }\n\n      if (!force && (ext in this._types)) {\n        throw new Error(\n          'Attempt to change mapping for \"' + ext +\n          '\" extension from \"' + this._types[ext] + '\" to \"' + type +\n          '\". Pass `force=true` to allow this, otherwise remove \"' + ext +\n          '\" from the list of extensions for \"' + type + '\".'\n        );\n      }\n\n      this._types[ext] = type;\n    }\n\n    // Use first extension as default\n    if (force || !this._extensions[type]) {\n      const ext = extensions[0];\n      this._extensions[type] = (ext[0] !== '*') ? ext : ext.substr(1);\n    }\n  }\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.getType = function(path) {\n  path = String(path);\n  let last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n  let ext = last.replace(/^.*\\./, '').toLowerCase();\n\n  let hasPath = last.length < path.length;\n  let hasDot = ext.length < last.length - 1;\n\n  return (hasDot || !hasPath) && this._types[ext] || null;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.getExtension = function(type) {\n  type = /^\\s*([^;\\s]*)/.test(type) && RegExp.$1;\n  return type && this._extensions[type.toLowerCase()] || null;\n};\n\nmodule.exports = Mime;\n", "module.exports = {\"application/andrew-inset\":[\"ez\"],\"application/applixware\":[\"aw\"],\"application/atom+xml\":[\"atom\"],\"application/atomcat+xml\":[\"atomcat\"],\"application/atomdeleted+xml\":[\"atomdeleted\"],\"application/atomsvc+xml\":[\"atomsvc\"],\"application/atsc-dwd+xml\":[\"dwd\"],\"application/atsc-held+xml\":[\"held\"],\"application/atsc-rsat+xml\":[\"rsat\"],\"application/bdoc\":[\"bdoc\"],\"application/calendar+xml\":[\"xcs\"],\"application/ccxml+xml\":[\"ccxml\"],\"application/cdfx+xml\":[\"cdfx\"],\"application/cdmi-capability\":[\"cdmia\"],\"application/cdmi-container\":[\"cdmic\"],\"application/cdmi-domain\":[\"cdmid\"],\"application/cdmi-object\":[\"cdmio\"],\"application/cdmi-queue\":[\"cdmiq\"],\"application/cu-seeme\":[\"cu\"],\"application/dash+xml\":[\"mpd\"],\"application/davmount+xml\":[\"davmount\"],\"application/docbook+xml\":[\"dbk\"],\"application/dssc+der\":[\"dssc\"],\"application/dssc+xml\":[\"xdssc\"],\"application/ecmascript\":[\"es\",\"ecma\"],\"application/emma+xml\":[\"emma\"],\"application/emotionml+xml\":[\"emotionml\"],\"application/epub+zip\":[\"epub\"],\"application/exi\":[\"exi\"],\"application/express\":[\"exp\"],\"application/fdt+xml\":[\"fdt\"],\"application/font-tdpfr\":[\"pfr\"],\"application/geo+json\":[\"geojson\"],\"application/gml+xml\":[\"gml\"],\"application/gpx+xml\":[\"gpx\"],\"application/gxf\":[\"gxf\"],\"application/gzip\":[\"gz\"],\"application/hjson\":[\"hjson\"],\"application/hyperstudio\":[\"stk\"],\"application/inkml+xml\":[\"ink\",\"inkml\"],\"application/ipfix\":[\"ipfix\"],\"application/its+xml\":[\"its\"],\"application/java-archive\":[\"jar\",\"war\",\"ear\"],\"application/java-serialized-object\":[\"ser\"],\"application/java-vm\":[\"class\"],\"application/javascript\":[\"js\",\"mjs\"],\"application/json\":[\"json\",\"map\"],\"application/json5\":[\"json5\"],\"application/jsonml+json\":[\"jsonml\"],\"application/ld+json\":[\"jsonld\"],\"application/lgr+xml\":[\"lgr\"],\"application/lost+xml\":[\"lostxml\"],\"application/mac-binhex40\":[\"hqx\"],\"application/mac-compactpro\":[\"cpt\"],\"application/mads+xml\":[\"mads\"],\"application/manifest+json\":[\"webmanifest\"],\"application/marc\":[\"mrc\"],\"application/marcxml+xml\":[\"mrcx\"],\"application/mathematica\":[\"ma\",\"nb\",\"mb\"],\"application/mathml+xml\":[\"mathml\"],\"application/mbox\":[\"mbox\"],\"application/mediaservercontrol+xml\":[\"mscml\"],\"application/metalink+xml\":[\"metalink\"],\"application/metalink4+xml\":[\"meta4\"],\"application/mets+xml\":[\"mets\"],\"application/mmt-aei+xml\":[\"maei\"],\"application/mmt-usd+xml\":[\"musd\"],\"application/mods+xml\":[\"mods\"],\"application/mp21\":[\"m21\",\"mp21\"],\"application/mp4\":[\"mp4s\",\"m4p\"],\"application/msword\":[\"doc\",\"dot\"],\"application/mxf\":[\"mxf\"],\"application/n-quads\":[\"nq\"],\"application/n-triples\":[\"nt\"],\"application/node\":[\"cjs\"],\"application/octet-stream\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"],\"application/oda\":[\"oda\"],\"application/oebps-package+xml\":[\"opf\"],\"application/ogg\":[\"ogx\"],\"application/omdoc+xml\":[\"omdoc\"],\"application/onenote\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"],\"application/oxps\":[\"oxps\"],\"application/p2p-overlay+xml\":[\"relo\"],\"application/patch-ops-error+xml\":[\"xer\"],\"application/pdf\":[\"pdf\"],\"application/pgp-encrypted\":[\"pgp\"],\"application/pgp-signature\":[\"asc\",\"sig\"],\"application/pics-rules\":[\"prf\"],\"application/pkcs10\":[\"p10\"],\"application/pkcs7-mime\":[\"p7m\",\"p7c\"],\"application/pkcs7-signature\":[\"p7s\"],\"application/pkcs8\":[\"p8\"],\"application/pkix-attr-cert\":[\"ac\"],\"application/pkix-cert\":[\"cer\"],\"application/pkix-crl\":[\"crl\"],\"application/pkix-pkipath\":[\"pkipath\"],\"application/pkixcmp\":[\"pki\"],\"application/pls+xml\":[\"pls\"],\"application/postscript\":[\"ai\",\"eps\",\"ps\"],\"application/provenance+xml\":[\"provx\"],\"application/pskc+xml\":[\"pskcxml\"],\"application/raml+yaml\":[\"raml\"],\"application/rdf+xml\":[\"rdf\",\"owl\"],\"application/reginfo+xml\":[\"rif\"],\"application/relax-ng-compact-syntax\":[\"rnc\"],\"application/resource-lists+xml\":[\"rl\"],\"application/resource-lists-diff+xml\":[\"rld\"],\"application/rls-services+xml\":[\"rs\"],\"application/route-apd+xml\":[\"rapd\"],\"application/route-s-tsid+xml\":[\"sls\"],\"application/route-usd+xml\":[\"rusd\"],\"application/rpki-ghostbusters\":[\"gbr\"],\"application/rpki-manifest\":[\"mft\"],\"application/rpki-roa\":[\"roa\"],\"application/rsd+xml\":[\"rsd\"],\"application/rss+xml\":[\"rss\"],\"application/rtf\":[\"rtf\"],\"application/sbml+xml\":[\"sbml\"],\"application/scvp-cv-request\":[\"scq\"],\"application/scvp-cv-response\":[\"scs\"],\"application/scvp-vp-request\":[\"spq\"],\"application/scvp-vp-response\":[\"spp\"],\"application/sdp\":[\"sdp\"],\"application/senml+xml\":[\"senmlx\"],\"application/sensml+xml\":[\"sensmlx\"],\"application/set-payment-initiation\":[\"setpay\"],\"application/set-registration-initiation\":[\"setreg\"],\"application/shf+xml\":[\"shf\"],\"application/sieve\":[\"siv\",\"sieve\"],\"application/smil+xml\":[\"smi\",\"smil\"],\"application/sparql-query\":[\"rq\"],\"application/sparql-results+xml\":[\"srx\"],\"application/srgs\":[\"gram\"],\"application/srgs+xml\":[\"grxml\"],\"application/sru+xml\":[\"sru\"],\"application/ssdl+xml\":[\"ssdl\"],\"application/ssml+xml\":[\"ssml\"],\"application/swid+xml\":[\"swidtag\"],\"application/tei+xml\":[\"tei\",\"teicorpus\"],\"application/thraud+xml\":[\"tfi\"],\"application/timestamped-data\":[\"tsd\"],\"application/toml\":[\"toml\"],\"application/trig\":[\"trig\"],\"application/ttml+xml\":[\"ttml\"],\"application/ubjson\":[\"ubj\"],\"application/urc-ressheet+xml\":[\"rsheet\"],\"application/urc-targetdesc+xml\":[\"td\"],\"application/voicexml+xml\":[\"vxml\"],\"application/wasm\":[\"wasm\"],\"application/widget\":[\"wgt\"],\"application/winhlp\":[\"hlp\"],\"application/wsdl+xml\":[\"wsdl\"],\"application/wspolicy+xml\":[\"wspolicy\"],\"application/xaml+xml\":[\"xaml\"],\"application/xcap-att+xml\":[\"xav\"],\"application/xcap-caps+xml\":[\"xca\"],\"application/xcap-diff+xml\":[\"xdf\"],\"application/xcap-el+xml\":[\"xel\"],\"application/xcap-ns+xml\":[\"xns\"],\"application/xenc+xml\":[\"xenc\"],\"application/xhtml+xml\":[\"xhtml\",\"xht\"],\"application/xliff+xml\":[\"xlf\"],\"application/xml\":[\"xml\",\"xsl\",\"xsd\",\"rng\"],\"application/xml-dtd\":[\"dtd\"],\"application/xop+xml\":[\"xop\"],\"application/xproc+xml\":[\"xpl\"],\"application/xslt+xml\":[\"*xsl\",\"xslt\"],\"application/xspf+xml\":[\"xspf\"],\"application/xv+xml\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"],\"application/yang\":[\"yang\"],\"application/yin+xml\":[\"yin\"],\"application/zip\":[\"zip\"],\"audio/3gpp\":[\"*3gpp\"],\"audio/adpcm\":[\"adp\"],\"audio/amr\":[\"amr\"],\"audio/basic\":[\"au\",\"snd\"],\"audio/midi\":[\"mid\",\"midi\",\"kar\",\"rmi\"],\"audio/mobile-xmf\":[\"mxmf\"],\"audio/mp3\":[\"*mp3\"],\"audio/mp4\":[\"m4a\",\"mp4a\"],\"audio/mpeg\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"],\"audio/ogg\":[\"oga\",\"ogg\",\"spx\",\"opus\"],\"audio/s3m\":[\"s3m\"],\"audio/silk\":[\"sil\"],\"audio/wav\":[\"wav\"],\"audio/wave\":[\"*wav\"],\"audio/webm\":[\"weba\"],\"audio/xm\":[\"xm\"],\"font/collection\":[\"ttc\"],\"font/otf\":[\"otf\"],\"font/ttf\":[\"ttf\"],\"font/woff\":[\"woff\"],\"font/woff2\":[\"woff2\"],\"image/aces\":[\"exr\"],\"image/apng\":[\"apng\"],\"image/avif\":[\"avif\"],\"image/bmp\":[\"bmp\"],\"image/cgm\":[\"cgm\"],\"image/dicom-rle\":[\"drle\"],\"image/emf\":[\"emf\"],\"image/fits\":[\"fits\"],\"image/g3fax\":[\"g3\"],\"image/gif\":[\"gif\"],\"image/heic\":[\"heic\"],\"image/heic-sequence\":[\"heics\"],\"image/heif\":[\"heif\"],\"image/heif-sequence\":[\"heifs\"],\"image/hej2k\":[\"hej2\"],\"image/hsj2\":[\"hsj2\"],\"image/ief\":[\"ief\"],\"image/jls\":[\"jls\"],\"image/jp2\":[\"jp2\",\"jpg2\"],\"image/jpeg\":[\"jpeg\",\"jpg\",\"jpe\"],\"image/jph\":[\"jph\"],\"image/jphc\":[\"jhc\"],\"image/jpm\":[\"jpm\"],\"image/jpx\":[\"jpx\",\"jpf\"],\"image/jxr\":[\"jxr\"],\"image/jxra\":[\"jxra\"],\"image/jxrs\":[\"jxrs\"],\"image/jxs\":[\"jxs\"],\"image/jxsc\":[\"jxsc\"],\"image/jxsi\":[\"jxsi\"],\"image/jxss\":[\"jxss\"],\"image/ktx\":[\"ktx\"],\"image/ktx2\":[\"ktx2\"],\"image/png\":[\"png\"],\"image/sgi\":[\"sgi\"],\"image/svg+xml\":[\"svg\",\"svgz\"],\"image/t38\":[\"t38\"],\"image/tiff\":[\"tif\",\"tiff\"],\"image/tiff-fx\":[\"tfx\"],\"image/webp\":[\"webp\"],\"image/wmf\":[\"wmf\"],\"message/disposition-notification\":[\"disposition-notification\"],\"message/global\":[\"u8msg\"],\"message/global-delivery-status\":[\"u8dsn\"],\"message/global-disposition-notification\":[\"u8mdn\"],\"message/global-headers\":[\"u8hdr\"],\"message/rfc822\":[\"eml\",\"mime\"],\"model/3mf\":[\"3mf\"],\"model/gltf+json\":[\"gltf\"],\"model/gltf-binary\":[\"glb\"],\"model/iges\":[\"igs\",\"iges\"],\"model/mesh\":[\"msh\",\"mesh\",\"silo\"],\"model/mtl\":[\"mtl\"],\"model/obj\":[\"obj\"],\"model/step+xml\":[\"stpx\"],\"model/step+zip\":[\"stpz\"],\"model/step-xml+zip\":[\"stpxz\"],\"model/stl\":[\"stl\"],\"model/vrml\":[\"wrl\",\"vrml\"],\"model/x3d+binary\":[\"*x3db\",\"x3dbz\"],\"model/x3d+fastinfoset\":[\"x3db\"],\"model/x3d+vrml\":[\"*x3dv\",\"x3dvz\"],\"model/x3d+xml\":[\"x3d\",\"x3dz\"],\"model/x3d-vrml\":[\"x3dv\"],\"text/cache-manifest\":[\"appcache\",\"manifest\"],\"text/calendar\":[\"ics\",\"ifb\"],\"text/coffeescript\":[\"coffee\",\"litcoffee\"],\"text/css\":[\"css\"],\"text/csv\":[\"csv\"],\"text/html\":[\"html\",\"htm\",\"shtml\"],\"text/jade\":[\"jade\"],\"text/jsx\":[\"jsx\"],\"text/less\":[\"less\"],\"text/markdown\":[\"markdown\",\"md\"],\"text/mathml\":[\"mml\"],\"text/mdx\":[\"mdx\"],\"text/n3\":[\"n3\"],\"text/plain\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"],\"text/richtext\":[\"rtx\"],\"text/rtf\":[\"*rtf\"],\"text/sgml\":[\"sgml\",\"sgm\"],\"text/shex\":[\"shex\"],\"text/slim\":[\"slim\",\"slm\"],\"text/spdx\":[\"spdx\"],\"text/stylus\":[\"stylus\",\"styl\"],\"text/tab-separated-values\":[\"tsv\"],\"text/troff\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"],\"text/turtle\":[\"ttl\"],\"text/uri-list\":[\"uri\",\"uris\",\"urls\"],\"text/vcard\":[\"vcard\"],\"text/vtt\":[\"vtt\"],\"text/xml\":[\"*xml\"],\"text/yaml\":[\"yaml\",\"yml\"],\"video/3gpp\":[\"3gp\",\"3gpp\"],\"video/3gpp2\":[\"3g2\"],\"video/h261\":[\"h261\"],\"video/h263\":[\"h263\"],\"video/h264\":[\"h264\"],\"video/iso.segment\":[\"m4s\"],\"video/jpeg\":[\"jpgv\"],\"video/jpm\":[\"*jpm\",\"jpgm\"],\"video/mj2\":[\"mj2\",\"mjp2\"],\"video/mp2t\":[\"ts\"],\"video/mp4\":[\"mp4\",\"mp4v\",\"mpg4\"],\"video/mpeg\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"],\"video/ogg\":[\"ogv\"],\"video/quicktime\":[\"qt\",\"mov\"],\"video/webm\":[\"webm\"]};", "module.exports = {\"application/prs.cww\":[\"cww\"],\"application/vnd.1000minds.decision-model+xml\":[\"1km\"],\"application/vnd.3gpp.pic-bw-large\":[\"plb\"],\"application/vnd.3gpp.pic-bw-small\":[\"psb\"],\"application/vnd.3gpp.pic-bw-var\":[\"pvb\"],\"application/vnd.3gpp2.tcap\":[\"tcap\"],\"application/vnd.3m.post-it-notes\":[\"pwn\"],\"application/vnd.accpac.simply.aso\":[\"aso\"],\"application/vnd.accpac.simply.imp\":[\"imp\"],\"application/vnd.acucobol\":[\"acu\"],\"application/vnd.acucorp\":[\"atc\",\"acutc\"],\"application/vnd.adobe.air-application-installer-package+zip\":[\"air\"],\"application/vnd.adobe.formscentral.fcdt\":[\"fcdt\"],\"application/vnd.adobe.fxp\":[\"fxp\",\"fxpl\"],\"application/vnd.adobe.xdp+xml\":[\"xdp\"],\"application/vnd.adobe.xfdf\":[\"xfdf\"],\"application/vnd.ahead.space\":[\"ahead\"],\"application/vnd.airzip.filesecure.azf\":[\"azf\"],\"application/vnd.airzip.filesecure.azs\":[\"azs\"],\"application/vnd.amazon.ebook\":[\"azw\"],\"application/vnd.americandynamics.acc\":[\"acc\"],\"application/vnd.amiga.ami\":[\"ami\"],\"application/vnd.android.package-archive\":[\"apk\"],\"application/vnd.anser-web-certificate-issue-initiation\":[\"cii\"],\"application/vnd.anser-web-funds-transfer-initiation\":[\"fti\"],\"application/vnd.antix.game-component\":[\"atx\"],\"application/vnd.apple.installer+xml\":[\"mpkg\"],\"application/vnd.apple.keynote\":[\"key\"],\"application/vnd.apple.mpegurl\":[\"m3u8\"],\"application/vnd.apple.numbers\":[\"numbers\"],\"application/vnd.apple.pages\":[\"pages\"],\"application/vnd.apple.pkpass\":[\"pkpass\"],\"application/vnd.aristanetworks.swi\":[\"swi\"],\"application/vnd.astraea-software.iota\":[\"iota\"],\"application/vnd.audiograph\":[\"aep\"],\"application/vnd.balsamiq.bmml+xml\":[\"bmml\"],\"application/vnd.blueice.multipass\":[\"mpm\"],\"application/vnd.bmi\":[\"bmi\"],\"application/vnd.businessobjects\":[\"rep\"],\"application/vnd.chemdraw+xml\":[\"cdxml\"],\"application/vnd.chipnuts.karaoke-mmd\":[\"mmd\"],\"application/vnd.cinderella\":[\"cdy\"],\"application/vnd.citationstyles.style+xml\":[\"csl\"],\"application/vnd.claymore\":[\"cla\"],\"application/vnd.cloanto.rp9\":[\"rp9\"],\"application/vnd.clonk.c4group\":[\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"],\"application/vnd.cluetrust.cartomobile-config\":[\"c11amc\"],\"application/vnd.cluetrust.cartomobile-config-pkg\":[\"c11amz\"],\"application/vnd.commonspace\":[\"csp\"],\"application/vnd.contact.cmsg\":[\"cdbcmsg\"],\"application/vnd.cosmocaller\":[\"cmc\"],\"application/vnd.crick.clicker\":[\"clkx\"],\"application/vnd.crick.clicker.keyboard\":[\"clkk\"],\"application/vnd.crick.clicker.palette\":[\"clkp\"],\"application/vnd.crick.clicker.template\":[\"clkt\"],\"application/vnd.crick.clicker.wordbank\":[\"clkw\"],\"application/vnd.criticaltools.wbs+xml\":[\"wbs\"],\"application/vnd.ctc-posml\":[\"pml\"],\"application/vnd.cups-ppd\":[\"ppd\"],\"application/vnd.curl.car\":[\"car\"],\"application/vnd.curl.pcurl\":[\"pcurl\"],\"application/vnd.dart\":[\"dart\"],\"application/vnd.data-vision.rdz\":[\"rdz\"],\"application/vnd.dbf\":[\"dbf\"],\"application/vnd.dece.data\":[\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"],\"application/vnd.dece.ttml+xml\":[\"uvt\",\"uvvt\"],\"application/vnd.dece.unspecified\":[\"uvx\",\"uvvx\"],\"application/vnd.dece.zip\":[\"uvz\",\"uvvz\"],\"application/vnd.denovo.fcselayout-link\":[\"fe_launch\"],\"application/vnd.dna\":[\"dna\"],\"application/vnd.dolby.mlp\":[\"mlp\"],\"application/vnd.dpgraph\":[\"dpg\"],\"application/vnd.dreamfactory\":[\"dfac\"],\"application/vnd.ds-keypoint\":[\"kpxx\"],\"application/vnd.dvb.ait\":[\"ait\"],\"application/vnd.dvb.service\":[\"svc\"],\"application/vnd.dynageo\":[\"geo\"],\"application/vnd.ecowin.chart\":[\"mag\"],\"application/vnd.enliven\":[\"nml\"],\"application/vnd.epson.esf\":[\"esf\"],\"application/vnd.epson.msf\":[\"msf\"],\"application/vnd.epson.quickanime\":[\"qam\"],\"application/vnd.epson.salt\":[\"slt\"],\"application/vnd.epson.ssf\":[\"ssf\"],\"application/vnd.eszigno3+xml\":[\"es3\",\"et3\"],\"application/vnd.ezpix-album\":[\"ez2\"],\"application/vnd.ezpix-package\":[\"ez3\"],\"application/vnd.fdf\":[\"fdf\"],\"application/vnd.fdsn.mseed\":[\"mseed\"],\"application/vnd.fdsn.seed\":[\"seed\",\"dataless\"],\"application/vnd.flographit\":[\"gph\"],\"application/vnd.fluxtime.clip\":[\"ftc\"],\"application/vnd.framemaker\":[\"fm\",\"frame\",\"maker\",\"book\"],\"application/vnd.frogans.fnc\":[\"fnc\"],\"application/vnd.frogans.ltf\":[\"ltf\"],\"application/vnd.fsc.weblaunch\":[\"fsc\"],\"application/vnd.fujitsu.oasys\":[\"oas\"],\"application/vnd.fujitsu.oasys2\":[\"oa2\"],\"application/vnd.fujitsu.oasys3\":[\"oa3\"],\"application/vnd.fujitsu.oasysgp\":[\"fg5\"],\"application/vnd.fujitsu.oasysprs\":[\"bh2\"],\"application/vnd.fujixerox.ddd\":[\"ddd\"],\"application/vnd.fujixerox.docuworks\":[\"xdw\"],\"application/vnd.fujixerox.docuworks.binder\":[\"xbd\"],\"application/vnd.fuzzysheet\":[\"fzs\"],\"application/vnd.genomatix.tuxedo\":[\"txd\"],\"application/vnd.geogebra.file\":[\"ggb\"],\"application/vnd.geogebra.tool\":[\"ggt\"],\"application/vnd.geometry-explorer\":[\"gex\",\"gre\"],\"application/vnd.geonext\":[\"gxt\"],\"application/vnd.geoplan\":[\"g2w\"],\"application/vnd.geospace\":[\"g3w\"],\"application/vnd.gmx\":[\"gmx\"],\"application/vnd.google-apps.document\":[\"gdoc\"],\"application/vnd.google-apps.presentation\":[\"gslides\"],\"application/vnd.google-apps.spreadsheet\":[\"gsheet\"],\"application/vnd.google-earth.kml+xml\":[\"kml\"],\"application/vnd.google-earth.kmz\":[\"kmz\"],\"application/vnd.grafeq\":[\"gqf\",\"gqs\"],\"application/vnd.groove-account\":[\"gac\"],\"application/vnd.groove-help\":[\"ghf\"],\"application/vnd.groove-identity-message\":[\"gim\"],\"application/vnd.groove-injector\":[\"grv\"],\"application/vnd.groove-tool-message\":[\"gtm\"],\"application/vnd.groove-tool-template\":[\"tpl\"],\"application/vnd.groove-vcard\":[\"vcg\"],\"application/vnd.hal+xml\":[\"hal\"],\"application/vnd.handheld-entertainment+xml\":[\"zmm\"],\"application/vnd.hbci\":[\"hbci\"],\"application/vnd.hhe.lesson-player\":[\"les\"],\"application/vnd.hp-hpgl\":[\"hpgl\"],\"application/vnd.hp-hpid\":[\"hpid\"],\"application/vnd.hp-hps\":[\"hps\"],\"application/vnd.hp-jlyt\":[\"jlt\"],\"application/vnd.hp-pcl\":[\"pcl\"],\"application/vnd.hp-pclxl\":[\"pclxl\"],\"application/vnd.hydrostatix.sof-data\":[\"sfd-hdstx\"],\"application/vnd.ibm.minipay\":[\"mpy\"],\"application/vnd.ibm.modcap\":[\"afp\",\"listafp\",\"list3820\"],\"application/vnd.ibm.rights-management\":[\"irm\"],\"application/vnd.ibm.secure-container\":[\"sc\"],\"application/vnd.iccprofile\":[\"icc\",\"icm\"],\"application/vnd.igloader\":[\"igl\"],\"application/vnd.immervision-ivp\":[\"ivp\"],\"application/vnd.immervision-ivu\":[\"ivu\"],\"application/vnd.insors.igm\":[\"igm\"],\"application/vnd.intercon.formnet\":[\"xpw\",\"xpx\"],\"application/vnd.intergeo\":[\"i2g\"],\"application/vnd.intu.qbo\":[\"qbo\"],\"application/vnd.intu.qfx\":[\"qfx\"],\"application/vnd.ipunplugged.rcprofile\":[\"rcprofile\"],\"application/vnd.irepository.package+xml\":[\"irp\"],\"application/vnd.is-xpr\":[\"xpr\"],\"application/vnd.isac.fcs\":[\"fcs\"],\"application/vnd.jam\":[\"jam\"],\"application/vnd.jcp.javame.midlet-rms\":[\"rms\"],\"application/vnd.jisp\":[\"jisp\"],\"application/vnd.joost.joda-archive\":[\"joda\"],\"application/vnd.kahootz\":[\"ktz\",\"ktr\"],\"application/vnd.kde.karbon\":[\"karbon\"],\"application/vnd.kde.kchart\":[\"chrt\"],\"application/vnd.kde.kformula\":[\"kfo\"],\"application/vnd.kde.kivio\":[\"flw\"],\"application/vnd.kde.kontour\":[\"kon\"],\"application/vnd.kde.kpresenter\":[\"kpr\",\"kpt\"],\"application/vnd.kde.kspread\":[\"ksp\"],\"application/vnd.kde.kword\":[\"kwd\",\"kwt\"],\"application/vnd.kenameaapp\":[\"htke\"],\"application/vnd.kidspiration\":[\"kia\"],\"application/vnd.kinar\":[\"kne\",\"knp\"],\"application/vnd.koan\":[\"skp\",\"skd\",\"skt\",\"skm\"],\"application/vnd.kodak-descriptor\":[\"sse\"],\"application/vnd.las.las+xml\":[\"lasxml\"],\"application/vnd.llamagraphics.life-balance.desktop\":[\"lbd\"],\"application/vnd.llamagraphics.life-balance.exchange+xml\":[\"lbe\"],\"application/vnd.lotus-1-2-3\":[\"123\"],\"application/vnd.lotus-approach\":[\"apr\"],\"application/vnd.lotus-freelance\":[\"pre\"],\"application/vnd.lotus-notes\":[\"nsf\"],\"application/vnd.lotus-organizer\":[\"org\"],\"application/vnd.lotus-screencam\":[\"scm\"],\"application/vnd.lotus-wordpro\":[\"lwp\"],\"application/vnd.macports.portpkg\":[\"portpkg\"],\"application/vnd.mapbox-vector-tile\":[\"mvt\"],\"application/vnd.mcd\":[\"mcd\"],\"application/vnd.medcalcdata\":[\"mc1\"],\"application/vnd.mediastation.cdkey\":[\"cdkey\"],\"application/vnd.mfer\":[\"mwf\"],\"application/vnd.mfmp\":[\"mfm\"],\"application/vnd.micrografx.flo\":[\"flo\"],\"application/vnd.micrografx.igx\":[\"igx\"],\"application/vnd.mif\":[\"mif\"],\"application/vnd.mobius.daf\":[\"daf\"],\"application/vnd.mobius.dis\":[\"dis\"],\"application/vnd.mobius.mbk\":[\"mbk\"],\"application/vnd.mobius.mqy\":[\"mqy\"],\"application/vnd.mobius.msl\":[\"msl\"],\"application/vnd.mobius.plc\":[\"plc\"],\"application/vnd.mobius.txf\":[\"txf\"],\"application/vnd.mophun.application\":[\"mpn\"],\"application/vnd.mophun.certificate\":[\"mpc\"],\"application/vnd.mozilla.xul+xml\":[\"xul\"],\"application/vnd.ms-artgalry\":[\"cil\"],\"application/vnd.ms-cab-compressed\":[\"cab\"],\"application/vnd.ms-excel\":[\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"],\"application/vnd.ms-excel.addin.macroenabled.12\":[\"xlam\"],\"application/vnd.ms-excel.sheet.binary.macroenabled.12\":[\"xlsb\"],\"application/vnd.ms-excel.sheet.macroenabled.12\":[\"xlsm\"],\"application/vnd.ms-excel.template.macroenabled.12\":[\"xltm\"],\"application/vnd.ms-fontobject\":[\"eot\"],\"application/vnd.ms-htmlhelp\":[\"chm\"],\"application/vnd.ms-ims\":[\"ims\"],\"application/vnd.ms-lrm\":[\"lrm\"],\"application/vnd.ms-officetheme\":[\"thmx\"],\"application/vnd.ms-outlook\":[\"msg\"],\"application/vnd.ms-pki.seccat\":[\"cat\"],\"application/vnd.ms-pki.stl\":[\"*stl\"],\"application/vnd.ms-powerpoint\":[\"ppt\",\"pps\",\"pot\"],\"application/vnd.ms-powerpoint.addin.macroenabled.12\":[\"ppam\"],\"application/vnd.ms-powerpoint.presentation.macroenabled.12\":[\"pptm\"],\"application/vnd.ms-powerpoint.slide.macroenabled.12\":[\"sldm\"],\"application/vnd.ms-powerpoint.slideshow.macroenabled.12\":[\"ppsm\"],\"application/vnd.ms-powerpoint.template.macroenabled.12\":[\"potm\"],\"application/vnd.ms-project\":[\"mpp\",\"mpt\"],\"application/vnd.ms-word.document.macroenabled.12\":[\"docm\"],\"application/vnd.ms-word.template.macroenabled.12\":[\"dotm\"],\"application/vnd.ms-works\":[\"wps\",\"wks\",\"wcm\",\"wdb\"],\"application/vnd.ms-wpl\":[\"wpl\"],\"application/vnd.ms-xpsdocument\":[\"xps\"],\"application/vnd.mseq\":[\"mseq\"],\"application/vnd.musician\":[\"mus\"],\"application/vnd.muvee.style\":[\"msty\"],\"application/vnd.mynfc\":[\"taglet\"],\"application/vnd.neurolanguage.nlu\":[\"nlu\"],\"application/vnd.nitf\":[\"ntf\",\"nitf\"],\"application/vnd.noblenet-directory\":[\"nnd\"],\"application/vnd.noblenet-sealer\":[\"nns\"],\"application/vnd.noblenet-web\":[\"nnw\"],\"application/vnd.nokia.n-gage.ac+xml\":[\"*ac\"],\"application/vnd.nokia.n-gage.data\":[\"ngdat\"],\"application/vnd.nokia.n-gage.symbian.install\":[\"n-gage\"],\"application/vnd.nokia.radio-preset\":[\"rpst\"],\"application/vnd.nokia.radio-presets\":[\"rpss\"],\"application/vnd.novadigm.edm\":[\"edm\"],\"application/vnd.novadigm.edx\":[\"edx\"],\"application/vnd.novadigm.ext\":[\"ext\"],\"application/vnd.oasis.opendocument.chart\":[\"odc\"],\"application/vnd.oasis.opendocument.chart-template\":[\"otc\"],\"application/vnd.oasis.opendocument.database\":[\"odb\"],\"application/vnd.oasis.opendocument.formula\":[\"odf\"],\"application/vnd.oasis.opendocument.formula-template\":[\"odft\"],\"application/vnd.oasis.opendocument.graphics\":[\"odg\"],\"application/vnd.oasis.opendocument.graphics-template\":[\"otg\"],\"application/vnd.oasis.opendocument.image\":[\"odi\"],\"application/vnd.oasis.opendocument.image-template\":[\"oti\"],\"application/vnd.oasis.opendocument.presentation\":[\"odp\"],\"application/vnd.oasis.opendocument.presentation-template\":[\"otp\"],\"application/vnd.oasis.opendocument.spreadsheet\":[\"ods\"],\"application/vnd.oasis.opendocument.spreadsheet-template\":[\"ots\"],\"application/vnd.oasis.opendocument.text\":[\"odt\"],\"application/vnd.oasis.opendocument.text-master\":[\"odm\"],\"application/vnd.oasis.opendocument.text-template\":[\"ott\"],\"application/vnd.oasis.opendocument.text-web\":[\"oth\"],\"application/vnd.olpc-sugar\":[\"xo\"],\"application/vnd.oma.dd2+xml\":[\"dd2\"],\"application/vnd.openblox.game+xml\":[\"obgx\"],\"application/vnd.openofficeorg.extension\":[\"oxt\"],\"application/vnd.openstreetmap.data+xml\":[\"osm\"],\"application/vnd.openxmlformats-officedocument.presentationml.presentation\":[\"pptx\"],\"application/vnd.openxmlformats-officedocument.presentationml.slide\":[\"sldx\"],\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\":[\"ppsx\"],\"application/vnd.openxmlformats-officedocument.presentationml.template\":[\"potx\"],\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":[\"xlsx\"],\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\":[\"xltx\"],\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":[\"docx\"],\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\":[\"dotx\"],\"application/vnd.osgeo.mapguide.package\":[\"mgp\"],\"application/vnd.osgi.dp\":[\"dp\"],\"application/vnd.osgi.subsystem\":[\"esa\"],\"application/vnd.palm\":[\"pdb\",\"pqa\",\"oprc\"],\"application/vnd.pawaafile\":[\"paw\"],\"application/vnd.pg.format\":[\"str\"],\"application/vnd.pg.osasli\":[\"ei6\"],\"application/vnd.picsel\":[\"efif\"],\"application/vnd.pmi.widget\":[\"wg\"],\"application/vnd.pocketlearn\":[\"plf\"],\"application/vnd.powerbuilder6\":[\"pbd\"],\"application/vnd.previewsystems.box\":[\"box\"],\"application/vnd.proteus.magazine\":[\"mgz\"],\"application/vnd.publishare-delta-tree\":[\"qps\"],\"application/vnd.pvi.ptid1\":[\"ptid\"],\"application/vnd.quark.quarkxpress\":[\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"],\"application/vnd.rar\":[\"rar\"],\"application/vnd.realvnc.bed\":[\"bed\"],\"application/vnd.recordare.musicxml\":[\"mxl\"],\"application/vnd.recordare.musicxml+xml\":[\"musicxml\"],\"application/vnd.rig.cryptonote\":[\"cryptonote\"],\"application/vnd.rim.cod\":[\"cod\"],\"application/vnd.rn-realmedia\":[\"rm\"],\"application/vnd.rn-realmedia-vbr\":[\"rmvb\"],\"application/vnd.route66.link66+xml\":[\"link66\"],\"application/vnd.sailingtracker.track\":[\"st\"],\"application/vnd.seemail\":[\"see\"],\"application/vnd.sema\":[\"sema\"],\"application/vnd.semd\":[\"semd\"],\"application/vnd.semf\":[\"semf\"],\"application/vnd.shana.informed.formdata\":[\"ifm\"],\"application/vnd.shana.informed.formtemplate\":[\"itp\"],\"application/vnd.shana.informed.interchange\":[\"iif\"],\"application/vnd.shana.informed.package\":[\"ipk\"],\"application/vnd.simtech-mindmapper\":[\"twd\",\"twds\"],\"application/vnd.smaf\":[\"mmf\"],\"application/vnd.smart.teacher\":[\"teacher\"],\"application/vnd.software602.filler.form+xml\":[\"fo\"],\"application/vnd.solent.sdkm+xml\":[\"sdkm\",\"sdkd\"],\"application/vnd.spotfire.dxp\":[\"dxp\"],\"application/vnd.spotfire.sfs\":[\"sfs\"],\"application/vnd.stardivision.calc\":[\"sdc\"],\"application/vnd.stardivision.draw\":[\"sda\"],\"application/vnd.stardivision.impress\":[\"sdd\"],\"application/vnd.stardivision.math\":[\"smf\"],\"application/vnd.stardivision.writer\":[\"sdw\",\"vor\"],\"application/vnd.stardivision.writer-global\":[\"sgl\"],\"application/vnd.stepmania.package\":[\"smzip\"],\"application/vnd.stepmania.stepchart\":[\"sm\"],\"application/vnd.sun.wadl+xml\":[\"wadl\"],\"application/vnd.sun.xml.calc\":[\"sxc\"],\"application/vnd.sun.xml.calc.template\":[\"stc\"],\"application/vnd.sun.xml.draw\":[\"sxd\"],\"application/vnd.sun.xml.draw.template\":[\"std\"],\"application/vnd.sun.xml.impress\":[\"sxi\"],\"application/vnd.sun.xml.impress.template\":[\"sti\"],\"application/vnd.sun.xml.math\":[\"sxm\"],\"application/vnd.sun.xml.writer\":[\"sxw\"],\"application/vnd.sun.xml.writer.global\":[\"sxg\"],\"application/vnd.sun.xml.writer.template\":[\"stw\"],\"application/vnd.sus-calendar\":[\"sus\",\"susp\"],\"application/vnd.svd\":[\"svd\"],\"application/vnd.symbian.install\":[\"sis\",\"sisx\"],\"application/vnd.syncml+xml\":[\"xsm\"],\"application/vnd.syncml.dm+wbxml\":[\"bdm\"],\"application/vnd.syncml.dm+xml\":[\"xdm\"],\"application/vnd.syncml.dmddf+xml\":[\"ddf\"],\"application/vnd.tao.intent-module-archive\":[\"tao\"],\"application/vnd.tcpdump.pcap\":[\"pcap\",\"cap\",\"dmp\"],\"application/vnd.tmobile-livetv\":[\"tmo\"],\"application/vnd.trid.tpt\":[\"tpt\"],\"application/vnd.triscape.mxs\":[\"mxs\"],\"application/vnd.trueapp\":[\"tra\"],\"application/vnd.ufdl\":[\"ufd\",\"ufdl\"],\"application/vnd.uiq.theme\":[\"utz\"],\"application/vnd.umajin\":[\"umj\"],\"application/vnd.unity\":[\"unityweb\"],\"application/vnd.uoml+xml\":[\"uoml\"],\"application/vnd.vcx\":[\"vcx\"],\"application/vnd.visio\":[\"vsd\",\"vst\",\"vss\",\"vsw\"],\"application/vnd.visionary\":[\"vis\"],\"application/vnd.vsf\":[\"vsf\"],\"application/vnd.wap.wbxml\":[\"wbxml\"],\"application/vnd.wap.wmlc\":[\"wmlc\"],\"application/vnd.wap.wmlscriptc\":[\"wmlsc\"],\"application/vnd.webturbo\":[\"wtb\"],\"application/vnd.wolfram.player\":[\"nbp\"],\"application/vnd.wordperfect\":[\"wpd\"],\"application/vnd.wqd\":[\"wqd\"],\"application/vnd.wt.stf\":[\"stf\"],\"application/vnd.xara\":[\"xar\"],\"application/vnd.xfdl\":[\"xfdl\"],\"application/vnd.yamaha.hv-dic\":[\"hvd\"],\"application/vnd.yamaha.hv-script\":[\"hvs\"],\"application/vnd.yamaha.hv-voice\":[\"hvp\"],\"application/vnd.yamaha.openscoreformat\":[\"osf\"],\"application/vnd.yamaha.openscoreformat.osfpvg+xml\":[\"osfpvg\"],\"application/vnd.yamaha.smaf-audio\":[\"saf\"],\"application/vnd.yamaha.smaf-phrase\":[\"spf\"],\"application/vnd.yellowriver-custom-menu\":[\"cmp\"],\"application/vnd.zul\":[\"zir\",\"zirz\"],\"application/vnd.zzazz.deck+xml\":[\"zaz\"],\"application/x-7z-compressed\":[\"7z\"],\"application/x-abiword\":[\"abw\"],\"application/x-ace-compressed\":[\"ace\"],\"application/x-apple-diskimage\":[\"*dmg\"],\"application/x-arj\":[\"arj\"],\"application/x-authorware-bin\":[\"aab\",\"x32\",\"u32\",\"vox\"],\"application/x-authorware-map\":[\"aam\"],\"application/x-authorware-seg\":[\"aas\"],\"application/x-bcpio\":[\"bcpio\"],\"application/x-bdoc\":[\"*bdoc\"],\"application/x-bittorrent\":[\"torrent\"],\"application/x-blorb\":[\"blb\",\"blorb\"],\"application/x-bzip\":[\"bz\"],\"application/x-bzip2\":[\"bz2\",\"boz\"],\"application/x-cbr\":[\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"],\"application/x-cdlink\":[\"vcd\"],\"application/x-cfs-compressed\":[\"cfs\"],\"application/x-chat\":[\"chat\"],\"application/x-chess-pgn\":[\"pgn\"],\"application/x-chrome-extension\":[\"crx\"],\"application/x-cocoa\":[\"cco\"],\"application/x-conference\":[\"nsc\"],\"application/x-cpio\":[\"cpio\"],\"application/x-csh\":[\"csh\"],\"application/x-debian-package\":[\"*deb\",\"udeb\"],\"application/x-dgc-compressed\":[\"dgc\"],\"application/x-director\":[\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"],\"application/x-doom\":[\"wad\"],\"application/x-dtbncx+xml\":[\"ncx\"],\"application/x-dtbook+xml\":[\"dtb\"],\"application/x-dtbresource+xml\":[\"res\"],\"application/x-dvi\":[\"dvi\"],\"application/x-envoy\":[\"evy\"],\"application/x-eva\":[\"eva\"],\"application/x-font-bdf\":[\"bdf\"],\"application/x-font-ghostscript\":[\"gsf\"],\"application/x-font-linux-psf\":[\"psf\"],\"application/x-font-pcf\":[\"pcf\"],\"application/x-font-snf\":[\"snf\"],\"application/x-font-type1\":[\"pfa\",\"pfb\",\"pfm\",\"afm\"],\"application/x-freearc\":[\"arc\"],\"application/x-futuresplash\":[\"spl\"],\"application/x-gca-compressed\":[\"gca\"],\"application/x-glulx\":[\"ulx\"],\"application/x-gnumeric\":[\"gnumeric\"],\"application/x-gramps-xml\":[\"gramps\"],\"application/x-gtar\":[\"gtar\"],\"application/x-hdf\":[\"hdf\"],\"application/x-httpd-php\":[\"php\"],\"application/x-install-instructions\":[\"install\"],\"application/x-iso9660-image\":[\"*iso\"],\"application/x-iwork-keynote-sffkey\":[\"*key\"],\"application/x-iwork-numbers-sffnumbers\":[\"*numbers\"],\"application/x-iwork-pages-sffpages\":[\"*pages\"],\"application/x-java-archive-diff\":[\"jardiff\"],\"application/x-java-jnlp-file\":[\"jnlp\"],\"application/x-keepass2\":[\"kdbx\"],\"application/x-latex\":[\"latex\"],\"application/x-lua-bytecode\":[\"luac\"],\"application/x-lzh-compressed\":[\"lzh\",\"lha\"],\"application/x-makeself\":[\"run\"],\"application/x-mie\":[\"mie\"],\"application/x-mobipocket-ebook\":[\"prc\",\"mobi\"],\"application/x-ms-application\":[\"application\"],\"application/x-ms-shortcut\":[\"lnk\"],\"application/x-ms-wmd\":[\"wmd\"],\"application/x-ms-wmz\":[\"wmz\"],\"application/x-ms-xbap\":[\"xbap\"],\"application/x-msaccess\":[\"mdb\"],\"application/x-msbinder\":[\"obd\"],\"application/x-mscardfile\":[\"crd\"],\"application/x-msclip\":[\"clp\"],\"application/x-msdos-program\":[\"*exe\"],\"application/x-msdownload\":[\"*exe\",\"*dll\",\"com\",\"bat\",\"*msi\"],\"application/x-msmediaview\":[\"mvb\",\"m13\",\"m14\"],\"application/x-msmetafile\":[\"*wmf\",\"*wmz\",\"*emf\",\"emz\"],\"application/x-msmoney\":[\"mny\"],\"application/x-mspublisher\":[\"pub\"],\"application/x-msschedule\":[\"scd\"],\"application/x-msterminal\":[\"trm\"],\"application/x-mswrite\":[\"wri\"],\"application/x-netcdf\":[\"nc\",\"cdf\"],\"application/x-ns-proxy-autoconfig\":[\"pac\"],\"application/x-nzb\":[\"nzb\"],\"application/x-perl\":[\"pl\",\"pm\"],\"application/x-pilot\":[\"*prc\",\"*pdb\"],\"application/x-pkcs12\":[\"p12\",\"pfx\"],\"application/x-pkcs7-certificates\":[\"p7b\",\"spc\"],\"application/x-pkcs7-certreqresp\":[\"p7r\"],\"application/x-rar-compressed\":[\"*rar\"],\"application/x-redhat-package-manager\":[\"rpm\"],\"application/x-research-info-systems\":[\"ris\"],\"application/x-sea\":[\"sea\"],\"application/x-sh\":[\"sh\"],\"application/x-shar\":[\"shar\"],\"application/x-shockwave-flash\":[\"swf\"],\"application/x-silverlight-app\":[\"xap\"],\"application/x-sql\":[\"sql\"],\"application/x-stuffit\":[\"sit\"],\"application/x-stuffitx\":[\"sitx\"],\"application/x-subrip\":[\"srt\"],\"application/x-sv4cpio\":[\"sv4cpio\"],\"application/x-sv4crc\":[\"sv4crc\"],\"application/x-t3vm-image\":[\"t3\"],\"application/x-tads\":[\"gam\"],\"application/x-tar\":[\"tar\"],\"application/x-tcl\":[\"tcl\",\"tk\"],\"application/x-tex\":[\"tex\"],\"application/x-tex-tfm\":[\"tfm\"],\"application/x-texinfo\":[\"texinfo\",\"texi\"],\"application/x-tgif\":[\"*obj\"],\"application/x-ustar\":[\"ustar\"],\"application/x-virtualbox-hdd\":[\"hdd\"],\"application/x-virtualbox-ova\":[\"ova\"],\"application/x-virtualbox-ovf\":[\"ovf\"],\"application/x-virtualbox-vbox\":[\"vbox\"],\"application/x-virtualbox-vbox-extpack\":[\"vbox-extpack\"],\"application/x-virtualbox-vdi\":[\"vdi\"],\"application/x-virtualbox-vhd\":[\"vhd\"],\"application/x-virtualbox-vmdk\":[\"vmdk\"],\"application/x-wais-source\":[\"src\"],\"application/x-web-app-manifest+json\":[\"webapp\"],\"application/x-x509-ca-cert\":[\"der\",\"crt\",\"pem\"],\"application/x-xfig\":[\"fig\"],\"application/x-xliff+xml\":[\"*xlf\"],\"application/x-xpinstall\":[\"xpi\"],\"application/x-xz\":[\"xz\"],\"application/x-zmachine\":[\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"],\"audio/vnd.dece.audio\":[\"uva\",\"uvva\"],\"audio/vnd.digital-winds\":[\"eol\"],\"audio/vnd.dra\":[\"dra\"],\"audio/vnd.dts\":[\"dts\"],\"audio/vnd.dts.hd\":[\"dtshd\"],\"audio/vnd.lucent.voice\":[\"lvp\"],\"audio/vnd.ms-playready.media.pya\":[\"pya\"],\"audio/vnd.nuera.ecelp4800\":[\"ecelp4800\"],\"audio/vnd.nuera.ecelp7470\":[\"ecelp7470\"],\"audio/vnd.nuera.ecelp9600\":[\"ecelp9600\"],\"audio/vnd.rip\":[\"rip\"],\"audio/x-aac\":[\"aac\"],\"audio/x-aiff\":[\"aif\",\"aiff\",\"aifc\"],\"audio/x-caf\":[\"caf\"],\"audio/x-flac\":[\"flac\"],\"audio/x-m4a\":[\"*m4a\"],\"audio/x-matroska\":[\"mka\"],\"audio/x-mpegurl\":[\"m3u\"],\"audio/x-ms-wax\":[\"wax\"],\"audio/x-ms-wma\":[\"wma\"],\"audio/x-pn-realaudio\":[\"ram\",\"ra\"],\"audio/x-pn-realaudio-plugin\":[\"rmp\"],\"audio/x-realaudio\":[\"*ra\"],\"audio/x-wav\":[\"*wav\"],\"chemical/x-cdx\":[\"cdx\"],\"chemical/x-cif\":[\"cif\"],\"chemical/x-cmdf\":[\"cmdf\"],\"chemical/x-cml\":[\"cml\"],\"chemical/x-csml\":[\"csml\"],\"chemical/x-xyz\":[\"xyz\"],\"image/prs.btif\":[\"btif\"],\"image/prs.pti\":[\"pti\"],\"image/vnd.adobe.photoshop\":[\"psd\"],\"image/vnd.airzip.accelerator.azv\":[\"azv\"],\"image/vnd.dece.graphic\":[\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"],\"image/vnd.djvu\":[\"djvu\",\"djv\"],\"image/vnd.dvb.subtitle\":[\"*sub\"],\"image/vnd.dwg\":[\"dwg\"],\"image/vnd.dxf\":[\"dxf\"],\"image/vnd.fastbidsheet\":[\"fbs\"],\"image/vnd.fpx\":[\"fpx\"],\"image/vnd.fst\":[\"fst\"],\"image/vnd.fujixerox.edmics-mmr\":[\"mmr\"],\"image/vnd.fujixerox.edmics-rlc\":[\"rlc\"],\"image/vnd.microsoft.icon\":[\"ico\"],\"image/vnd.ms-dds\":[\"dds\"],\"image/vnd.ms-modi\":[\"mdi\"],\"image/vnd.ms-photo\":[\"wdp\"],\"image/vnd.net-fpx\":[\"npx\"],\"image/vnd.pco.b16\":[\"b16\"],\"image/vnd.tencent.tap\":[\"tap\"],\"image/vnd.valve.source.texture\":[\"vtf\"],\"image/vnd.wap.wbmp\":[\"wbmp\"],\"image/vnd.xiff\":[\"xif\"],\"image/vnd.zbrush.pcx\":[\"pcx\"],\"image/x-3ds\":[\"3ds\"],\"image/x-cmu-raster\":[\"ras\"],\"image/x-cmx\":[\"cmx\"],\"image/x-freehand\":[\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"],\"image/x-icon\":[\"*ico\"],\"image/x-jng\":[\"jng\"],\"image/x-mrsid-image\":[\"sid\"],\"image/x-ms-bmp\":[\"*bmp\"],\"image/x-pcx\":[\"*pcx\"],\"image/x-pict\":[\"pic\",\"pct\"],\"image/x-portable-anymap\":[\"pnm\"],\"image/x-portable-bitmap\":[\"pbm\"],\"image/x-portable-graymap\":[\"pgm\"],\"image/x-portable-pixmap\":[\"ppm\"],\"image/x-rgb\":[\"rgb\"],\"image/x-tga\":[\"tga\"],\"image/x-xbitmap\":[\"xbm\"],\"image/x-xpixmap\":[\"xpm\"],\"image/x-xwindowdump\":[\"xwd\"],\"message/vnd.wfa.wsc\":[\"wsc\"],\"model/vnd.collada+xml\":[\"dae\"],\"model/vnd.dwf\":[\"dwf\"],\"model/vnd.gdl\":[\"gdl\"],\"model/vnd.gtw\":[\"gtw\"],\"model/vnd.mts\":[\"mts\"],\"model/vnd.opengex\":[\"ogex\"],\"model/vnd.parasolid.transmit.binary\":[\"x_b\"],\"model/vnd.parasolid.transmit.text\":[\"x_t\"],\"model/vnd.sap.vds\":[\"vds\"],\"model/vnd.usdz+zip\":[\"usdz\"],\"model/vnd.valve.source.compiled-map\":[\"bsp\"],\"model/vnd.vtu\":[\"vtu\"],\"text/prs.lines.tag\":[\"dsc\"],\"text/vnd.curl\":[\"curl\"],\"text/vnd.curl.dcurl\":[\"dcurl\"],\"text/vnd.curl.mcurl\":[\"mcurl\"],\"text/vnd.curl.scurl\":[\"scurl\"],\"text/vnd.dvb.subtitle\":[\"sub\"],\"text/vnd.fly\":[\"fly\"],\"text/vnd.fmi.flexstor\":[\"flx\"],\"text/vnd.graphviz\":[\"gv\"],\"text/vnd.in3d.3dml\":[\"3dml\"],\"text/vnd.in3d.spot\":[\"spot\"],\"text/vnd.sun.j2me.app-descriptor\":[\"jad\"],\"text/vnd.wap.wml\":[\"wml\"],\"text/vnd.wap.wmlscript\":[\"wmls\"],\"text/x-asm\":[\"s\",\"asm\"],\"text/x-c\":[\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"],\"text/x-component\":[\"htc\"],\"text/x-fortran\":[\"f\",\"for\",\"f77\",\"f90\"],\"text/x-handlebars-template\":[\"hbs\"],\"text/x-java-source\":[\"java\"],\"text/x-lua\":[\"lua\"],\"text/x-markdown\":[\"mkd\"],\"text/x-nfo\":[\"nfo\"],\"text/x-opml\":[\"opml\"],\"text/x-org\":[\"*org\"],\"text/x-pascal\":[\"p\",\"pas\"],\"text/x-processing\":[\"pde\"],\"text/x-sass\":[\"sass\"],\"text/x-scss\":[\"scss\"],\"text/x-setext\":[\"etx\"],\"text/x-sfv\":[\"sfv\"],\"text/x-suse-ymp\":[\"ymp\"],\"text/x-uuencode\":[\"uu\"],\"text/x-vcalendar\":[\"vcs\"],\"text/x-vcard\":[\"vcf\"],\"video/vnd.dece.hd\":[\"uvh\",\"uvvh\"],\"video/vnd.dece.mobile\":[\"uvm\",\"uvvm\"],\"video/vnd.dece.pd\":[\"uvp\",\"uvvp\"],\"video/vnd.dece.sd\":[\"uvs\",\"uvvs\"],\"video/vnd.dece.video\":[\"uvv\",\"uvvv\"],\"video/vnd.dvb.file\":[\"dvb\"],\"video/vnd.fvt\":[\"fvt\"],\"video/vnd.mpegurl\":[\"mxu\",\"m4u\"],\"video/vnd.ms-playready.media.pyv\":[\"pyv\"],\"video/vnd.uvvu.mp4\":[\"uvu\",\"uvvu\"],\"video/vnd.vivo\":[\"viv\"],\"video/x-f4v\":[\"f4v\"],\"video/x-fli\":[\"fli\"],\"video/x-flv\":[\"flv\"],\"video/x-m4v\":[\"m4v\"],\"video/x-matroska\":[\"mkv\",\"mk3d\",\"mks\"],\"video/x-mng\":[\"mng\"],\"video/x-ms-asf\":[\"asf\",\"asx\"],\"video/x-ms-vob\":[\"vob\"],\"video/x-ms-wm\":[\"wm\"],\"video/x-ms-wmv\":[\"wmv\"],\"video/x-ms-wmx\":[\"wmx\"],\"video/x-ms-wvx\":[\"wvx\"],\"video/x-msvideo\":[\"avi\"],\"video/x-sgi-movie\":[\"movie\"],\"video/x-smv\":[\"smv\"],\"x-conference/x-cooltalk\":[\"ice\"]};", "'use strict';\n\nlet Mime = require('./Mime');\nmodule.exports = new Mime(require('./types/standard'), require('./types/other'));\n", "import { IQueryParameter } from '../models';\r\n\r\nexport class UrlHelper {\r\n\r\n    /**\r\n   * Adds query parameters to given url\r\n   * @param url Url to which options will be added\r\n   * @param options Query parameters to add\r\n   */\r\n    addOptionsToUrl(url: string, options?: IQueryParameter[]): string {\r\n        if (options) {\r\n            options.forEach(filter => {\r\n                if (url.indexOf('?') > -1) {\r\n                    url += '&';\r\n                } else {\r\n                    url += '?';\r\n                }\r\n\r\n                url += filter.getParam();\r\n            });\r\n        }\r\n        return url;\r\n    }\r\n}\r\n\r\nexport const urlHelper = new UrlHelper();\r\n", "import { ISDKInfo } from '../models';\r\n\r\nimport { IHeader } from '../http/http.models';\r\n\r\nexport class HeaderHelper {\r\n\r\n    /**\r\n    * Header name for SDK usage\r\n    */\r\n    private readonly sdkVersionHeader: string = 'X-KC-SDKID';\r\n\r\n    /**\r\n    * Header identifying SDK type & version for internal purposes of Kontent.ai\r\n    */\r\n    getSdkIdHeader(info: ISDKInfo): IHeader {\r\n        return {\r\n            header: this.sdkVersionHeader,\r\n            value: `${info.host};${info.name};${info.version}`\r\n        };\r\n    }\r\n}\r\n\r\nexport const headerHelper = new HeaderHelper();\r\n", "import { AxiosResponse } from 'axios';\r\nimport { IHeader } from '../http/http.models';\r\n\r\nexport function extractHeadersFromAxiosResponse(response: AxiosResponse): IHeader[] {\r\n    const headers: IHeader[] = [];\r\n\r\n    for (const headerKey of Object.keys(response.headers)) {\r\n        headers.push({\r\n            header: headerKey,\r\n            value: response.headers[headerKey]\r\n        });\r\n    }\r\n\r\n    return headers;\r\n}\r\n", "import { AxiosError } from 'axios';\r\n\r\nimport { extractHeadersFromAxiosResponse } from './headers-helper';\r\nimport { IHeader, IRetryStrategyOptions } from '../http/http.models';\r\n\r\nexport class RetryHelper {\r\n    public readonly requestCancelledMessagePrefix: string = 'Request cancelled';\r\n    public readonly retryAfterHeaderName: string = 'Retry-After';\r\n    public readonly defaultRetryStatusCodes: number[] = [408, 429, 500, 502, 503, 504];\r\n    public readonly defaultRetryStrategy = {\r\n        addJitter: true,\r\n        deltaBackoffMs: 1000, // 1 sec\r\n        maxAttempts: 5,\r\n        canRetryError: (error: any) => this.canRetryErrorDefault(error)\r\n    };\r\n\r\n    getRetryErrorResult(data: {\r\n        retryAttempt: number;\r\n        error: any;\r\n        retryStrategy: IRetryStrategyOptions;\r\n    }): {\r\n        retryInMs: number;\r\n        canRetry: boolean;\r\n        maxRetries: number;\r\n    } {\r\n        if (data.error && data.error.message) {\r\n            if ((<string>data.error.message).startsWith(this.requestCancelledMessagePrefix)) {\r\n                // request was cancelled by user, do not retry it\r\n                return {\r\n                    canRetry: false,\r\n                    retryInMs: 0,\r\n                    maxRetries: 0\r\n                };\r\n            }\r\n        }\r\n\r\n        const canRetryError: boolean = data.retryStrategy.canRetryError\r\n            ? data.retryStrategy.canRetryError(data.error)\r\n            : this.defaultRetryStrategy.canRetryError(data.error);\r\n\r\n        if (!canRetryError) {\r\n            // request cannot be retried\r\n            return {\r\n                canRetry: false,\r\n                retryInMs: 0,\r\n                maxRetries: 0\r\n            };\r\n        }\r\n\r\n        const maxRetries: number = (data.retryStrategy.maxAttempts ?? this.defaultRetryStrategy.maxAttempts);\r\n\r\n        const maxRetriesReached: boolean =\r\n            data.retryAttempt >= maxRetries;\r\n\r\n        if (maxRetriesReached) {\r\n            // request cannot be retried anymore due to maximum attempts\r\n            return {\r\n                canRetry: false,\r\n                retryInMs: 0,\r\n                maxRetries: maxRetries\r\n            };\r\n        }\r\n        // get wait time\r\n        const retryResult: number | undefined = this.tryGetRetryAfterInMsFromError(data.error);\r\n\r\n        if (retryResult) {\r\n            // retry after header was provided\r\n            return {\r\n                canRetry: true,\r\n                retryInMs: retryResult,\r\n                maxRetries: maxRetries\r\n            };\r\n        }\r\n\r\n        // wait time was not provided in header\r\n        const waitTimeMs = this.getNextWaitTimeMs(\r\n            data.retryStrategy.addJitter ?? this.defaultRetryStrategy.addJitter,\r\n            data.retryStrategy.deltaBackoffMs ?? this.defaultRetryStrategy.deltaBackoffMs,\r\n            data.retryAttempt\r\n        );\r\n\r\n        return {\r\n            canRetry: true,\r\n            retryInMs: waitTimeMs,\r\n            maxRetries: maxRetries\r\n        };\r\n    }\r\n\r\n    getRetryStrategyFromStrategyOptions(retryOptions?: IRetryStrategyOptions): IRetryStrategyOptions {\r\n        if (!retryOptions) {\r\n            return this.defaultRetryStrategy;\r\n        }\r\n\r\n        return retryOptions;\r\n    }\r\n\r\n    canRetryInTime(\r\n        startTime: Date,\r\n        maxCumulativeWaitTimeMs: number\r\n    ): {\r\n        canRetry: boolean;\r\n        differenceInMs: number;\r\n    } {\r\n        const start = startTime.getTime();\r\n        const now = new Date().getTime();\r\n\r\n        const differenceInMs = now - start;\r\n\r\n        return {\r\n            canRetry: differenceInMs < maxCumulativeWaitTimeMs,\r\n            differenceInMs: differenceInMs\r\n        };\r\n    }\r\n\r\n    private getNextWaitTimeMs(addJitter: boolean, deltaBackoffMs: number, retryAttempts: number): number {\r\n        if (!addJitter) {\r\n            return deltaBackoffMs * Math.pow(2, retryAttempts);\r\n        }\r\n\r\n        const from: number = 0.8 * deltaBackoffMs;\r\n        const to: number = 1.2 * deltaBackoffMs * Math.pow(2, retryAttempts);\r\n\r\n        return this.randomNumberFromInterval(from, to);\r\n    }\r\n\r\n    private canRetryErrorDefault(error: any): boolean {\r\n        const axiosError = this.tryGetAxiosError(error);\r\n\r\n        if (!axiosError) {\r\n            // by default non-axios errors are not retried\r\n            return false;\r\n        }\r\n\r\n        const statusCode: number = this.getStatusCodeFromError(error);\r\n        const canRetryStatusCode: boolean = this.canRetryStatusCode(statusCode, this.defaultRetryStatusCodes);\r\n\r\n        if (canRetryStatusCode) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private tryGetRetryAfterInMsFromError(error: any): number | undefined {\r\n        const axiosError = this.tryGetAxiosError(error);\r\n\r\n        if (!axiosError || !axiosError.response) {\r\n            return undefined;\r\n        }\r\n\r\n        const headers: IHeader[] = extractHeadersFromAxiosResponse(axiosError.response);\r\n\r\n        const retryValueHeader = headers.find(\r\n            (m) => m.header.toLowerCase() === this.retryAfterHeaderName.toLowerCase()\r\n        );\r\n        if (!retryValueHeader) {\r\n            return undefined;\r\n        }\r\n\r\n        const retryInSeconds = +retryValueHeader.value;\r\n\r\n        return retryInSeconds * 1000;\r\n    }\r\n\r\n    private canRetryStatusCode(statusCode: number, useRetryForResponseCodes: number[]): boolean {\r\n        return useRetryForResponseCodes.includes(statusCode);\r\n    }\r\n\r\n    private getStatusCodeFromError(error: any): number {\r\n        const axiosError = this.tryGetAxiosError(error);\r\n\r\n        if (!axiosError || !axiosError.response) {\r\n            return 0;\r\n        }\r\n\r\n        return axiosError.response.status;\r\n    }\r\n\r\n    private tryGetAxiosError(error: any): AxiosError | undefined {\r\n        if (!error) {\r\n            return undefined;\r\n        }\r\n\r\n        if (error.isAxiosError) {\r\n            return error as AxiosError;\r\n        }\r\n\r\n        const originalError = error.originalError;\r\n        if (originalError && originalError.isAxiosError) {\r\n            return originalError as AxiosError;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * min and max included\r\n     */\r\n    private randomNumberFromInterval(min: number, max: number): number {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n}\r\n\r\nexport const retryHelper = new RetryHelper();\r\n", "import { IQueryParameter } from './url.models';\r\n\r\nexport namespace Parameters {\r\n    export class CustomParameter implements IQueryParameter {\r\n        /**\r\n         * Custom parameter\r\n         * @constructor\r\n         * @param {string} name - Name of the parameter\r\n         * @param {string} value - Value of the parameter\r\n         */\r\n        constructor(public name: string, public value: string) {\r\n            if (!name) {\r\n                throw Error(`Name of the custom parameter is not specified`);\r\n            }\r\n        }\r\n\r\n        public getParam(): string {\r\n            return this.name;\r\n        }\r\n\r\n        public getParamValue(): string {\r\n            return this.value;\r\n        }\r\n    }\r\n}\r\n", "'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n", "'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n", "// eslint-disable-next-line strict\nexport default null;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n", "'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n", "'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n", "'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n", "'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n", "'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n", "import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n", "const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n", "import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n", "'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n", "'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n", "'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n", "'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n", "'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n", "import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n", "'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n", "'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n", "'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n", "'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n", "'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    let {responseType, withXSRFToken} = config;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if(platform.hasStandardBrowserEnv) {\n      withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n\n      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n        // Add xsrf header\n        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n        if (xsrfValue) {\n          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n        }\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n", "import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n", "'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n", "export const VERSION = \"1.6.7\";", "'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n", "'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n\n        if (!err.stack) {\n          err.stack = stack;\n          // match without the 2 top stack lines\n        } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n          err.stack += '\\n' + stack\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n", "'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n", "'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n", "const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n", "'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n", "import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n", "export class HttpDebugger {\r\n    /*\r\n    Called when http request is started\r\n    */\r\n    debugStartHttpRequest(): void {\r\n    }\r\n\r\n    /*\r\n    Called when http request is resolved\r\n    */\r\n    debugSuccessHttpRequest(): void {\r\n    }\r\n\r\n    /*\r\n    Called when http request is being retried\r\n    */\r\n    debugRetryHttpRequest(): void {\r\n    }\r\n}\r\n\r\nexport const httpDebugger = new HttpDebugger();\r\n", "import axios, { AxiosInstance, Canceler, CancelToken } from 'axios';\r\nimport { extractHeadersFromAxiosResponse } from '../helpers/headers-helper';\r\n\r\nimport { httpDebugger } from './http.debugger';\r\nimport {\r\n    IHttpCancelRequestToken,\r\n    IHeader,\r\n    IHttpDeleteQueryCall,\r\n    IHttpGetQueryCall,\r\n    IHttpPatchQueryCall,\r\n    IHttpPostQueryCall,\r\n    IHttpPutQueryCall,\r\n    IHttpQueryOptions,\r\n    IResponse,\r\n    IRetryStrategyOptions\r\n} from './http.models';\r\nimport { retryHelper } from '../helpers/retry-helper';\r\n\r\nexport interface IHttpFunctionsConfig {\r\n    logErrorsToConsole: boolean;\r\n}\r\n\r\nexport async function getWithRetryAsync<TRawData>(\r\n    instance: AxiosInstance,\r\n    call: IHttpGetQueryCall,\r\n    functionsConfig: IHttpFunctionsConfig,\r\n    options?: IHttpQueryOptions<CancelToken>\r\n): Promise<IResponse<TRawData>> {\r\n    const retryStrategyOptions = options?.retryStrategy ?? retryHelper.defaultRetryStrategy;\r\n\r\n    return await runWithRetryAsync<TRawData>({\r\n        retryAttempt: 0,\r\n        url: call.url,\r\n        retryStrategy: retryStrategyOptions,\r\n        functionsConfig: functionsConfig,\r\n        call: async (retryAttempt) => {\r\n            httpDebugger.debugStartHttpRequest();\r\n\r\n            const axiosResponse = await instance.get<TRawData>(call.url, {\r\n                headers: getHeadersJson(options?.headers ?? [], false),\r\n                responseType: options?.responseType,\r\n                cancelToken: options?.cancelToken?.token\r\n            });\r\n\r\n            const response: IResponse<TRawData> = {\r\n                data: axiosResponse.data,\r\n                rawResponse: axiosResponse,\r\n                headers: extractHeadersFromAxiosResponse(axiosResponse),\r\n                status: axiosResponse.status,\r\n                retryStrategy: {\r\n                    options: retryStrategyOptions,\r\n                    retryAttempts: retryAttempt\r\n                }\r\n            };\r\n\r\n            httpDebugger.debugSuccessHttpRequest();\r\n            return response;\r\n        }\r\n    });\r\n}\r\n\r\nexport async function postWithRetryAsync<TRawData>(\r\n    instance: AxiosInstance,\r\n    call: IHttpPostQueryCall,\r\n    functionsConfig: IHttpFunctionsConfig,\r\n    options?: IHttpQueryOptions<CancelToken>\r\n): Promise<IResponse<TRawData>> {\r\n    const retryStrategyOptions = options?.retryStrategy ?? retryHelper.defaultRetryStrategy;\r\n\r\n    return await runWithRetryAsync<TRawData>({\r\n        retryAttempt: 0,\r\n        url: call.url,\r\n        retryStrategy: retryStrategyOptions,\r\n        functionsConfig: functionsConfig,\r\n        call: async (retryAttempt) => {\r\n            httpDebugger.debugStartHttpRequest();\r\n\r\n            const axiosResponse = await instance.post<TRawData>(call.url, call.body, {\r\n                headers: getHeadersJson(options?.headers ?? [], false),\r\n                responseType: options?.responseType,\r\n                // required for uploading large files\r\n                // https://github.com/axios/axios/issues/1362\r\n                maxContentLength: 'Infinity' as any,\r\n                maxBodyLength: 'Infinity' as any,\r\n                cancelToken: options?.cancelToken?.token\r\n            });\r\n\r\n            const response: IResponse<TRawData> = {\r\n                data: axiosResponse.data,\r\n                rawResponse: axiosResponse,\r\n                headers: extractHeadersFromAxiosResponse(axiosResponse),\r\n                status: axiosResponse.status,\r\n                retryStrategy: {\r\n                    options: retryStrategyOptions,\r\n                    retryAttempts: retryAttempt\r\n                }\r\n            };\r\n\r\n            httpDebugger.debugSuccessHttpRequest();\r\n            return response;\r\n        }\r\n    });\r\n}\r\n\r\nexport async function putWithRetryAsync<TRawData>(\r\n    instance: AxiosInstance,\r\n    call: IHttpPutQueryCall,\r\n    functionsConfig: IHttpFunctionsConfig,\r\n    options?: IHttpQueryOptions<CancelToken>\r\n): Promise<IResponse<TRawData>> {\r\n    const retryStrategyOptions = options?.retryStrategy ?? retryHelper.defaultRetryStrategy;\r\n\r\n    return await runWithRetryAsync<TRawData>({\r\n        retryAttempt: 0,\r\n        url: call.url,\r\n        retryStrategy: retryStrategyOptions,\r\n        functionsConfig: functionsConfig,\r\n        call: async (retryAttempt) => {\r\n            httpDebugger.debugStartHttpRequest();\r\n\r\n            const axiosResponse = await instance.put<TRawData>(call.url, call.body, {\r\n                headers: getHeadersJson(options?.headers ?? [], false),\r\n                responseType: options?.responseType,\r\n                // required for uploading large files\r\n                // https://github.com/axios/axios/issues/1362\r\n                maxContentLength: 'Infinity' as any,\r\n                maxBodyLength: 'Infinity' as any,\r\n                cancelToken: options?.cancelToken?.token\r\n            });\r\n\r\n            const response: IResponse<TRawData> = {\r\n                data: axiosResponse.data,\r\n                rawResponse: axiosResponse,\r\n                headers: extractHeadersFromAxiosResponse(axiosResponse),\r\n                status: axiosResponse.status,\r\n                retryStrategy: {\r\n                    options: retryStrategyOptions,\r\n                    retryAttempts: retryAttempt\r\n                }\r\n            };\r\n\r\n            httpDebugger.debugSuccessHttpRequest();\r\n            return response;\r\n        }\r\n    });\r\n}\r\n\r\nexport async function patchWithRetryAsync<TRawData>(\r\n    instance: AxiosInstance,\r\n    call: IHttpPatchQueryCall,\r\n    functionsConfig: IHttpFunctionsConfig,\r\n    options?: IHttpQueryOptions<CancelToken>\r\n): Promise<IResponse<TRawData>> {\r\n    const retryStrategyOptions = options?.retryStrategy ?? retryHelper.defaultRetryStrategy;\r\n\r\n    return await runWithRetryAsync<TRawData>({\r\n        retryAttempt: 0,\r\n        url: call.url,\r\n        retryStrategy: retryStrategyOptions,\r\n        functionsConfig: functionsConfig,\r\n        call: async (retryAttempt) => {\r\n            httpDebugger.debugStartHttpRequest();\r\n\r\n            const axiosResponse = await instance.patch<TRawData>(call.url, call.body, {\r\n                headers: getHeadersJson(options?.headers ?? [], false),\r\n                responseType: options?.responseType,\r\n                // required for uploading large files\r\n                // https://github.com/axios/axios/issues/1362\r\n                maxContentLength: 'Infinity' as any,\r\n                maxBodyLength: 'Infinity' as any,\r\n                cancelToken: options?.cancelToken?.token\r\n            });\r\n\r\n            const response: IResponse<TRawData> = {\r\n                data: axiosResponse.data,\r\n                rawResponse: axiosResponse,\r\n                headers: extractHeadersFromAxiosResponse(axiosResponse),\r\n                status: axiosResponse.status,\r\n                retryStrategy: {\r\n                    options: retryStrategyOptions,\r\n                    retryAttempts: retryAttempt\r\n                }\r\n            };\r\n\r\n            httpDebugger.debugSuccessHttpRequest();\r\n            return response;\r\n        }\r\n    });\r\n}\r\n\r\nexport async function deleteWithRetryAsync<TRawData>(\r\n    instance: AxiosInstance,\r\n    call: IHttpDeleteQueryCall,\r\n    functionsConfig: IHttpFunctionsConfig,\r\n    options?: IHttpQueryOptions<CancelToken>\r\n): Promise<IResponse<TRawData>> {\r\n    const retryStrategyOptions = options?.retryStrategy ?? retryHelper.defaultRetryStrategy;\r\n\r\n    return await runWithRetryAsync<TRawData>({\r\n        retryAttempt: 0,\r\n        url: call.url,\r\n        retryStrategy: retryStrategyOptions,\r\n        functionsConfig: functionsConfig,\r\n        call: async (retryAttempt) => {\r\n            httpDebugger.debugStartHttpRequest();\r\n\r\n            const axiosResponse = await instance.delete<TRawData>(call.url, {\r\n                headers: getHeadersJson(options?.headers ?? [], false),\r\n                responseType: options?.responseType,\r\n                // required for uploading large files\r\n                // https://github.com/axios/axios/issues/1362\r\n                maxContentLength: 'Infinity' as any,\r\n                maxBodyLength: 'Infinity' as any,\r\n                cancelToken: options?.cancelToken?.token\r\n            });\r\n\r\n            const response: IResponse<TRawData> = {\r\n                data: axiosResponse.data,\r\n                rawResponse: axiosResponse,\r\n                headers: extractHeadersFromAxiosResponse(axiosResponse),\r\n                status: axiosResponse.status,\r\n                retryStrategy: {\r\n                    options: retryStrategyOptions,\r\n                    retryAttempts: retryAttempt\r\n                }\r\n            };\r\n\r\n            httpDebugger.debugSuccessHttpRequest();\r\n            return response;\r\n        }\r\n    });\r\n}\r\n\r\nexport function createCancelToken(): IHttpCancelRequestToken<CancelToken> {\r\n    let canceler: Canceler;\r\n\r\n    const token = new axios.CancelToken((c) => {\r\n        // An executor function receives a cancel function as a parameter\r\n        canceler = c;\r\n    });\r\n\r\n    return {\r\n        cancel: (cancelMessage) =>\r\n            canceler(`${retryHelper.requestCancelledMessagePrefix}: ${cancelMessage ?? 'User cancel'}`),\r\n        token: token\r\n    };\r\n}\r\n\r\nasync function runWithRetryAsync<TRawData>(data: {\r\n    url: string;\r\n    retryAttempt: number;\r\n    call: (retryAttempt: number) => Promise<IResponse<TRawData>>;\r\n    retryStrategy: IRetryStrategyOptions;\r\n    functionsConfig: IHttpFunctionsConfig;\r\n}): Promise<IResponse<TRawData>> {\r\n    try {\r\n        return await data.call(data.retryAttempt);\r\n    } catch (error) {\r\n        const retryResult = retryHelper.getRetryErrorResult({\r\n            error: error,\r\n            retryAttempt: data.retryAttempt,\r\n            retryStrategy: data.retryStrategy\r\n        });\r\n\r\n        if (retryResult.canRetry) {\r\n            httpDebugger.debugRetryHttpRequest();\r\n\r\n            // wait time before retrying\r\n            await new Promise((resolve) => setTimeout(resolve, retryResult.retryInMs));\r\n\r\n            if (data.functionsConfig.logErrorsToConsole) {\r\n                console.warn(\r\n                    `Retry attempt '${data.retryAttempt + 1}' from a maximum of '${\r\n                        retryResult.maxRetries\r\n                    }' retries. Request url: '${data.url}'`\r\n                );\r\n            }\r\n\r\n            // retry request\r\n            return await runWithRetryAsync({\r\n                call: data.call,\r\n                retryStrategy: data.retryStrategy,\r\n                retryAttempt: data.retryAttempt + 1,\r\n                url: data.url,\r\n                functionsConfig: data.functionsConfig\r\n            });\r\n        }\r\n\r\n        if (data.functionsConfig.logErrorsToConsole) {\r\n            console.error(`Executing '${data.url}' failed. Request was retried '${data.retryAttempt}' times. `, error);\r\n        }\r\n\r\n        throw error;\r\n    }\r\n}\r\n\r\nfunction getHeadersJson(headers: IHeader[], addContentTypeHeader: boolean): { [header: string]: string } {\r\n    const headerJson: { [header: string]: string } = {};\r\n\r\n    headers.forEach((header) => {\r\n        headerJson[header.header] = header.value;\r\n    });\r\n\r\n    if (addContentTypeHeader) {\r\n        // add default content type header if not present\r\n        const contentTypeHeader = headers.find((m) => m.header.toLowerCase() === 'Content-Type'.toLowerCase());\r\n\r\n        if (!contentTypeHeader) {\r\n            headerJson['Content-Type'] = 'application/json';\r\n        }\r\n    }\r\n\r\n    return headerJson;\r\n}\r\n", "import axios, { AxiosInstance, AxiosRequestConfig, CancelToken } from 'axios';\r\n\r\nimport * as HttpFunctions from './http.functions';\r\nimport { IHttpFunctionsConfig } from './http.functions';\r\nimport {\r\n    IResponse,\r\n    IHttpDeleteQueryCall,\r\n    IHttpGetQueryCall,\r\n    IHttpPatchQueryCall,\r\n    IHttpPostQueryCall,\r\n    IHttpPutQueryCall,\r\n    IHttpQueryOptions,\r\n    IHttpCancelRequestToken\r\n} from './http.models';\r\nimport { IHttpService } from './ihttp.service';\r\n\r\nexport class HttpService implements IHttpService<CancelToken> {\r\n    private readonly axiosInstance: AxiosInstance;\r\n\r\n    private readonly functionsConfig: IHttpFunctionsConfig;\r\n\r\n    constructor(\r\n        private opts?: {\r\n            axiosRequestConfig?: AxiosRequestConfig;\r\n            logErrorsToConsole?: boolean;\r\n        }\r\n    ) {\r\n        this.axiosInstance = axios.create(opts?.axiosRequestConfig);\r\n        this.functionsConfig = this.getFunctionsConfig();\r\n    }\r\n\r\n    async getAsync<TRawData>(\r\n        call: IHttpGetQueryCall,\r\n        options?: IHttpQueryOptions<CancelToken>\r\n    ): Promise<IResponse<TRawData>> {\r\n        return await HttpFunctions.getWithRetryAsync<TRawData>(this.axiosInstance, call, this.functionsConfig, options);\r\n    }\r\n\r\n    async postAsync<TRawData>(\r\n        call: IHttpPostQueryCall,\r\n        options?: IHttpQueryOptions<CancelToken>\r\n    ): Promise<IResponse<TRawData>> {\r\n        return await HttpFunctions.postWithRetryAsync<TRawData>(\r\n            this.axiosInstance,\r\n            call,\r\n            this.functionsConfig,\r\n            options\r\n        );\r\n    }\r\n\r\n    async putAsync<TRawData>(\r\n        call: IHttpPutQueryCall,\r\n        options?: IHttpQueryOptions<CancelToken>\r\n    ): Promise<IResponse<TRawData>> {\r\n        return await HttpFunctions.putWithRetryAsync<TRawData>(this.axiosInstance, call, this.functionsConfig, options);\r\n    }\r\n\r\n    async patchAsync<TRawData>(\r\n        call: IHttpPatchQueryCall,\r\n        options?: IHttpQueryOptions<CancelToken>\r\n    ): Promise<IResponse<TRawData>> {\r\n        return await HttpFunctions.patchWithRetryAsync<TRawData>(\r\n            this.axiosInstance,\r\n            call,\r\n            this.functionsConfig,\r\n            options\r\n        );\r\n    }\r\n\r\n    async deleteAsync<TRawData>(\r\n        call: IHttpDeleteQueryCall,\r\n        options?: IHttpQueryOptions<CancelToken>\r\n    ): Promise<IResponse<TRawData>> {\r\n        return await HttpFunctions.deleteWithRetryAsync<TRawData>(\r\n            this.axiosInstance,\r\n            call,\r\n            this.functionsConfig,\r\n            options\r\n        );\r\n    }\r\n\r\n    createCancelToken(): IHttpCancelRequestToken<CancelToken> {\r\n        return HttpFunctions.createCancelToken();\r\n    }\r\n\r\n    private getFunctionsConfig(): IHttpFunctionsConfig {\r\n        return {\r\n            logErrorsToConsole: this.opts?.logErrorsToConsole ?? true\r\n        };\r\n    }\r\n}\r\n", "import { Identifiers } from './identifiers';\r\n\r\nexport class ContentManagementApiEndpoints {\r\n    private readonly environmentId?: string;\r\n    private readonly subscriptionId?: string;\r\n\r\n    private readonly projectsPath: string = 'projects';\r\n    private readonly subscriptionsPath: string = 'subscriptions';\r\n\r\n    constructor(data: { environmentId?: string; subscriptionId?: string }) {\r\n        this.environmentId = data.environmentId;\r\n        this.subscriptionId = data.subscriptionId;\r\n    }\r\n\r\n    changeWorkflowStepOfLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier,\r\n        workflowIdentifier: Identifiers.WorkflowIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/workflow/${workflowIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    publishLaguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/publish`;\r\n    }\r\n\r\n    createNewVersionOfALanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/new-version`;\r\n    }\r\n\r\n    unpublishLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/unpublish-and-archive`;\r\n    }\r\n\r\n    cancelScheduledPublishingOfLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/cancel-scheduled-publish`;\r\n    }\r\n\r\n    cancelScheduledUnpublishingOfLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/cancel-scheduled-unpublish`;\r\n    }\r\n\r\n    listWorkflowSteps(): string {\r\n        return `${this.getEnvironmentsPath()}/workflow`;\r\n    }\r\n\r\n    listWorkflows(): string {\r\n        return `${this.getEnvironmentsPath()}/workflows`;\r\n    }\r\n\r\n    addWorkflow(): string {\r\n        return `${this.getEnvironmentsPath()}/workflows`;\r\n    }\r\n\r\n    updateWorkflow(workflowIdentifier: Identifiers.WorkflowIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/workflows/${workflowIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    deleteWorkflow(identifier: Identifiers.WorkflowIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/workflows/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    changeWorkflowOfLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        languageIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${languageIdentifier.getParamValue()}/change-workflow`;\r\n    }\r\n\r\n    listContentTypeSnippets(): string {\r\n        return `${this.getEnvironmentsPath()}/snippets`;\r\n    }\r\n\r\n    viewContentTypeSnippet(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/snippets/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addContentTypeSnippet(): string {\r\n        return `${this.getEnvironmentsPath()}/snippets`;\r\n    }\r\n\r\n    deleteContentTypeSnippet(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/snippets/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    modifyContentTypeSnippet(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/snippets/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    startProjectValidation(): string {\r\n        return `${this.getEnvironmentsPath()}/validate-async`;\r\n    }\r\n\r\n    checkEnvironmentValidation(identifier: Identifiers.TaskIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/validate-async/tasks/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    listEnvironmentIssues(identifier: Identifiers.TaskIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/validate-async/tasks/${identifier.getParamValue()}/issues`;\r\n    }\r\n\r\n    environmentInformation(): string {\r\n        return `${this.getEnvironmentsPath()}`;\r\n    }\r\n\r\n    listContentTypes(): string {\r\n        return `${this.getEnvironmentsPath()}/types`;\r\n    }\r\n\r\n    addContentType(): string {\r\n        return `${this.getEnvironmentsPath()}/types`;\r\n    }\r\n\r\n    deleteContentType(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/types/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    viewContentType(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/types/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    modifyContentType(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/types/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addTaxonomy(): string {\r\n        return `${this.getEnvironmentsPath()}/taxonomies`;\r\n    }\r\n\r\n    modifyTaxonomy(identifier: Identifiers.TaxonomyIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/taxonomies/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    deleteTaxonomy(identifier: Identifiers.TaxonomyIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/taxonomies/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    listTaxonomies(): string {\r\n        return `${this.getEnvironmentsPath()}/taxonomies`;\r\n    }\r\n\r\n    getTaxonomy(identifier: Identifiers.TaxonomyIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/taxonomies/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addAsset(): string {\r\n        return `${this.getEnvironmentsPath()}/assets`;\r\n    }\r\n\r\n    deleteAsset(identifier: Identifiers.AssetIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    upsertAsset(assetIdentifier: Identifiers.AssetIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${assetIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    uploadBinaryFile(filename: string): string {\r\n        return `${this.getEnvironmentsPath()}/files/${filename}`;\r\n    }\r\n\r\n    listAssets(): string {\r\n        return `${this.getEnvironmentsPath()}/assets`;\r\n    }\r\n\r\n    viewAsset(identifier: Identifiers.AssetIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    items(): string {\r\n        return `${this.getEnvironmentsPath()}/items`;\r\n    }\r\n\r\n    viewContentItem(identifier: Identifiers.ContentItemIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/items/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addContentItem(): string {\r\n        return `${this.getEnvironmentsPath()}/items`;\r\n    }\r\n\r\n    updateContentItem(identifier: Identifiers.ContentItemIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/items/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    upsertContentItem(identifier: Identifiers.ContentItemIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/items/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    deleteContentItem(identifier: Identifiers.ContentItemIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/items/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    listLanguageVariantsOfItem(identifier: Identifiers.ContentItemIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/items/${identifier.getParamValue()}/variants`;\r\n    }\r\n\r\n    listLanguageVariantsOfContentType(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/types/${identifier.getParamValue()}/variants`;\r\n    }\r\n\r\n    listLanguageVariantsByCollection(identifier: Identifiers.CollectionIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/collections/${identifier.getParamValue()}/variants`;\r\n    }\r\n    \r\n    listLanguageVariantsBySpace(identifier: Identifiers.SpaceIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/spaces/${identifier.getParamValue()}/variants`;\r\n    }\r\n\r\n\r\n    listLanguageVariantsOfContentTypeWithComponents(identifier: Identifiers.ContentTypeIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/types/${identifier.getParamValue()}/components`;\r\n    }\r\n\r\n    deleteLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        langaugeIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${langaugeIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    viewOrUpsertLanguageVariant(\r\n        itemIdentifier: Identifiers.ContentItemIdentifier,\r\n        langaugeIdentifier: Identifiers.LanguageIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/items/${itemIdentifier.getParamValue()}/variants/${langaugeIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    viewLanguage(identifier: Identifiers.LanguageIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/languages/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addLanguage(): string {\r\n        return `${this.getEnvironmentsPath()}/languages`;\r\n    }\r\n\r\n    modifyLanguage(identifier: Identifiers.LanguageIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/languages/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    listLanguages(): string {\r\n        return `${this.getEnvironmentsPath()}/languages`;\r\n    }\r\n\r\n    deleteLegacyWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    getLegacyWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addLegacyWebhook(): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks`;\r\n    }\r\n\r\n    enableLegacyWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks/${identifier.getParamValue()}/enable`;\r\n    }\r\n\r\n    disableLegacyWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks/${identifier.getParamValue()}/disable`;\r\n    }\r\n\r\n    listLegacyWebhooks(): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks`;\r\n    }\r\n\r\n    deleteWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks-vnext/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    getWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks-vnext/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addWebhook(): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks-vnext`;\r\n    }\r\n\r\n    enableWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks-vnext/${identifier.getParamValue()}/enable`;\r\n    }\r\n\r\n    disableWebhook(identifier: Identifiers.WebhookIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks-vnext/${identifier.getParamValue()}/disable`;\r\n    }\r\n\r\n    listWebhooks(): string {\r\n        return `${this.getEnvironmentsPath()}/webhooks-vnext`;\r\n    }\r\n\r\n\r\n    listAssetFolders(): string {\r\n        return `${this.getEnvironmentsPath()}/folders`;\r\n    }\r\n\r\n    addAssetFolders(): string {\r\n        return `${this.getEnvironmentsPath()}/folders`;\r\n    }\r\n\r\n    modifyAssetFolders(): string {\r\n        return `${this.getEnvironmentsPath()}/folders`;\r\n    }\r\n\r\n    listCollections(): string {\r\n        return `${this.getEnvironmentsPath()}/collections`;\r\n    }\r\n\r\n    setCollections(): string {\r\n        return `${this.getEnvironmentsPath()}/collections`;\r\n    }\r\n\r\n    listAssetRenditions(identifier: Identifiers.AssetIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${identifier.getParamValue()}/renditions`;\r\n    }\r\n\r\n    addAssetRendition(identifier: Identifiers.AssetIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${identifier.getParamValue()}/renditions`;\r\n    }\r\n\r\n    modifyAssetRendition(\r\n        assetIdentifier: Identifiers.AssetIdentifier,\r\n        renditionIdentifier: Identifiers.RenditionIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${assetIdentifier.getParamValue()}/renditions/${renditionIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    viewAssetRendition(\r\n        assetIdentifier: Identifiers.AssetIdentifier,\r\n        renditionIdentifier: Identifiers.RenditionIdentifier\r\n    ): string {\r\n        return `${this.getEnvironmentsPath()}/assets/${assetIdentifier.getParamValue()}/renditions/${renditionIdentifier.getParamValue()}`;\r\n    }\r\n\r\n    listSubscriptionProjects(): string {\r\n        return `${this.getSubscriptionPath()}/projects`;\r\n    }\r\n\r\n    listSubscriptionUsers(): string {\r\n        return `${this.getSubscriptionPath()}/users`;\r\n    }\r\n\r\n    viewSubscriptionProject(identifier: Identifiers.EnvironmentIdentifier): string {\r\n        return `${this.getSubscriptionPath()}/projects/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    viewSubscriptionUser(identifier: Identifiers.UserIdentifier): string {\r\n        return `${this.getSubscriptionPath()}/users/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    activateUserInAllProjects(identifier: Identifiers.UserIdentifier): string {\r\n        return `${this.getSubscriptionPath()}/users/${identifier.getParamValue()}/activate`;\r\n    }\r\n\r\n    deactivateUserInAllProjects(identifier: Identifiers.UserIdentifier): string {\r\n        return `${this.getSubscriptionPath()}/users/${identifier.getParamValue()}/deactivate`;\r\n    }\r\n\r\n    listRoles(): string {\r\n        return `${this.getEnvironmentsPath()}/roles`;\r\n    }\r\n\r\n    viewRole(identifier: Identifiers.RoleIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/roles/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    getPreviewConfigruation(): string {\r\n        return `${this.getEnvironmentsPath()}/preview-configuration`;\r\n    }\r\n\r\n    modifyPreviewConfigruation(): string {\r\n        return `${this.getEnvironmentsPath()}/preview-configuration`;\r\n    }\r\n\r\n    inviteProjectUser(): string {\r\n        return `${this.getEnvironmentsPath()}/users`;\r\n    }\r\n\r\n    changeProjectUserRoles(identifier: Identifiers.UserIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/users/${identifier.getParamValue()}/roles`;\r\n    }\r\n\r\n    getEnvironmentCloningStatus(): string {\r\n        return `${this.getEnvironmentsPath()}/environment-cloning-state`;\r\n    }\r\n\r\n    deleteEnvironment(): string {\r\n        return this.getEnvironmentsPath();\r\n    }\r\n\r\n    modifyEnvironment(): string {\r\n        return this.getEnvironmentsPath();\r\n    }\r\n\r\n    cloneEnvironment(): string {\r\n        return `${this.getEnvironmentsPath()}/clone-environment`;\r\n    }\r\n\r\n    markEnvironmentAsProduction(): string {\r\n        return `${this.getEnvironmentsPath()}/mark-environment-as-production`;\r\n    }\r\n\r\n    listSpaces(): string {\r\n        return `${this.getEnvironmentsPath()}/spaces`;\r\n    }\r\n\r\n    viewSpace(identifier: Identifiers.SpaceIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/spaces/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    addSpace(): string {\r\n        return `${this.getEnvironmentsPath()}/spaces`;\r\n    }\r\n\r\n    deleteSpace(identifier: Identifiers.SpaceIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/spaces/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    modifySpace(identifier: Identifiers.SpaceIdentifier): string {\r\n        return `${this.getEnvironmentsPath()}/spaces/${identifier.getParamValue()}`;\r\n    }\r\n\r\n    private getSubscriptionPath(): string {\r\n        if (!this.subscriptionId) {\r\n            throw Error(`SubscriptionId was not provided in client configuration`);\r\n        }\r\n        return `${this.subscriptionsPath}/${this.subscriptionId}`;\r\n    }\r\n\r\n    private getEnvironmentsPath(): string {\r\n        if (!this.environmentId) {\r\n            throw Error(`EnvironmentId was not provided in client configuration`);\r\n        }\r\n        return `${this.projectsPath}/${this.environmentId}`;\r\n    }\r\n}\r\n", "import { ContentItemContracts } from '../../contracts';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace ContentItemModels {\r\n\r\n    export class ContentItem implements SharedModels.IBaseModel<ContentItemContracts.IContentItemModelContract> {\r\n\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public type!: {\r\n            id: string\r\n        };\r\n        public externalId?: string;\r\n        public lastModified!: Date;\r\n        public collection!: SharedModels.ReferenceObject;\r\n        public _raw!: ContentItemContracts.IContentItemModelContract;\r\n\r\n        constructor(\r\n            data: {\r\n                id: string,\r\n                name: string,\r\n                codename: string,\r\n                type: {\r\n                    id?: string,\r\n                    codename?: string,\r\n                    external_id?: string\r\n                },\r\n                externalId?: string,\r\n                lastModified: Date,\r\n                collection: SharedModels.ReferenceObject,\r\n                _raw: ContentItemContracts.IContentItemModelContract\r\n            }\r\n        ) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n}\r\n\r\n", "\r\nexport namespace SharedModels {\r\n\r\n    export interface IBaseModel<TContract> {\r\n        _raw: TContract;\r\n    }\r\n\r\n    export class Pagination {\r\n        constructor(\r\n            public continuationToken: string | null,\r\n            public nextPage: string | null\r\n        ) { }\r\n    }\r\n\r\n    export class ValidationError {\r\n        public message!: string;\r\n\r\n        constructor(\r\n            data: {\r\n                message: string\r\n            }\r\n        ) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export class ContentManagementBaseKontentError {\r\n\r\n        public validationErrors: ValidationError[];\r\n        public message: string;\r\n        public requestId: string;\r\n        public errorCode: number;\r\n        public originalError: any;\r\n\r\n        constructor(data:\r\n            {\r\n                message: string;\r\n                requestId: string;\r\n                errorCode: number;\r\n                originalError: any;\r\n                validationErrors: ValidationError[]\r\n            }\r\n        ) {\r\n            this.validationErrors = data.validationErrors;\r\n            this.message = data.message;\r\n            this.requestId = data.requestId;\r\n            this.errorCode = data.errorCode;\r\n            this.originalError = data.originalError;\r\n        }\r\n\r\n    }\r\n\r\n    export interface IReferenceObject {\r\n        id?: string;\r\n        codename?: string;\r\n        externalId?: string;\r\n    }\r\n\r\n    export class ReferenceObject implements IReferenceObject {\r\n        public id?: string;\r\n        public codename?: string;\r\n        public externalId?: string;\r\n\r\n        constructor(\r\n            data: {\r\n                id?: string;\r\n                codename?: string;\r\n                externalId?: string;\r\n            }\r\n        ) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n}\r\n", "import { SharedModels } from '../shared/shared-models';\r\nimport { SharedContracts, AssetContracts } from '../../contracts';\r\n\r\nexport namespace AssetModels {\r\n    export class Asset implements SharedModels.IBaseModel<AssetContracts.IAssetModelContract> {\r\n        public id!: string;\r\n        public fileName!: string;\r\n        public title!: string | null;\r\n        public imageWidth!: number | null;\r\n        public imageHeight!: number | null;\r\n        public size!: number;\r\n        public type!: string;\r\n        public fileReference!: AssetFileReference;\r\n        public descriptions!: AssetFileDescription[];\r\n        public externalId?: string;\r\n        public lastModified!: Date;\r\n        public url!: string;\r\n        public codename!: string;\r\n        public collection?: IAssetCollectionReferenceObject;\r\n        public folder?: IAssetFolderReference;\r\n        public _raw!: AssetContracts.IAssetModelContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            fileName: string;\r\n            title: string | null;\r\n            imageWidth: number | null;\r\n            imageHeight: number | null;\r\n            size: number;\r\n            type: string;\r\n            fileReference: AssetFileReference;\r\n            descriptions: AssetFileDescription[];\r\n            externalId?: string;\r\n            lastModified: Date;\r\n            url: string;\r\n            codename: string;\r\n            collection?: IAssetCollectionReferenceObject;\r\n            folder?: IAssetFolderReference;\r\n            _raw: AssetContracts.IAssetModelContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IAssetFolderReference {\r\n        id?: string;\r\n        external_id?: string;\r\n    }\r\n\r\n    export interface IAssetFileReference {\r\n        id: string;\r\n        type: 'internal';\r\n    }\r\n\r\n    export class AssetFileReference implements IAssetFileReference {\r\n        public id: string;\r\n        public type: 'internal';\r\n\r\n        constructor(data: { id: string; type: 'internal' }) {\r\n            this.id = data.id;\r\n            this.type = data.type;\r\n        }\r\n    }\r\n\r\n    export interface IAssetFileDescription {\r\n        language: SharedContracts.IReferenceObjectContract;\r\n        description: string;\r\n    }\r\n\r\n    export interface IAssetCollectionReferenceObject {\r\n        reference: SharedModels.IReferenceObject | null\r\n    }\r\n\r\n    export class AssetFileDescription {\r\n        public language: SharedModels.ReferenceObject;\r\n        public description: string | null;\r\n\r\n        constructor(data: { language: SharedModels.ReferenceObject; description: string | null }) {\r\n            this.language = data.language;\r\n            this.description = data.description;\r\n        }\r\n    }\r\n\r\n    export interface IUploadBinaryFileRequestData {\r\n        binaryData: any;\r\n        contentType: string;\r\n        contentLength?: number;\r\n        filename: string;\r\n    }\r\n\r\n    /**\r\n     * Currently only reference to taxonomy terms are supported. In future more elements will be allowed\r\n     */\r\n    export type IAssetElementValueType = IAssetElementData<SharedContracts.IReferenceObjectContract[]>;\r\n\r\n    export interface IAssetElementData<TValue> {\r\n        element: SharedContracts.IReferenceObjectContract;\r\n        value: TValue;\r\n    }\r\n\r\n    export interface IAddAssetRequestData {\r\n        file_reference: IAssetFileReference;\r\n        title?: string;\r\n        external_id?: string;\r\n        descriptions?: IAssetFileDescription[];\r\n        folder?: IAssetFolderReference;\r\n        elements?: IAssetElementValueType[];\r\n        collection?: IAssetCollectionReferenceObject;\r\n        codename?: string;\r\n    }\r\n\r\n    export interface IUpsertAssetRequestData {\r\n        descriptions: IAssetFileDescription[];\r\n        title?: string;\r\n        file_reference?: IAssetFileReference;\r\n        folder?: IAssetFolderReference;\r\n        collection?: IAssetCollectionReferenceObject;\r\n        elements?: IAssetElementValueType[];\r\n    }\r\n\r\n    export interface IUploadAssetFromUrlRequestData {\r\n        asset: {\r\n            title?: string;\r\n            external_id?: string;\r\n            descriptions?: IAssetFileDescription[];\r\n            folder?: IAssetFolderReference;\r\n            elements?: IAssetElementValueType[];\r\n            collection?: IAssetCollectionReferenceObject;\r\n            codename?: string;\r\n        };\r\n        binaryFile: {\r\n            filename: string;\r\n        };\r\n        fileUrl: string;\r\n    }\r\n}\r\n", "import { AssetFolderContracts } from '../../contracts';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace AssetFolderModels {\r\n\r\n    export class AssetFolder implements SharedModels.IBaseModel<AssetFolderContracts.IAssetFolderContract> {\r\n        public id: string;\r\n        public name: string;\r\n        public externalId?: string;\r\n        public folders: AssetFolder[];\r\n        public _raw!: AssetFolderContracts.IAssetFolderContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            externalId?: string;\r\n            folders: AssetFolder[];\r\n            _raw: AssetFolderContracts.IAssetFolderContract;\r\n        }) {\r\n            this.id = data.id;\r\n            this.name = data.name;\r\n            this.externalId = data.externalId;\r\n            this.folders = data.folders;\r\n            this._raw = data._raw;\r\n        }\r\n    }\r\n\r\n    export interface IAddOrModifyAssetFolderData {\r\n        name: string;\r\n        folders: IAddOrModifyAssetFolderData[];\r\n        external_id?: string;\r\n    }\r\n\r\n    export interface IAddAssetFoldersData {\r\n        folders: IAddOrModifyAssetFolderData[];\r\n    }\r\n\r\n    export interface IModifyAssetFoldersData {\r\n        op: 'addInto' | 'remove' | 'rename';\r\n        value?: IAddOrModifyAssetFolderData;\r\n        after?: {\r\n            external_id?: string;\r\n            id?: string;\r\n        };\r\n        before?: {\r\n            external_id?: string;\r\n            id?: string;\r\n        };\r\n        reference?: {\r\n            external_id?: string;\r\n            id?: string;\r\n        };\r\n    }\r\n}\r\n", "import { SharedModels } from '../shared/shared-models';\r\nimport { TaxonomyContracts } from '../../contracts';\r\n\r\nexport namespace TaxonomyModels {\r\n    export type ModifyTaxonomyTypeOperation = 'addInto' | 'remove' | 'replace';\r\n\r\n    export interface IModifyTaxonomyData {\r\n        op: ModifyTaxonomyTypeOperation;\r\n        reference?: SharedModels.IReferenceObject;\r\n        property_name?: string;\r\n        value?: IAddTaxonomyRequestModel | string | IAddTaxonomyRequestModel[];\r\n\r\n        before?: SharedModels.IReferenceObject;\r\n        after?: SharedModels.IReferenceObject;\r\n    }\r\n\r\n    export class Taxonomy implements SharedModels.IBaseModel<TaxonomyContracts.ITaxonomyContract> {\r\n        public lastModified!: Date;\r\n        public name!: string;\r\n        public id!: string;\r\n        public codename!: string;\r\n        public terms!: Taxonomy[];\r\n        public externalId?: string;\r\n        public _raw!: TaxonomyContracts.ITaxonomyContract;\r\n\r\n        constructor(data: {\r\n            lastModified: Date;\r\n            name: string;\r\n            id: string;\r\n            codename: string;\r\n            terms: Taxonomy[];\r\n            externalId?: string;\r\n            _raw: TaxonomyContracts.ITaxonomyContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IAddTaxonomyRequestModel {\r\n        name: string;\r\n        terms: IAddTaxonomyRequestModel[];\r\n        external_id?: string;\r\n        codename?: string;\r\n    }\r\n}\r\n", "import { SharedContracts, ContentTypeContracts } from '../../contracts';\r\nimport { ContentTypeElements } from '../elements/content-type-element.models';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace ContentTypeModels {\r\n    export type ModifyContentTypeOperation = 'addInto' | 'remove' | 'replace';\r\n\r\n    export interface IModifyContentTypeData {\r\n        op: ModifyContentTypeOperation;\r\n        path: string;\r\n        value?: any;\r\n\r\n        before?: SharedModels.IReferenceObject;\r\n        after?: SharedModels.IReferenceObject;\r\n    }\r\n\r\n    export class ContentTypeGroup {\r\n\r\n        public name!: string;\r\n        public codename?: string;\r\n        public externalId?: string;\r\n        public id?: string;\r\n\r\n        constructor(data: {\r\n             name: string;\r\n             codename?: string;\r\n             externalId?: string;\r\n             id?: string;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export class ContentType implements SharedModels.IBaseModel<ContentTypeContracts.IContentTypeContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public lastModified!: Date;\r\n        public elements!: ContentTypeElements.ContentTypeElementModel[];\r\n        public contentGroups?: ContentTypeGroup[];\r\n        public externalId?: string;\r\n\r\n        public _raw!: ContentTypeContracts.IContentTypeContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            codename: string;\r\n            lastModified: Date;\r\n            elements: ContentTypeElements.ContentTypeElementModel[];\r\n            externalId?: string;\r\n            contentGroups?: ContentTypeGroup[];\r\n            _raw: ContentTypeContracts.IContentTypeContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IAddContentTypeContentGroup {\r\n        name: string;\r\n        external_id?: string;\r\n        codename?: string;\r\n    }\r\n\r\n    export interface IAddContentTypeData {\r\n        name: string;\r\n        elements: ContentTypeElements.IElementShared[];\r\n\r\n        external_id?: string;\r\n        codename?: string;\r\n        content_groups?: IAddContentTypeContentGroup[];\r\n    }\r\n\r\n    export interface IAddContentTypeCustomElementData {\r\n        sourceUrl: string;\r\n        json_parameters?: string;\r\n    }\r\n\r\n    export interface IAddContentTypeElementDependsOnData {\r\n        element?: SharedContracts.IReferenceObjectContract;\r\n        snippet?: SharedContracts.IReferenceObjectContract;\r\n    }\r\n\r\n    export interface IAddContentTypeElementMultipleChoiceElementOptionsData {\r\n        name: string;\r\n    }\r\n\r\n}\r\n", "import { ContentTypeElements } from '../elements/content-type-element.models';\r\n\r\nexport class ContentTypeSnippetElements {\r\n    assetElement(element: ContentTypeElements.IAssetElementData): ContentTypeElements.IAssetElementData {\r\n        return element;\r\n    }\r\n\r\n    customElement(element: ContentTypeElements.ICustomElementData): ContentTypeElements.ICustomElementData {\r\n        return element;\r\n    }\r\n\r\n    dateTimeElement(element: ContentTypeElements.IDateTimeElementData): ContentTypeElements.IDateTimeElementData {\r\n        return element;\r\n    }\r\n\r\n    guidelinesElement(element: ContentTypeElements.IGuidelinesElementData): ContentTypeElements.IGuidelinesElementData {\r\n        return element;\r\n    }\r\n\r\n    linkedItemsElement(element: ContentTypeElements.ILinkedItemsElementData): ContentTypeElements.ILinkedItemsElementData {\r\n        return element;\r\n    }\r\n\r\n    subpagesElement(element: ContentTypeElements.ISubpagesElementData): ContentTypeElements.ISubpagesElementData {\r\n        return element;\r\n    }\r\n\r\n    multipleChoiceElement(element: ContentTypeElements.IMultipleChoiceElementData): ContentTypeElements.IMultipleChoiceElementData {\r\n        return element;\r\n    }\r\n\r\n    numberElement(element: ContentTypeElements.INumberElementData): ContentTypeElements.INumberElementData {\r\n        return element;\r\n    }\r\n\r\n    richTextElement(element: ContentTypeElements.IRichTextElementData): ContentTypeElements.IRichTextElementData {\r\n        return element;\r\n    }\r\n\r\n    taxonomyElement(element: ContentTypeElements.ITaxonomyElementData): ContentTypeElements.ITaxonomyElementData {\r\n        return element;\r\n    }\r\n\r\n    textElement(element: ContentTypeElements.ITextElementData): ContentTypeElements.ITextElementData {\r\n        return element;\r\n    }\r\n\r\n    any<TElementData extends ContentTypeElements.IElementShared>(element: TElementData): TElementData {\r\n        return element;\r\n    }\r\n}\r\n\r\nexport const contentTypeSnippetElementsBuilder = new ContentTypeSnippetElements();\r\n", "import { ContentTypeSnippetElements } from '../content-type-snippets/content-type-snippet-elements.builder';\r\nimport { ContentTypeElements } from '../elements/content-type-element.models';\r\n\r\nexport class ContentTypeElementsBuilder extends ContentTypeSnippetElements {\r\n    urlSlugElement(element: ContentTypeElements.IUrlSlugElementData): ContentTypeElements.IUrlSlugElementData {\r\n        return element;\r\n    }\r\n\r\n    snippetElement(element: ContentTypeElements.ISnippetElementData): ContentTypeElements.ISnippetElementData {\r\n        return element;\r\n    }\r\n}\r\n\r\nexport const contentTypeElementsBuilder = new ContentTypeElementsBuilder();\r\n", "import { ElementModels } from '../elements/elements.models';\r\nimport { SharedModels } from '../shared/shared-models';\r\nimport { LanguageVariantContracts } from '../../contracts';\r\n\r\nexport namespace LanguageVariantModels {\r\n    export interface ILanguageVariantElementInfo {\r\n        id?: string;\r\n        codename?: string;\r\n        external_id?: string;\r\n    }\r\n\r\n    export class ContentItemLanguageVariant\r\n        implements SharedModels.IBaseModel<LanguageVariantContracts.ILanguageVariantModelContract>\r\n    {\r\n        public item!: SharedModels.ReferenceObject;\r\n        public elements!: ElementModels.ContentItemElement[];\r\n        public language!: SharedModels.ReferenceObject;\r\n        public lastModified!: Date;\r\n        /**\r\n         * Deprecated in favor of 'workflow'\r\n         */\r\n        public workflowStep!: SharedModels.ReferenceObject;\r\n        public workflow!: {\r\n            workflowIdentifier: SharedModels.ReferenceObject;\r\n            stepIdentifier: SharedModels.ReferenceObject;\r\n        };\r\n        public _raw!: LanguageVariantContracts.ILanguageVariantModelContract;\r\n\r\n        constructor(data: {\r\n            item: SharedModels.ReferenceObject;\r\n            elements: ElementModels.ContentItemElement[];\r\n            language: SharedModels.ReferenceObject;\r\n            lastModified: Date;\r\n            workflowStep: SharedModels.ReferenceObject;\r\n            workflow: {\r\n                workflowIdentifier: SharedModels.ReferenceObject;\r\n                stepIdentifier: SharedModels.ReferenceObject;\r\n            };\r\n            _raw: LanguageVariantContracts.ILanguageVariantModelContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export class ContentItemLanguageWithComponentsVariant {\r\n        public item!: SharedModels.ReferenceObject;\r\n        public elements!: ElementModels.ContentItemElement[];\r\n        public language!: SharedModels.ReferenceObject;\r\n        public lastModified!: Date;\r\n        /**\r\n         * Deprecated in favor of 'workflow'\r\n         */\r\n        public workflowStep!: SharedModels.ReferenceObject;\r\n        public workflow!: {\r\n            workflowIdentifier: SharedModels.ReferenceObject;\r\n            stepIdentifier: SharedModels.ReferenceObject;\r\n        };\r\n        public _raw!: LanguageVariantContracts.ILanguageVariantModelsContract;\r\n\r\n        constructor(data: {\r\n            rawElements: any;\r\n            item: SharedModels.ReferenceObject;\r\n            elements: ElementModels.ContentItemElement[];\r\n            language: SharedModels.ReferenceObject;\r\n            lastModified: Date;\r\n            workflowStep: SharedModels.ReferenceObject;\r\n            workflow: {\r\n                workflowIdentifier: SharedModels.ReferenceObject;\r\n                stepIdentifier: SharedModels.ReferenceObject;\r\n            };\r\n            _raw: LanguageVariantContracts.ILanguageVariantModelsContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n}\r\n", "import { SharedContracts } from '../../contracts';\r\n\r\nexport namespace LanguageVariantElements {\r\n    export interface ILanguageVariantElementBase {\r\n        element: SharedContracts.IReferenceObjectContract;\r\n        value: any | null;\r\n    }\r\n\r\n    export interface IRichTextComponent {\r\n        id: string;\r\n        type: SharedContracts.IReferenceObjectContract;\r\n        elements: ILanguageVariantElementBase[];\r\n    }\r\n\r\n    export interface IAssetInVariantElement extends ILanguageVariantElementBase {\r\n        value: SharedContracts.IReferenceObjectContract[] | null;\r\n    }\r\n\r\n    export interface ICustomElementInVariantElement extends ILanguageVariantElementBase {\r\n        value: string | null;\r\n        searchable_value?: string;\r\n    }\r\n\r\n    export interface IDateTimeInVariantElement extends ILanguageVariantElementBase {\r\n        value: string | null;\r\n    }\r\n\r\n    export interface ILinkedItemsInVariantElement extends ILanguageVariantElementBase {\r\n        value: SharedContracts.IReferenceObjectContract[] | null;\r\n    }\r\n\r\n    export interface IMultipleChoiceInVariantElement extends ILanguageVariantElementBase {\r\n        value: SharedContracts.IReferenceObjectContract[] | null;\r\n    }\r\n\r\n    export interface INumberInVariantElement extends ILanguageVariantElementBase {\r\n        value: number | null;\r\n    }\r\n\r\n    export interface IRichtextInVariantElement extends ILanguageVariantElementBase {\r\n        value: string | null;\r\n        components?: IRichTextComponent[];\r\n    }\r\n\r\n    export interface ITaxonomyInVariantElement extends ILanguageVariantElementBase {\r\n        value: SharedContracts.IReferenceObjectContract[] | null;\r\n    }\r\n\r\n    export interface ITextInVariantElement extends ILanguageVariantElementBase {\r\n        value: string | null;\r\n    }\r\n\r\n    export interface IUrlSlugInVariantElement extends ILanguageVariantElementBase {\r\n        value: string | null;\r\n        mode: 'autogenerated' | 'custom';\r\n    }\r\n}\r\n\r\nexport class LanguageVariantElementsBuilder {\r\n    assetElement(\r\n        element: LanguageVariantElements.IAssetInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    customElement(\r\n        element: LanguageVariantElements.ICustomElementInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    dateTimeElement(\r\n        element: LanguageVariantElements.IDateTimeInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    linkedItemsElement(\r\n        element: LanguageVariantElements.ILinkedItemsInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    multipleChoiceElement(\r\n        element: LanguageVariantElements.IMultipleChoiceInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    numberElement(\r\n        element: LanguageVariantElements.INumberInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    richTextElement(\r\n        element: LanguageVariantElements.IRichtextInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    taxonomyElement(\r\n        element: LanguageVariantElements.ITaxonomyInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    textElement(\r\n        element: LanguageVariantElements.ITextInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    urlSlugElement(\r\n        element: LanguageVariantElements.IUrlSlugInVariantElement\r\n    ): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n\r\n    any(element: any): LanguageVariantElements.ILanguageVariantElementBase {\r\n        return element;\r\n    }\r\n}\r\n\r\nexport const languageVariantElementsBuilder = new LanguageVariantElementsBuilder();\r\n", "import { SharedModels } from '../shared/shared-models';\r\nimport { ElementContracts } from '../../contracts';\r\n\r\nexport namespace ElementModels {\r\n    export type ElementMode = 'single' | 'multiple';\r\n\r\n    export type ElementType =\r\n        | 'text'\r\n        | 'rich_text'\r\n        | 'number'\r\n        | 'multiple_choice'\r\n        | 'date_time'\r\n        | 'asset'\r\n        | 'modular_content'\r\n        | 'taxonomy'\r\n        | 'url_slug'\r\n        | 'guidelines'\r\n        | 'snippet'\r\n        | 'custom'\r\n        | 'subpages';\r\n\r\n    export class ContentItemElement implements SharedModels.IBaseModel<ElementContracts.IContentItemElementContract> {\r\n        public element!: SharedModels.ReferenceObject;\r\n        public value?: string | number | SharedModels.ReferenceObject[];\r\n        public searchableValue?: string;\r\n        public components!: ContentItemElementComponent[];\r\n        public mode?: 'autogenerated' | 'custom';\r\n        public _raw!: ElementContracts.IContentItemElementContract;\r\n\r\n        constructor(data: {\r\n            element: SharedModels.ReferenceObject;\r\n            value?: string | number | SharedModels.ReferenceObject[];\r\n            components?: ContentItemElementComponent[];\r\n            searchableValue?: string;\r\n            mode?: 'autogenerated' | 'custom';\r\n            _raw: ElementContracts.IContentItemElementContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export class ContentItemElementComponent\r\n        implements SharedModels.IBaseModel<ElementContracts.IContentItemElementComponent>\r\n    {\r\n        public id!: string;\r\n        public type!: SharedModels.ReferenceObject;\r\n        public elements!: ContentItemElement[];\r\n        public _raw!: ElementContracts.IContentItemElementComponent;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            type: SharedModels.ReferenceObject;\r\n            elements: ContentItemElement[];\r\n            _raw: ElementContracts.IContentItemElementComponent;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IElementData {\r\n        id: string;\r\n        name?: string;\r\n        codename: string;\r\n        type: ElementType;\r\n        guidelines: string;\r\n    }\r\n\r\n    export interface IMultipleChoiceOptionData {\r\n        name: string;\r\n    }\r\n\r\n    export interface IMultipleChoiceElementData extends IElementData {\r\n        options: IMultipleChoiceOptionData[];\r\n        mode: ElementMode;\r\n    }\r\n}\r\n", "import { ContentTypeSnippetContracts } from '../../contracts';\r\nimport { ContentTypeElements } from '../elements/content-type-element.models';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace ContentTypeSnippetModels {\r\n\r\n    export type ModifyContentTypeSnippetOperation = 'addInto' | 'remove' | 'replace';\r\n\r\n    export class ContentTypeSnippet\r\n        implements SharedModels.IBaseModel<ContentTypeSnippetContracts.IContentTypeSnippetContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public lastModified!: Date;\r\n        public elements!: ContentTypeElements.ContentTypeElementModel[];\r\n        public externalId?: string;\r\n        public _raw!: ContentTypeSnippetContracts.IContentTypeSnippetContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            codename: string;\r\n            lastModified: Date;\r\n            elements: ContentTypeElements.ContentTypeElementModel[];\r\n            externalId?: string;\r\n            _raw: ContentTypeSnippetContracts.IContentTypeSnippetContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IAddContentTypeSnippetData {\r\n        name: string;\r\n        elements: ContentTypeElements.IElementShared[];\r\n\r\n        external_id?: string;\r\n        codename?: string;\r\n    }\r\n\r\n    export interface IModifyContentTypeSnippetData {\r\n        op: ModifyContentTypeSnippetOperation;\r\n        path: string;\r\n        value?: any;\r\n\r\n        before?: SharedModels.IReferenceObject;\r\n        after?: SharedModels.IReferenceObject;\r\n    }\r\n}\r\n", "import { SharedModels } from '../shared/shared-models';\r\nimport { SharedContracts, WorkflowContracts } from '../../contracts';\r\n\r\nexport namespace WorkflowModels {\r\n\r\n    export interface LanguageVariantWorkflow {\r\n        workflowOdentifier: SharedContracts.ICodenameIdReferenceContract;\r\n        stepIdentifier: SharedContracts.ICodenameIdReferenceContract;\r\n    }\r\n\r\n    export class WorkflowStep implements SharedModels.IBaseModel<WorkflowContracts.IWorkflowStepContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public transitionsTo!: string[];\r\n        public _raw!: WorkflowContracts.IWorkflowStepContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            codename: string;\r\n            transitionsTo: string[];\r\n            _raw: WorkflowContracts.IWorkflowStepContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export class Workflow implements SharedModels.IBaseModel<WorkflowContracts.IWorkflowContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public scopes!: WorkflowContracts.IWorkflowScopeContract[];\r\n        public steps!: WorkflowContracts.IWorkflowStepNewContract[];\r\n        public publishedStep!: WorkflowContracts.IWorkflowPublishedStepContract;\r\n        public scheduledStep!: WorkflowContracts.IWorkflowScheduledStepContract;\r\n        public archivedStep!: WorkflowContracts.IWorkflowArchivedStepContract;\r\n        public _raw!: WorkflowContracts.IWorkflowContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            codename: string;\r\n            scopes: WorkflowContracts.IWorkflowScopeContract[];\r\n            steps: WorkflowContracts.IWorkflowStepNewContract[];\r\n            publishedStep: WorkflowContracts.IWorkflowPublishedStepContract;\r\n            scheduledStep: WorkflowContracts.IWorkflowScheduledStepContract;\r\n            archivedStep: WorkflowContracts.IWorkflowArchivedStepContract;\r\n            _raw: WorkflowContracts.IWorkflowContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IPublishLanguageVariantData {\r\n        /**\r\n         * ISO-8601 formatted date/time. Example: 2019-01-31T11:00:00+01:00.\r\n         * If you do not provide this property, the specified language variant is published immediately.\r\n         */\r\n        scheduled_to?: string;\r\n        display_timezone?: string;\r\n    }\r\n\r\n    export interface IUnpublishLanguageVarianthData {\r\n        /**\r\n         * ISO-8601 formatted date/time. Example: 2019-01-31T11:00:00+01:00.\r\n         * If you do not provide this property, the specified language variant is published immediately.\r\n         */\r\n        scheduled_to?: string;\r\n        display_timezone?: string;\r\n    }\r\n\r\n    export interface IChangeWorkflowOfLanguageVariantData {\r\n        workflow_identifier: {\r\n            id?: string;\r\n            codename?: string;\r\n        };\r\n        step_identifier: SharedContracts.IReferenceObjectContract;\r\n    }\r\n\r\n    export interface IAddWorkflowData {\r\n        name: string;\r\n        codename?: string;\r\n        scopes: {\r\n            content_types: SharedContracts.IReferenceObjectContract[];\r\n            collections?: SharedContracts.IReferenceObjectContract[];\r\n        }[];\r\n        steps: {\r\n            name: string;\r\n            codename: string;\r\n            color: WorkflowContracts.WorkflowColor;\r\n            transitions_to: {\r\n                step: {\r\n                    codename?: string;\r\n                };\r\n            }[];\r\n            role_ids: string[];\r\n        }[];\r\n        published_step: {\r\n            id?: string;\r\n            name?: string;\r\n            codename?: string;\r\n            create_new_version_role_ids?: string[];\r\n            unpublish_role_ids?: string[];\r\n        };\r\n        archived_step: {\r\n            id?: string;\r\n            name?: string;\r\n            codename?: string;\r\n            role_ids?: string[];\r\n        };\r\n    }\r\n\r\n    export interface IUpdateWorkflowData {\r\n        name: string;\r\n        codename?: string;\r\n        scopes: {\r\n            content_types: SharedContracts.IReferenceObjectContract[];\r\n            collections?: SharedContracts.IReferenceObjectContract[];\r\n        }[];\r\n        steps: {\r\n            id?: string;\r\n            name: string;\r\n            codename: string;\r\n            color: WorkflowContracts.WorkflowColor;\r\n            transitions_to: {\r\n                step: {\r\n                    id?: string;\r\n                    codename?: string;\r\n                };\r\n            }[];\r\n            role_ids: string[];\r\n        }[];\r\n        published_step: {\r\n            id?: string;\r\n            name?: string;\r\n            codename?: string;\r\n            create_new_version_role_ids?: string[];\r\n            unpublish_role_ids?: string[];\r\n        };\r\n        archived_step: {\r\n            id?: string;\r\n            name?: string;\r\n            codename?: string;\r\n            role_ids?: string[];\r\n        };\r\n    }\r\n}\r\n", "import { SharedModels } from '../shared/shared-models';\r\nimport { LanguageContracts } from '../../contracts';\r\n\r\nexport namespace LanguageModels {\r\n    export class LanguageModel implements SharedModels.IBaseModel<LanguageContracts.ILanguageModelContract> {\r\n        public name: string;\r\n        public id: string;\r\n        public codename: string;\r\n        public externalId?: string;\r\n        public isActive: boolean;\r\n        public isDefault: boolean;\r\n        public fallbackLanguage?: FallbackLanguageModel;\r\n        public _raw!: LanguageContracts.ILanguageModelContract;\r\n\r\n        constructor(data: {\r\n            name: string;\r\n            id: string;\r\n            codename: string;\r\n            externalId?: string;\r\n            isActive: boolean;\r\n            isDefault: boolean;\r\n            fallbackLanguage?: FallbackLanguageModel;\r\n            _raw: LanguageContracts.ILanguageModelContract;\r\n        }) {\r\n            this.name = data.name;\r\n            this.id = data.id;\r\n            this.codename = data.codename;\r\n            this.externalId = data.externalId;\r\n            this.isActive = data.isActive;\r\n            this.isDefault = data.isDefault;\r\n            this.fallbackLanguage = data.fallbackLanguage;\r\n            this._raw = data._raw;\r\n        }\r\n    }\r\n\r\n    export class FallbackLanguageModel {\r\n        public id: string;\r\n\r\n        constructor(data: { id: string }) {\r\n            this.id = data.id;\r\n        }\r\n    }\r\n\r\n    export type ModifyLanguageOperation = 'replace';\r\n\r\n    export interface IModifyLanguageData {\r\n        op: ModifyLanguageOperation;\r\n        property_name: 'name' | 'codename' | 'fallback_language' | 'is_active';\r\n        value: string | boolean | SharedModels.IReferenceObject;\r\n    }\r\n\r\n    export interface IAddLanguageData {\r\n        name: string;\r\n        codename: string;\r\n        is_active?: boolean;\r\n        fallback_language?: SharedModels.IReferenceObject;\r\n        external_id?: string;\r\n    }\r\n}\r\n", "export namespace Identifiers {\r\n    export enum TaskIdentifierEnum {\r\n        InternalId = 'internalId'\r\n    }\r\n\r\n    export enum ContentItemIdentifierEnum {\r\n        ExternalId = 'externalId',\r\n        InternalId = 'internalId',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum ContentTypeIdentifierEnum {\r\n        ExternalId = 'externalId',\r\n        InternalId = 'internalId',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum RenditionIdentifierEnum {\r\n        ExternalId = 'externalId',\r\n        InternalId = 'internalId'\r\n    }\r\n\r\n    export enum CollectionIdentifierEnum {\r\n        ExternalId = 'externalId',\r\n        InternalId = 'internalId',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum LanguageIdentifierEnum {\r\n        InternalId = 'internalId',\r\n        Codename = 'codename',\r\n        ExternalId = 'externalId'\r\n    }\r\n\r\n    export enum WorkflowIdentifierEnum {\r\n        Id = 'id',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum TaxonomyIdentifierEnum {\r\n        InternalId = 'internalId',\r\n        ExternalId = 'externalId',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum AssetIdentifierEnum {\r\n        InternalId = 'internalId',\r\n        ExternalId = 'externalId',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum WebhookIdentifierEnum {\r\n        Id = 'id'\r\n    }\r\n\r\n    export enum EnvironmentIdentifierEnum {\r\n        Id = 'id'\r\n    }\r\n\r\n    export enum UserIdentifierEnum {\r\n        Id = 'id',\r\n        Email = 'email'\r\n    }\r\n\r\n    export enum RoleIdentifierEnum {\r\n        Id = 'id',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export enum SpaceIdentifierEnum {\r\n        InternalId = 'internalId',\r\n        ExternalId = 'externalId',\r\n        Codename = 'codename'\r\n    }\r\n\r\n    export class AssetIdentifier {\r\n        constructor(public identifier: AssetIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === AssetIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === AssetIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            if (this.identifier === AssetIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class TaxonomyIdentifier {\r\n        constructor(public identifier: TaxonomyIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === TaxonomyIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === TaxonomyIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            if (this.identifier === TaxonomyIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class ContentTypeIdentifier {\r\n        constructor(public identifier: ContentTypeIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === ContentTypeIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            if (this.identifier === ContentTypeIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === ContentTypeIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class RenditionIdentifier {\r\n        constructor(public identifier: RenditionIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === RenditionIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === RenditionIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class CollectionIdentifier {\r\n        constructor(public identifier: CollectionIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === CollectionIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            if (this.identifier === CollectionIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === CollectionIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class WorkflowIdentifier {\r\n        constructor(public identifier: WorkflowIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === WorkflowIdentifierEnum.Id) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === WorkflowIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class TaskIdentifier {\r\n        constructor(public identifier: TaskIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === TaskIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class ContentItemIdentifier {\r\n        constructor(public identifier: ContentItemIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === ContentItemIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            if (this.identifier === ContentItemIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === ContentItemIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class LanguageIdentifier {\r\n        constructor(public identifier: LanguageIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === LanguageIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n\r\n            if (this.identifier === LanguageIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === LanguageIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class WebhookIdentifier {\r\n        constructor(public identifier: WebhookIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === WebhookIdentifierEnum.Id) {\r\n                return `${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class EnvironmentIdentifier {\r\n        constructor(public identifier: EnvironmentIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === EnvironmentIdentifierEnum.Id) {\r\n                return `${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class UserIdentifier {\r\n        constructor(public identifier: UserIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === UserIdentifierEnum.Id) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === UserIdentifierEnum.Email) {\r\n                return `email/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class RoleIdentifier {\r\n        constructor(public identifier: RoleIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === RoleIdentifierEnum.Id) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === RoleIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n\r\n    export class SpaceIdentifier {\r\n        constructor(public identifier: SpaceIdentifierEnum, public value: string) {}\r\n\r\n        getParamValue(): string {\r\n            if (this.identifier === SpaceIdentifierEnum.Codename) {\r\n                return `codename/${this.value}`;\r\n            }\r\n            if (this.identifier === SpaceIdentifierEnum.InternalId) {\r\n                return `${this.value}`;\r\n            }\r\n            if (this.identifier === SpaceIdentifierEnum.ExternalId) {\r\n                return `external-id/${this.value}`;\r\n            }\r\n            throw Error(`Unsupported identifier '${this.identifier}'`);\r\n        }\r\n    }\r\n}\r\n", "import { WebhookContracts } from '../../contracts/webhook-contracts';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace WebhookModels {\r\n    export type WebhookWorkflowStepOperation = 'publish' | 'unpublish' | 'archive' | 'restore' | 'upsert';\r\n    export type WebhookContentTypeActions = 'created' | 'changed' | 'deleted';\r\n    export type WebhookAssetActions = 'created' | 'changed' | 'metadata_changed' | 'deleted';\r\n    export type WebhookTaxonomyActions =\r\n        | 'created'\r\n        | 'metadata_changed'\r\n        | 'deleted'\r\n        | 'term_created'\r\n        | 'term_changed'\r\n        | 'term_deleted'\r\n        | 'terms_moved';\r\n    export type WebhookLanguageActions = 'created' | 'changed' | 'deleted';\r\n    export type WebhookContentItemActions =\r\n        | 'published'\r\n        | 'unpublished'\r\n        | 'created'\r\n        | 'changed'\r\n        | 'metadata_changed'\r\n        | 'deleted'\r\n        | 'workflow_step_changed';\r\n    export type WebhookManagementContentChangesOperations = 'archive' | 'create' | 'restore';\r\n    export type WebhookPreviewContentChangesOperations = 'archive' | 'upsert' | 'restore';\r\n    export type WebhookDeliveryTriggerSlots = 'published' | 'preview';\r\n    export type WebhookDeliveryTriggersEvents = 'all' | 'specific';\r\n    export type WebhookHealthStatus = 'unknown' | 'working' | 'failing' | 'dead';\r\n\r\n    export interface IAddLegacyWebhookData {\r\n        name: string;\r\n        secret: string;\r\n        url: string;\r\n        enabled?: boolean;\r\n        triggers: {\r\n            delivery_api_content_changes?: WebhookContracts.ILegacyWebhookDeliveryApiContentChangesContract[];\r\n            preview_delivery_api_content_changes?: WebhookContracts.ILegacyWebhookDeliveryApiContentChangesContract[];\r\n            workflow_step_changes?: WebhookContracts.ILegacyWebhookWorkflowStepChangesContract[];\r\n            management_api_content_changes?: WebhookContracts.ILegacyWebhookManagementApiContentChangesContract[];\r\n        };\r\n    }\r\n    export interface IAddWebhookData {\r\n        name: string;\r\n        secret: string;\r\n        url: string;\r\n        last_modified?: string;\r\n        enabled?: boolean;\r\n        delivery_triggers: {\r\n            slot: WebhookDeliveryTriggerSlots;\r\n            events: WebhookDeliveryTriggersEvents;\r\n            asset?: WebhookContracts.IWebhookAssetContract;\r\n            content_type?: WebhookContracts.IWebhookContentTypeContract;\r\n            taxonomy?: WebhookContracts.IWebhookTaxonomyContract;\r\n            language?: WebhookContracts.IWebhookLanguageContract;\r\n            content_item?: WebhookContracts.IWebhookContentItemContract;\r\n        };\r\n    }\r\n\r\n    export class WebhookDeliveryTriggersContentType {\r\n        public enabled: boolean;\r\n        public actions?: WebhookContentTypeActions[];\r\n\r\n        constructor(data: { enabled: boolean; actions?: WebhookContentTypeActions[] }) {\r\n            this.enabled = data.enabled;\r\n            this.actions = data.actions;\r\n        }\r\n    }\r\n\r\n    export class WebhookDeliveryTriggersAsset {\r\n        public enabled: boolean;\r\n        public actions?: WebhookAssetActions[];\r\n\r\n        constructor(data: { enabled: boolean; actions?: WebhookAssetActions[] }) {\r\n            this.enabled = data.enabled;\r\n            this.actions = data.actions;\r\n        }\r\n    }\r\n\r\n    export class WebhookDeliveryTriggersTaxonomy {\r\n        public enabled: boolean;\r\n        public actions?: WebhookTaxonomyActions[];\r\n\r\n        constructor(data: { enabled: boolean; actions?: WebhookTaxonomyActions[] }) {\r\n            this.enabled = data.enabled;\r\n            this.actions = data.actions;\r\n        }\r\n    }\r\n\r\n    export class WebhookDeliveryTriggersLanguage {\r\n        public enabled: boolean;\r\n        public actions?: WebhookLanguageActions[];\r\n\r\n        constructor(data: { enabled: boolean; actions?: WebhookLanguageActions[] }) {\r\n            this.enabled = data.enabled;\r\n            this.actions = data.actions;\r\n        }\r\n    }\r\n\r\n    export class WebhookDeliveryTriggersContentItem {\r\n        public enabled: boolean;\r\n        public actions?: WebhookContracts.IContentItemActions[];\r\n        public filters?: WebhookContracts.IContentItemFilters;\r\n\r\n        constructor(data: {\r\n            enabled: boolean;\r\n            actions?: WebhookContracts.IContentItemActions[];\r\n            filters?: WebhookContracts.IContentItemFilters;\r\n        }) {\r\n            this.enabled = data.enabled;\r\n            this.actions = data.actions;\r\n            this.filters = data.filters;\r\n        }\r\n    }\r\n\r\n    export class WebhookTransitionsTo {\r\n        public id: string;\r\n\r\n        constructor(data: { id: string }) {\r\n            this.id = data.id;\r\n        }\r\n    }\r\n\r\n    export class LegacyWebhookWorkflowStepChanges {\r\n        public type: 'content_item_variant';\r\n        public transitionsTo: WebhookTransitionsTo[];\r\n\r\n        constructor(data: { type: 'content_item_variant'; transitionsTo: WebhookTransitionsTo[] }) {\r\n            this.type = data.type;\r\n            this.transitionsTo = data.transitionsTo;\r\n        }\r\n    }\r\n\r\n    export class LegacyWebhookDeliveryApiContentChanges {\r\n        public type: 'taxonomy' | 'content_item_variant';\r\n        public operations: WebhookWorkflowStepOperation[];\r\n\r\n        constructor(data: { type: 'taxonomy' | 'content_item_variant'; operations: WebhookWorkflowStepOperation[] }) {\r\n            this.type = data.type;\r\n            this.operations = data.operations;\r\n        }\r\n    }\r\n\r\n    export class LegacyWebhookPreviewDeliveryApiContentChanges {\r\n        public type: 'taxonomy' | 'content_item_variant';\r\n        public operations: WebhookPreviewContentChangesOperations[];\r\n\r\n        constructor(data: {\r\n            type: 'taxonomy' | 'content_item_variant';\r\n            operations: WebhookPreviewContentChangesOperations[];\r\n        }) {\r\n            this.type = data.type;\r\n            this.operations = data.operations;\r\n        }\r\n    }\r\n\r\n    export class LegacyWebhookManagementApiContentChanges {\r\n        public type: 'taxonomy' | 'content_item_variant';\r\n        public operations: WebhookManagementContentChangesOperations[];\r\n\r\n        constructor(data: {\r\n            type: 'taxonomy' | 'content_item_variant';\r\n            operations: WebhookManagementContentChangesOperations[];\r\n        }) {\r\n            this.type = data.type;\r\n            this.operations = data.operations;\r\n        }\r\n    }\r\n\r\n    export interface IWebhookHeader {\r\n        key: string;\r\n        value: string;\r\n    }\r\n\r\n    export class Webhook implements SharedModels.IBaseModel<WebhookContracts.IWebhookContract> {\r\n        public id: string;\r\n        public name: string;\r\n        public secret: string;\r\n        public url: string;\r\n        public enabled?: boolean;\r\n        public lastModified?: Date;\r\n        public healthStatus?: WebhookHealthStatus;\r\n        public headers?: IWebhookHeader[];\r\n        public deliveryTriggers: {\r\n            slot: WebhookDeliveryTriggerSlots;\r\n            events: WebhookDeliveryTriggersEvents;\r\n            asset?: WebhookContracts.IWebhookAssetContract;\r\n            contentType?: WebhookContracts.IWebhookContentTypeContract;\r\n            taxonomy?: WebhookContracts.IWebhookTaxonomyContract;\r\n            language?: WebhookContracts.IWebhookLanguageContract;\r\n            contentItem?: WebhookContracts.IWebhookContentItemContract;\r\n        };\r\n        public _raw: WebhookContracts.IWebhookContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            secret: string;\r\n            url: string;\r\n            enabled?: boolean;\r\n            lastModified?: Date;\r\n            healthStatus?: WebhookHealthStatus;\r\n            headers?: IWebhookHeader[];\r\n            deliveryTriggers: {\r\n                slot: WebhookDeliveryTriggerSlots;\r\n                events: WebhookDeliveryTriggersEvents;\r\n                asset?: WebhookContracts.IWebhookAssetContract;\r\n                contentType?: WebhookContracts.IWebhookContentTypeContract;\r\n                taxonomy?: WebhookContracts.IWebhookTaxonomyContract;\r\n                language?: WebhookContracts.IWebhookLanguageContract;\r\n                contentItem?: WebhookContracts.IWebhookContentItemContract;\r\n            };\r\n            _raw: WebhookContracts.IWebhookContract;\r\n        }) {\r\n            this.id = data.id;\r\n            this.name = data.name;\r\n            this.secret = data.secret;\r\n            this.url = data.url;\r\n            this.lastModified = data.lastModified;\r\n            this.healthStatus = data.healthStatus;\r\n            this.deliveryTriggers = data.deliveryTriggers;\r\n            this.enabled = data.enabled;\r\n            this.headers = data.headers;\r\n            this._raw = data._raw;\r\n        }\r\n    }\r\n\r\n    export class LegacyWebhook implements SharedModels.IBaseModel<WebhookContracts.ILegacyWebhookContract> {\r\n        public id: string;\r\n        public name: string;\r\n        public secret: string;\r\n        public url: string;\r\n        public enabled?: boolean;\r\n        public healthStatus?: string;\r\n        public lastModified?: Date;\r\n        public triggers: {\r\n            deliveryApiContentChanges: LegacyWebhookDeliveryApiContentChanges[];\r\n            previewDeliveryContentChanges: LegacyWebhookPreviewDeliveryApiContentChanges[];\r\n            workflowStepChanges: LegacyWebhookWorkflowStepChanges[];\r\n            managementApiContentChanges: LegacyWebhookManagementApiContentChanges[];\r\n        };\r\n        public _raw!: WebhookContracts.ILegacyWebhookContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            secret: string;\r\n            url: string;\r\n            healthStatus?: string;\r\n            lastModified?: Date;\r\n            triggers: {\r\n                deliveryApiContentChanges: LegacyWebhookDeliveryApiContentChanges[];\r\n                workflowStepChanges: LegacyWebhookWorkflowStepChanges[];\r\n                previewDeliveryContentChanges: LegacyWebhookPreviewDeliveryApiContentChanges[];\r\n                managementApiContentChanges: LegacyWebhookManagementApiContentChanges[];\r\n            };\r\n            _raw: WebhookContracts.ILegacyWebhookContract;\r\n        }) {\r\n            this.id = data.id;\r\n            this.name = data.name;\r\n            this.secret = data.secret;\r\n            this.url = data.url;\r\n            this.triggers = data.triggers;\r\n            this.lastModified = data.lastModified;\r\n            this.healthStatus = data.healthStatus;\r\n        }\r\n    }\r\n}\r\n", "import { SharedModels } from '../shared/shared-models';\r\nimport { CollectionContracts } from '../../contracts';\r\n\r\nexport namespace CollectionModels {\r\n    export class Collection implements SharedModels.IBaseModel<CollectionContracts.ICollectionContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public _raw!: CollectionContracts.ICollectionContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            codename: string;\r\n            _raw: CollectionContracts.ICollectionContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface ISetCollectionData {\r\n        op: 'addInto' | 'replace' | 'move' | 'remove';\r\n        value?:\r\n            | string\r\n            | {\r\n                  name: string;\r\n                  codename?: string;\r\n                  externalId?: string;\r\n              };\r\n        after?: SharedModels.IReferenceObject;\r\n        before?: SharedModels.IReferenceObject;\r\n        reference?: SharedModels.IReferenceObject;\r\n        property_name?: string;\r\n    }\r\n}\r\n", "import { SharedModels } from '../shared/shared-models';\r\nimport { SharedContracts, SubscriptionContracts } from '../../contracts';\r\n\r\nexport namespace SubscriptionModels {\r\n    export interface ISubscriptionEnvironment {\r\n        name: string;\r\n        id: string;\r\n    }\r\n\r\n    export class SubscriptionProject\r\n        implements SharedModels.IBaseModel<SubscriptionContracts.ISubscriptionProjectContract>\r\n    {\r\n        public id!: string;\r\n        public isActive!: boolean;\r\n        public name!: string;\r\n        public environments!: ISubscriptionEnvironment[];\r\n        public _raw!: SubscriptionContracts.ISubscriptionProjectContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            isActive: boolean;\r\n            name: string;\r\n            environments: ISubscriptionEnvironment[];\r\n            _raw: SubscriptionContracts.ISubscriptionProjectContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface ISubscriptionCollectionGroup {\r\n        collections: SharedContracts.IReferenceObjectContract[];\r\n        roles: ISubscriptionUserRole[];\r\n    }\r\n\r\n    export interface ISubscriptionUserRoleLanguage {\r\n        id: string;\r\n        externalId?: string;\r\n        codename: string;\r\n        name: string;\r\n        isActive: boolean;\r\n    }\r\n\r\n    export interface ISubscriptionUserRole {\r\n        id: string;\r\n        name: string;\r\n        codename: string;\r\n        languages: ISubscriptionUserRoleLanguage[];\r\n    }\r\n\r\n    export interface ISubscriptionUserEnvironment {\r\n        id: string;\r\n        name: string;\r\n        isUserActive: boolean;\r\n        lastActivityAt?: Date;\r\n        collectionGroups: ISubscriptionCollectionGroup[];\r\n    }\r\n\r\n    export interface ISubscriptionUserProject {\r\n        id: string;\r\n        name: string;\r\n        environments: ISubscriptionUserEnvironment[];\r\n    }\r\n\r\n    export class SubscriptionUser {\r\n        public id!: string;\r\n        public email!: string;\r\n        public hasPendingInvitation!: boolean;\r\n        public projects!: ISubscriptionUserProject[];\r\n\r\n        public firstName?: string;\r\n        public lastName?: string;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            email: string;\r\n            hasPendingInvitation: boolean;\r\n            projects: ISubscriptionUserProject[];\r\n\r\n            firstName?: string;\r\n            lastName?: string;\r\n            _raw: SubscriptionContracts.ISubscriptionUserContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n}\r\n", "import { SharedModels } from '../shared/shared-models';\r\nimport { RoleContracts } from '../../contracts';\r\n\r\nexport namespace RoleModels {\r\n    export class Role implements SharedModels.IBaseModel<RoleContracts.IRoleContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename?: string;\r\n        public _raw!: RoleContracts.IRoleContract;\r\n\r\n        constructor(data: { id: string; name: string; codename?: string; _raw: RoleContracts.IRoleContract }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n}\r\n", "import { SharedModels } from '../shared/shared-models';\r\nimport { ProjectUserContracts, SharedContracts } from '../../contracts';\r\n\r\nexport namespace ProjectUserModels {\r\n    export interface IProjectUserCollectionGroup {\r\n        collections: SharedContracts.IReferenceObjectContract[];\r\n        roles: IProjectUserRole[];\r\n    }\r\n\r\n    export interface IProjectUserRole {\r\n        id: string;\r\n        languages: SharedContracts.IReferenceObjectContract[];\r\n    }\r\n\r\n    export class ProjectUser implements SharedModels.IBaseModel<ProjectUserContracts.IUserContract> {\r\n        userId!: string;\r\n        collectionGroups!: CollectionGroup[];\r\n        _raw!: ProjectUserContracts.IUserContract;\r\n\r\n        constructor(data: {\r\n            userId: string;\r\n            collectionGroups: CollectionGroup[];\r\n            _raw: ProjectUserContracts.IUserContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export class CollectionGroup\r\n        implements SharedModels.IBaseModel<ProjectUserContracts.IProjectUserCollectionGroupContract>\r\n    {\r\n        collections!: SharedContracts.IReferenceObjectContract[];\r\n        roles!: ProjectUserModels.IProjectUserRole[];\r\n        _raw!: ProjectUserContracts.IProjectUserCollectionGroupContract;\r\n\r\n        constructor(data: {\r\n            collections: SharedContracts.IReferenceObjectContract[];\r\n            roles: ProjectUserModels.IProjectUserRole[];\r\n            _raw: ProjectUserContracts.IProjectUserCollectionGroupContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface ICollectionGroupsData {\r\n        collections: SharedContracts.IReferenceObjectContract[];\r\n        roles: {\r\n            id: string;\r\n            languages: SharedContracts.IReferenceObjectContract[];\r\n        }[];\r\n    }\r\n\r\n    export interface IInviteUserData {\r\n        email: string;\r\n        collection_groups: ICollectionGroupsData[];\r\n    }\r\n\r\n    export interface IChangeUserRoleData {\r\n        collection_groups: ICollectionGroupsData[];\r\n    }\r\n}\r\n", "import { SharedModels } from '../shared/shared-models';\r\nimport { AssetRenditionContracts } from '../../contracts';\r\n\r\nexport namespace AssetRenditionModels {\r\n    export interface IAssetRenditionTransformation {\r\n        mode: 'rect';\r\n        fit: 'clip';\r\n        customWidth?: number;\r\n        customHeight?: number;\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        height: number;\r\n    }\r\n\r\n    export class AssetRendition implements SharedModels.IBaseModel<AssetRenditionContracts.IAssetRenditionContract> {\r\n        public renditionId!: string;\r\n        public assetId!: string;\r\n        public externalId!: string;\r\n        public lastModified!: Date;\r\n        public transformation!: IAssetRenditionTransformation;\r\n        public _raw!: AssetRenditionContracts.IAssetRenditionContract;\r\n\r\n        constructor(data: {\r\n            renditionId: string;\r\n            assetId: string;\r\n            externalId: string;\r\n            lastModified: Date;\r\n            transformation: IAssetRenditionTransformation;\r\n            _raw: AssetRenditionContracts.IAssetRenditionContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n\r\n    export interface IAddAssetRenditionData {\r\n        external_id?: string;\r\n        transformation: AssetRenditionContracts.IAssetRenditionTransformationContract;\r\n    }\r\n\r\n    export interface IModifyAssetRenditionData {\r\n        transformation: AssetRenditionContracts.IAssetRenditionTransformationContract;\r\n    }\r\n}\r\n", "import { EnvironmentContracts } from '../../contracts';\r\n\r\nexport namespace EnvironmentModels {\r\n    export class EnvironmentReportModel {\r\n        constructor(public id: string, public name: string) {}\r\n    }\r\n\r\n    export class EnvironmentValidationVariantIssueModel {\r\n        public readonly issue_type: EnvironmentContracts.EnvironmentValidationIssueType = 'variant_issue';\r\n\r\n        constructor(\r\n            public item: EnvironmentVariantContentItemModel,\r\n            public language: EnvironmentVariantLanguageModel,\r\n            public issues: EnvironmentIssueModel[]\r\n        ) {}\r\n    }\r\n\r\n    export class EnvironmentValidationTypeIssueModel {\r\n        public readonly issue_type: EnvironmentContracts.EnvironmentValidationIssueType = 'type_issue';\r\n\r\n        constructor(public type: EnvironmentTypeModel, public issues: EnvironmentIssueModel[]) {}\r\n    }\r\n\r\n    export class EnvironmentInformationModel {\r\n        constructor(public id: string, public name: string, public environment: string) {}\r\n    }\r\n\r\n    export class EnvironmentVariantContentItemModel {\r\n        constructor(public id: string, public name: string, public codename: string) {}\r\n    }\r\n\r\n    export class EnvironmentVariantLanguageModel {\r\n        constructor(public id: string, public name: string, public codename: string) {}\r\n    }\r\n\r\n    export class EnvironmentVariantElementModel {\r\n        constructor(public id: string, public name: string, public codename: string) {}\r\n    }\r\n\r\n    export class EnvironmentTypeIssueModel {\r\n        constructor(public type: EnvironmentTypeModel, public issues: EnvironmentIssueModel[]) {}\r\n    }\r\n\r\n    export class EnvironmentTypeModel {\r\n        constructor(public id: string, public name: string, public codename: string) {}\r\n    }\r\n\r\n    export class EnvironmentIssueModel {\r\n        constructor(public element: EnvironmentVariantElementModel, public messages: string[]) {}\r\n    }\r\n\r\n    export class EnvironmentVariantIssueModel {\r\n        constructor(\r\n            public item: EnvironmentVariantContentItemModel,\r\n            public language: EnvironmentVariantLanguageModel,\r\n            public issues: EnvironmentIssueModel[]\r\n        ) {}\r\n    }\r\n\r\n    export class EnvironmentCloningStateModel {\r\n        constructor(public cloningState: string) {}\r\n    }\r\n\r\n    export interface IModifyEnvironmentData {\r\n        op: 'rename_environment';\r\n        value: string;\r\n    }\r\n\r\n    export class EnvironmentModel {\r\n        constructor(public id: string, public name: string, public isProduction: boolean) {}\r\n    }\r\n\r\n    export interface ICloneEnvironmentData {\r\n        name: string;\r\n        roles_to_activate?: string[];\r\n    }\r\n\r\n    export class CloneEnvironmentModel {\r\n        constructor(\r\n            public id: string,\r\n            public managementApiKey: string,\r\n            public deliveryPreviewApiKey: string,\r\n            public securedDeliveryApiKey: string\r\n        ) {}\r\n    }\r\n\r\n    export interface IMarkEnvironmentAsProductionData {\r\n        enable_webhooks: boolean;\r\n    }\r\n}\r\n", "import { SharedContracts } from '../../contracts';\r\nimport { AssetModels } from './asset.models';\r\n\r\nexport class AssetElementsBuilder {\r\n    taxonomyElement(\r\n        element: AssetModels.IAssetElementData<SharedContracts.IReferenceObjectContract[]>\r\n    ): AssetModels.IAssetElementValueType {\r\n        return element;\r\n    }\r\n}\r\n\r\nexport const assetElementsBuilder = new AssetElementsBuilder();\r\n", "import { SharedContracts, SpaceContracts } from '../../contracts';\r\nimport { SharedModels } from '../shared/shared-models';\r\n\r\nexport namespace SpaceModels {\r\n    export type ModifySpaceOperation = 'replace';\r\n\r\n    export interface IModifySpaceData {\r\n        op: ModifySpaceOperation;\r\n        property_name: string;\r\n        value: string;\r\n    }\r\n\r\n    export interface IAddSpaceData {\r\n        name: string;\r\n        codename?: string;\r\n        web_spotlight_root_item?: SharedContracts.IReferenceObjectContract;\r\n        collections?: SharedContracts.IReferenceObjectContract[];\r\n    }\r\n\r\n    export class Space implements SharedModels.IBaseModel<SpaceContracts.ISpaceContract> {\r\n        public id!: string;\r\n        public name!: string;\r\n        public codename!: string;\r\n        public webSpotlightRootItem?: SharedModels.ReferenceObject;\r\n        public collections?: SharedModels.ReferenceObject[];\r\n        public _raw!: SpaceContracts.ISpaceContract;\r\n\r\n        constructor(data: {\r\n            id: string;\r\n            name: string;\r\n            codename: string;\r\n            webSpotlightRootItem?: SharedModels.ReferenceObject;\r\n            collections?: SharedModels.ReferenceObject[];\r\n            _raw: SpaceContracts.ISpaceContract;\r\n        }) {\r\n            Object.assign(this, data);\r\n        }\r\n    }\r\n}\r\n", "import { SharedModels } from '../shared/shared-models';\r\nimport { PreviewContracts } from '../../contracts';\r\n\r\nexport namespace PreviewModels {\r\n    export interface IPreviewSpace {\r\n        id: string;\r\n    }\r\n\r\n    export interface IPreviewContentType {\r\n        id: string;\r\n    }\r\n\r\n    export interface IPreviewUrlPattern {\r\n        space: IPreviewSpace | null;\r\n        urlPattern: string;\r\n    }\r\n\r\n    export interface IPreviewUrlPatterns {\r\n        contentType: IPreviewContentType;\r\n        urlPatterns: IPreviewUrlPattern[];\r\n    }\r\n\r\n    export interface IPreviewSpaceDomain {\r\n        space: IPreviewSpace;\r\n        domain: string;\r\n    }\r\n\r\n    export class PreviewConfiguration\r\n        implements SharedModels.IBaseModel<PreviewContracts.IPreviewConfigurationContract>\r\n    {\r\n        public spaceDomains: IPreviewSpaceDomain[];\r\n        public previewUrlPatterns: IPreviewUrlPatterns[];\r\n        public _raw: PreviewContracts.IPreviewConfigurationContract;\r\n\r\n        constructor(data: {\r\n            spaceDomains: IPreviewSpaceDomain[];\r\n            previewUrlPatterns: IPreviewUrlPatterns[];\r\n            _raw: PreviewContracts.IPreviewConfigurationContract;\r\n        }) {\r\n            this.spaceDomains = data.spaceDomains;\r\n            this.previewUrlPatterns = data.previewUrlPatterns;\r\n            this._raw = data._raw;\r\n        }\r\n    }\r\n\r\n    export interface IModifyPreviewConfigurationData {\r\n        space_domains: {\r\n            space: {\r\n                id?: string;\r\n                codename?: string;\r\n            };\r\n            domain: string;\r\n        }[];\r\n        preview_url_patterns: {\r\n            content_type: {\r\n                id?: string;\r\n                codename?: string;\r\n                external_id?: string;\r\n            };\r\n            url_patterns: {\r\n                space: null | {\r\n                    id?: string;\r\n                    codename?: string;\r\n                };\r\n                url_pattern: string;\r\n            }[];\r\n        }[];\r\n    }\r\n}\r\n", "import { IQueryParameter, Parameters, IHeader, IHttpCancelRequestToken } from '@kontent-ai/core-sdk';\r\n\r\nimport { IManagementClientConfig } from '../config/imanagement-client-config.interface';\r\nimport { ContentManagementApiEndpoints, IContentManagementQueryConfig } from '../models';\r\nimport { BaseResponses } from '../responses';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport abstract class BaseQuery<TResponse extends BaseResponses.IContentManagementResponse> {\r\n    private _customUrl?: string;\r\n\r\n    protected readonly queryConfig: IContentManagementQueryConfig = {\r\n        headers: [],\r\n        cancelTokenRequest: undefined\r\n    };\r\n    protected readonly parameters: IQueryParameter[] = [];\r\n    protected readonly apiEndpoints: ContentManagementApiEndpoints = new ContentManagementApiEndpoints({\r\n        environmentId: this.config.environmentId,\r\n        subscriptionId: this.config.subscriptionId\r\n    });\r\n    protected _addSlashToUrl: boolean = true;\r\n\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {}\r\n\r\n    /**\r\n     * Gets url for this query\r\n     */\r\n    getUrl(): string {\r\n        // use custom URL if user specified it\r\n        if (this._customUrl) {\r\n            return this._customUrl;\r\n        }\r\n\r\n        return this.getUrlForAction(this.getAction());\r\n    }\r\n\r\n    /**\r\n     * Adds header to request\r\n     * @param header Header to add\r\n     */\r\n    withHeader(header: IHeader): this {\r\n        this.queryConfig.headers.push(header);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Adds headers to request\r\n     * @param headers Headers to add\r\n     */\r\n    withHeaders(headers: IHeader[]): this {\r\n        this.queryConfig.headers.push(...headers);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Adds cancel token to request\r\n     */\r\n    withCancelToken(tokenRequest: IHttpCancelRequestToken<any>): this {\r\n        this.queryConfig.cancelTokenRequest = tokenRequest;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets array of currently set headers\r\n     */\r\n    getHeaders(): IHeader[] {\r\n        return this.queryConfig.headers;\r\n    }\r\n\r\n    /**\r\n     * Sets custom query parmeter that will be added to URL\r\n     * @param name Parameter name\r\n     * @param value Parameter value\r\n     */\r\n    withCustomParameter(name: string, value: string): this {\r\n        this.parameters.push(new Parameters.CustomParameter(name, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Overrides default url resolver and resolves this query with a custom one\r\n     * @param url Custom url to resolve query\r\n     */\r\n    withUrl(url: string): this {\r\n        this._customUrl = url;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets parameters assigned to this query\r\n     */\r\n    getParameters(): IQueryParameter[] {\r\n        return this.parameters;\r\n    }\r\n\r\n    /**\r\n     * Gets promise to resolve this query\r\n     */\r\n    abstract toPromise(): Promise<TResponse>;\r\n\r\n    /**\r\n     * Gets action for this query\r\n     */\r\n    protected abstract getAction(): string;\r\n\r\n    protected getUrlForAction(action: string): string {\r\n        return encodeURI(this.queryService.getFullUrl(action, this.getParameters(), this._addSlashToUrl));\r\n    }\r\n}\r\n", "\r\nimport { IManagementClientConfig } from '../config/imanagement-client-config.interface';\r\nimport { IContentManagementListQueryConfig } from '../models';\r\nimport { BaseResponses } from '../responses';\r\nimport { ManagementQueryService } from '../services';\r\nimport { BaseQuery } from './base-query';\r\n\r\nexport abstract class BaseListingQuery<\r\n    TResponse extends BaseResponses.IContentManagementListResponse,\r\n    TAllResponse extends BaseResponses.IContentManagementListAllResponse\r\n> extends BaseQuery<TResponse> {\r\n    protected readonly xContinuationHeaderName: string = 'x-continuation';\r\n    protected listQueryConfig?: IContentManagementListQueryConfig<TResponse>;\r\n\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Configuration for list queries\r\n     * @param config List configuration\r\n     */\r\n    withListQueryConfig(config?: IContentManagementListQueryConfig<TResponse>): this {\r\n        this.listQueryConfig = config;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets the 'x-continuation' header value. This can be used for fetching next pages.\r\n     * @param token Value from continuation_token property\r\n     */\r\n    xContinuationToken(token: string): this {\r\n        this.queryConfig.headers.push({\r\n            header: this.xContinuationHeaderName,\r\n            value: token\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Query to get all items. Uses paging data and may execute multiple HTTP requests depending on number of items\r\n     */\r\n     toAllPromise(): Promise<TAllResponse> {\r\n        return this.queryService.getListAllResponseAsync<TResponse, TAllResponse>({\r\n            listQueryConfig: this.listQueryConfig,\r\n            allResponseFactory: (items, responses) => this.allResponseFactory(items, responses),\r\n            getResponse: token => {\r\n                if (token) {\r\n                    this.xContinuationToken(token).toPromise();\r\n                }\r\n\r\n                return this.toPromise();\r\n            }\r\n        });\r\n    }\r\n\r\n    protected abstract allResponseFactory(items: any[], responses: TResponse[]): TAllResponse;\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class ContentItemIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.ContentItemIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id of content item\r\n    */\r\n    byItemId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param id External Id of content item\r\n    */\r\n    byItemExternalId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.ExternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename of content item\r\n    */\r\n    byItemCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class IdIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.ContentItemIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id\r\n    */\r\n    byItemId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param externalId External Id\r\n    */\r\n    byItemExternalId(externalId: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.ExternalId, externalId));\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class DataQuery<TResult, TData> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            data: TData) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Gets query with data\r\n     * @param data Data for query\r\n     */\r\n    withData(data: TData): TResult {\r\n        return this.buildResult(this.config, this.queryService, data);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class IdCodenameIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.ContentItemIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id\r\n    */\r\n    byItemId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename\r\n    */\r\n    byItemCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n", "import { Identifiers } from '../models/identifiers';\r\nimport { IManagementClientConfig } from '../config';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class EnvironmentIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            itentifier: Identifiers.EnvironmentIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * For given environment by id\r\n     * @param environmentId EnvironmentId\r\n     */\r\n    environmentId(environmentId: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.EnvironmentIdentifier(Identifiers.EnvironmentIdentifierEnum.Id, environmentId)\r\n        );\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class LanguageIdAndCodenameIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.LanguageIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id\r\n    */\r\n    byLanguageId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.LanguageIdentifier(Identifiers.LanguageIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename\r\n    */\r\n    byLanguageCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.LanguageIdentifier(Identifiers.LanguageIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class TaxonomyIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.TaxonomyIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id of content item\r\n    */\r\n    byTaxonomyId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.TaxonomyIdentifier(Identifiers.TaxonomyIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param id External Id of content item\r\n    */\r\n    byTaxonomyExternalId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.TaxonomyIdentifier(Identifiers.TaxonomyIdentifierEnum.ExternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename of content item\r\n    */\r\n    byTaxonomyCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.TaxonomyIdentifier(Identifiers.TaxonomyIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class AssetIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.AssetIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Gets asset using internal Id\r\n     * @param id Internal Id of the asset\r\n     */\r\n    byAssetId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.AssetIdentifier(Identifiers.AssetIdentifierEnum.InternalId, id)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets asset using external Id\r\n     * @param id External Id of the asset\r\n     */\r\n    byAssetExternalId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.AssetIdentifier(Identifiers.AssetIdentifierEnum.ExternalId, id)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets asset using codename\r\n     * @param id Codename of the asset\r\n     */\r\n    byAssetCodename(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.AssetIdentifier(Identifiers.AssetIdentifierEnum.Codename, id)\r\n        );\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class WorkflowStepIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.WorkflowIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Id identifier\r\n     * @param id If of the workflow step\r\n     */\r\n    byWorkflowStepId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.WorkflowIdentifier(Identifiers.WorkflowIdentifierEnum.Id, id)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Codename identifier\r\n     * @param codename codename of the workflow step\r\n     */\r\n    byWorkflowStepCodename(codename: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.WorkflowIdentifier(Identifiers.WorkflowIdentifierEnum.Codename, codename)\r\n        );\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class ContentTypeIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.ContentTypeIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id of content item\r\n    */\r\n    byTypeId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentTypeIdentifier(Identifiers.ContentTypeIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param id External Id of content item\r\n    */\r\n    byTypeExternalId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentTypeIdentifier(Identifiers.ContentTypeIdentifierEnum.ExternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename of content item\r\n    */\r\n    byTypeCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentTypeIdentifier(Identifiers.ContentTypeIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class ContentItemExternalIdIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.ContentItemIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    byItemExternalId(externalId: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentItemIdentifier(Identifiers.ContentItemIdentifierEnum.ExternalId, externalId));\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class LanguageIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.LanguageIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using external Id\r\n    * @param externalId Internal Id\r\n    */\r\n    byExternalId(externalId: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.LanguageIdentifier(Identifiers.LanguageIdentifierEnum.ExternalId, externalId));\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id\r\n    */\r\n    byLanguageId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.LanguageIdentifier(Identifiers.LanguageIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename\r\n    */\r\n    byLanguageCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.LanguageIdentifier(Identifiers.LanguageIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class ContentTypeCodenameAndIdIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.ContentTypeIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets query using internal Id\r\n    * @param id Internal Id of content item\r\n    */\r\n    byTypeId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentTypeIdentifier(Identifiers.ContentTypeIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename of content item\r\n    */\r\n    byTypeCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.ContentTypeIdentifier(Identifiers.ContentTypeIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class DataQueryOptional<TResult, TData> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            data: TData | undefined) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Gets query without data\r\n     */\r\n    withoutData(): TResult {\r\n        return this.buildResult(this.config, this.queryService, undefined);\r\n    }\r\n\r\n    /**\r\n     * Gets query with data\r\n     * @param data Data for query\r\n     */\r\n    withData(data: TData): TResult {\r\n        return this.buildResult(this.config, this.queryService, data);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class WebhookIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.WebhookIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Id identifier\r\n     * @param id Id of the webhook\r\n     */\r\n    byId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.WebhookIdentifier(Identifiers.WebhookIdentifierEnum.Id, id)\r\n        );\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class ActionQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            action: string) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Sets action to use for request\r\n     */\r\n    withAction(action: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, action);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class CollectionIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.CollectionIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id of collection\r\n    */\r\n    byCollectionId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.CollectionIdentifier(Identifiers.CollectionIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param id External Id of collection\r\n    */\r\n    byCollectionExternalId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.CollectionIdentifier(Identifiers.CollectionIdentifierEnum.ExternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename of collection\r\n    */\r\n    byCollectionCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.CollectionIdentifier(Identifiers.CollectionIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class UserIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.UserIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Gets using email\r\n     * @param email Email\r\n     */\r\n    byEmail(email: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.UserIdentifier(Identifiers.UserIdentifierEnum.Email, email)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets using internal Id\r\n     * @param id Internal Id\r\n     */\r\n    byId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.UserIdentifier(Identifiers.UserIdentifierEnum.Id, id)\r\n        );\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class RoleIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.RoleIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Id\r\n     * @param id Internal Id\r\n     */\r\n    byId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.RoleIdentifier(Identifiers.RoleIdentifierEnum.Id, id)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Codename\r\n     * @param codename Codename\r\n     */\r\n    byCodename(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.RoleIdentifier(Identifiers.RoleIdentifierEnum.Codename, id)\r\n        );\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class RenditionIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.RenditionIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id of content item\r\n    */\r\n    byRenditionId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.RenditionIdentifier(Identifiers.RenditionIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param id External Id of content item\r\n    */\r\n    byRenditionExternalId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.RenditionIdentifier(Identifiers.RenditionIdentifierEnum.ExternalId, id));\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class WorkflowIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.WorkflowIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Id identifier\r\n     * @param id If of the workflow\r\n     */\r\n    byWorkflowId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.WorkflowIdentifier(Identifiers.WorkflowIdentifierEnum.Id, id)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Codename identifier\r\n     * @param codename codename of the workflow\r\n     */\r\n    byWorkflowCodename(codename: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.WorkflowIdentifier(Identifiers.WorkflowIdentifierEnum.Codename, codename)\r\n        );\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class TaskIdentifierQuery<TResult> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.TaskIdentifier\r\n        ) => TResult\r\n    ) {}\r\n\r\n    /**\r\n     * Query by task Id\r\n     * @param id Task id\r\n     */\r\n    byTaskId(id: string): TResult {\r\n        return this.buildResult(\r\n            this.config,\r\n            this.queryService,\r\n            new Identifiers.TaskIdentifier(Identifiers.TaskIdentifierEnum.InternalId, id)\r\n        );\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../config';\r\nimport { Identifiers } from '../models';\r\nimport { ManagementQueryService } from '../services';\r\n\r\nexport class SpaceIdentifierQuery<TResult> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected buildResult: (\r\n            config: IManagementClientConfig,\r\n            queryService: ManagementQueryService,\r\n            identifier: Identifiers.SpaceIdentifier) => TResult\r\n    ) {\r\n    }\r\n\r\n    /**\r\n    * Gets using internal Id\r\n    * @param id Internal Id of space\r\n    */\r\n    bySpaceId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.SpaceIdentifier(Identifiers.SpaceIdentifierEnum.InternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using external Id\r\n    * @param id External Id of space\r\n    */\r\n    bySpaceExternalId(id: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.SpaceIdentifier(Identifiers.SpaceIdentifierEnum.ExternalId, id));\r\n    }\r\n\r\n    /**\r\n    * Gets query using codename\r\n    * @param codename Codename of space\r\n    */\r\n    bySpaceCodename(codename: string): TResult {\r\n        return this.buildResult(this.config, this.queryService, new Identifiers.SpaceIdentifier(Identifiers.SpaceIdentifierEnum.Codename, codename));\r\n    }\r\n}\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { SharedModels } from '../models';\r\n\r\nexport namespace BaseResponses {\r\n    export interface IContentManagementResponseDebug {\r\n        response: IResponse<any>;\r\n    }\r\n\r\n    export interface IContentManagementResponse {\r\n        data: any;\r\n        rawData: any;\r\n        debug: IContentManagementResponseDebug;\r\n    }\r\n\r\n    export interface IContentManagementListResponse {\r\n        data: {\r\n            items: any[];\r\n            pagination: SharedModels.Pagination;\r\n        };\r\n        rawData: any;\r\n        debug: IContentManagementResponseDebug;\r\n    }\r\n\r\n    export interface IContentManagementListAllResponse {\r\n        responses: any[];\r\n        data: {\r\n            items: any[];\r\n        };\r\n    }\r\n\r\n    export abstract class ContentManagementListAllResponse<TResponse extends IContentManagementListResponse, TData>\r\n        implements IContentManagementListAllResponse\r\n    {\r\n        public responses: TResponse[];\r\n        public data: {\r\n            items: TData[];\r\n        };\r\n\r\n        constructor(obj: { responses: TResponse[]; items: TData[] }) {\r\n            this.responses = obj.responses;\r\n            this.data = {\r\n                items: obj.items\r\n            };\r\n        }\r\n    }\r\n\r\n    export abstract class BaseContentManagementListResponse<TRawData, TItem> implements IContentManagementResponse {\r\n        constructor(\r\n            public debug: IContentManagementResponseDebug,\r\n            public rawData: TRawData,\r\n            public data: {\r\n                items: TItem[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {}\r\n    }\r\n\r\n    export abstract class BaseContentManagementResponse<TRawData, TData> implements IContentManagementResponse {\r\n        constructor(public debug: IContentManagementResponseDebug, public rawData: TRawData, public data: TData) {}\r\n    }\r\n\r\n    export class EmptyContentManagementResponse extends BaseResponses.BaseContentManagementResponse<void, void> {\r\n        constructor(debug: BaseResponses.IContentManagementResponseDebug, rawData: void, data: void) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "import { ContentItemContracts } from '../../contracts';\r\nimport { ContentItemModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace ContentItemResponses {\r\n\r\n    export class ContentItemsResponse extends BaseResponses.BaseContentManagementListResponse<ContentItemContracts.IContentItemsListingResponseContract, ContentItemModels.ContentItem>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentItemContracts.IContentItemsListingResponseContract,\r\n            data: {\r\n                items: ContentItemModels.ContentItem[],\r\n                pagination: SharedModels.Pagination\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ContentItemsListAllResponse extends BaseResponses.ContentManagementListAllResponse<ContentItemsResponse, ContentItemModels.ContentItem> {\r\n        constructor(\r\n            data: {\r\n                items: ContentItemModels.ContentItem[],\r\n                responses: ContentItemsResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ViewContentItemResponse extends BaseResponses.BaseContentManagementResponse<ContentItemContracts.IViewContentItemResponseContract, ContentItemModels.ContentItem> {\r\n\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentItemContracts.IViewContentItemResponseContract,\r\n            data: ContentItemModels.ContentItem\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddContentItemResponse extends BaseResponses.BaseContentManagementResponse<ContentItemContracts.IAddContentItemResponseContract, ContentItemModels.ContentItem> {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentItemContracts.IAddContentItemResponseContract,\r\n            data: ContentItemModels.ContentItem\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class UpdateContentItemResponse extends BaseResponses.BaseContentManagementResponse<ContentItemContracts.IUpdateContentItemResponseContract, ContentItemModels.ContentItem> {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentItemContracts.IAddContentItemResponseContract,\r\n            data: ContentItemModels.ContentItem\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class UpsertContentItemResponse extends BaseResponses.BaseContentManagementResponse<ContentItemContracts.IUpsertContentItemResponseContract, ContentItemModels.ContentItem> {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentItemContracts.IUpsertContentItemResponseContract,\r\n            data: ContentItemModels.ContentItem\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n\r\n", "import { AssetContracts } from '../../contracts';\r\nimport { AssetModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace AssetResponses {\r\n\r\n    export class AssetsListResponse extends BaseResponses.BaseContentManagementListResponse<AssetContracts.IAssetsListingResponseContract, AssetModels.Asset>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetContracts.IAssetsListingResponseContract,\r\n            data: {\r\n                items: AssetModels.Asset[],\r\n                pagination: SharedModels.Pagination\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AssetsListAllResponse extends BaseResponses.ContentManagementListAllResponse<AssetsListResponse, AssetModels.Asset> {\r\n        constructor(\r\n            data: {\r\n                items: AssetModels.Asset[],\r\n                responses: AssetsListResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ViewAssetResponse extends BaseResponses.BaseContentManagementResponse<AssetContracts.IAssetModelContract, AssetModels.Asset>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetContracts.IAssetModelContract,\r\n            data: AssetModels.Asset\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class UploadBinaryFileResponse extends BaseResponses.BaseContentManagementResponse<AssetContracts.IUploadBinaryFileResponseContract, AssetModels.AssetFileReference>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetContracts.IUploadBinaryFileResponseContract,\r\n            data: AssetModels.AssetFileReference\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddAssetResponse extends BaseResponses.BaseContentManagementResponse<AssetContracts.IAddAssetResponseContract, AssetModels.Asset>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetContracts.IAddAssetResponseContract,\r\n            data: AssetModels.Asset\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class UpdateAssetResponse extends BaseResponses.BaseContentManagementResponse<AssetContracts.IUpdateAssetResponseContract, AssetModels.Asset>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetContracts.IUpdateAssetResponseContract,\r\n            data: AssetModels.Asset\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class UpsertAssertResponse extends BaseResponses.BaseContentManagementResponse<AssetContracts.IUpsertAssetResponseContract, AssetModels.Asset>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetContracts.IUpsertAssetResponseContract,\r\n            data: AssetModels.Asset\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n\r\n", "import { AssetFolderContracts } from '../../contracts';\r\nimport { AssetFolderModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace AssetFolderResponses {\r\n\r\n    export class AssetFoldersListResponse extends BaseResponses.BaseContentManagementResponse<AssetFolderContracts.IListAssetFoldersResponseContract, {\r\n        items: AssetFolderModels.AssetFolder[],\r\n        last_modified: Date\r\n    }>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetFolderContracts.IListAssetFoldersResponseContract,\r\n            data: {\r\n                items: AssetFolderModels.AssetFolder[],\r\n                last_modified: Date\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddAssetFoldersResponse extends BaseResponses.BaseContentManagementResponse<AssetFolderContracts.IAddAssetFoldersResponseContract, {\r\n        items: AssetFolderModels.AssetFolder[],\r\n        last_modified: Date\r\n    }>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetFolderContracts.IListAssetFoldersResponseContract,\r\n            data: {\r\n                items: AssetFolderModels.AssetFolder[],\r\n                last_modified: Date\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifyAssetFoldersResponse extends BaseResponses.BaseContentManagementResponse<AssetFolderContracts.IModifyAssetFoldersDataResponseContract, {\r\n        items: AssetFolderModels.AssetFolder[],\r\n        last_modified: Date\r\n    }>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetFolderContracts.IListAssetFoldersResponseContract,\r\n            data: {\r\n                items: AssetFolderModels.AssetFolder[],\r\n                last_modified: Date\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "import { TaxonomyContracts } from '../../contracts';\r\nimport { TaxonomyModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace TaxonomyResponses {\r\n    export class TaxonomyListResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        TaxonomyContracts.IListTaxonomyResponseContract,\r\n        TaxonomyModels.Taxonomy\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: TaxonomyContracts.IListTaxonomyResponseContract,\r\n            data: {\r\n                items: TaxonomyModels.Taxonomy[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListAllTaxonomiesResponse extends BaseResponses.ContentManagementListAllResponse<\r\n        TaxonomyListResponse,\r\n        TaxonomyModels.Taxonomy\r\n    > {\r\n        constructor(data: { items: TaxonomyModels.Taxonomy[]; responses: TaxonomyListResponse[] }) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class GetTaxonomyResponse extends BaseResponses.BaseContentManagementResponse<\r\n        TaxonomyContracts.IGetTaxonomyResponseContract,\r\n        TaxonomyModels.Taxonomy\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: TaxonomyContracts.IGetTaxonomyResponseContract,\r\n            data: TaxonomyModels.Taxonomy\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddTaxonomyResponse extends BaseResponses.BaseContentManagementResponse<\r\n        TaxonomyContracts.IAddTaxonomyResponseContract,\r\n        TaxonomyModels.Taxonomy\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: TaxonomyContracts.IAddTaxonomyResponseContract,\r\n            data: TaxonomyModels.Taxonomy\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifyTaxonomyResponse extends BaseResponses.BaseContentManagementResponse<\r\n        TaxonomyContracts.IModifyTaxonomyResponseContract,\r\n        TaxonomyModels.Taxonomy\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: TaxonomyContracts.IModifyTaxonomyResponseContract,\r\n            data: TaxonomyModels.Taxonomy\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "import { ContentTypeContracts } from '../../contracts';\r\nimport { ContentTypeModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace ContentTypeResponses {\r\n\r\n    export class ContentTypeListResponse extends BaseResponses.BaseContentManagementListResponse<ContentTypeContracts.IContentTypeListResponseContract, ContentTypeModels.ContentType>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeContracts.IContentTypeListResponseContract,\r\n            data: {\r\n                items: ContentTypeModels.ContentType[],\r\n                pagination: SharedModels.Pagination\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ContentTypeListAllResponse extends BaseResponses.ContentManagementListAllResponse<ContentTypeListResponse, ContentTypeModels.ContentType> {\r\n        constructor(\r\n            data: {\r\n                items: ContentTypeModels.ContentType[],\r\n                responses: ContentTypeListResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ModifyContentTypeResponse extends BaseResponses.BaseContentManagementResponse<ContentTypeContracts.IViewContentTypeResponseContract, ContentTypeModels.ContentType>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeContracts.IViewContentTypeResponseContract,\r\n            data: ContentTypeModels.ContentType\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ViewContentTypeResponse extends BaseResponses.BaseContentManagementResponse<ContentTypeContracts.IViewContentTypeResponseContract, ContentTypeModels.ContentType>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeContracts.IViewContentTypeResponseContract,\r\n            data: ContentTypeModels.ContentType\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddContentTypeResponse extends BaseResponses.BaseContentManagementResponse<ContentTypeContracts.IAddContentTypeResponseContract, ContentTypeModels.ContentType>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeContracts.IAddContentTypeResponseContract,\r\n            data: ContentTypeModels.ContentType\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n\r\n", "import { LanguageVariantContracts } from '../../contracts';\r\nimport { LanguageVariantModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace LanguageVariantResponses {\r\n    export class ListLanguageVariantsOfItemResponse extends BaseResponses.BaseContentManagementResponse<\r\n        LanguageVariantContracts.IListLanguageVariantsOfItemResponseContract[],\r\n        {\r\n            items: LanguageVariantModels.ContentItemLanguageVariant[];\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IListLanguageVariantsOfItemResponseContract[],\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[];\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListLanguageVariantsOfContentTypeWithComponentsResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        LanguageVariantContracts.IListLanguageVariantsOfContentTypeWithComponentsResponseContract,\r\n        LanguageVariantModels.ContentItemLanguageWithComponentsVariant\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IListLanguageVariantsOfContentTypeWithComponentsResponseContract,\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageWithComponentsVariant[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListAllLanguageVariantsOfContentTypeWithComponentsResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguageVariantsOfContentTypeWithComponentsResponse, LanguageVariantModels.ContentItemLanguageVariant> {\r\n        constructor(\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[],\r\n                responses: ListLanguageVariantsOfContentTypeWithComponentsResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ListLanguageVariantsOfContentTypeResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        LanguageVariantContracts.IListLanguageVariantsOfContentTypeResponseContract,\r\n        LanguageVariantModels.ContentItemLanguageVariant\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IListLanguageVariantsOfContentTypeResponseContract,\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListLanguageVariantsByCollectionResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        LanguageVariantContracts.IListLanguageVariantsByCollectionResponseContract,\r\n        LanguageVariantModels.ContentItemLanguageVariant\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IListLanguageVariantsByCollectionResponseContract,\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListLanguageVariantsBySpaceResponse extends BaseResponses.BaseContentManagementListResponse<\r\n    LanguageVariantContracts.IListLanguageVariantsBySpaceResponseContract,\r\n    LanguageVariantModels.ContentItemLanguageVariant\r\n> {\r\n    constructor(\r\n        debug: BaseResponses.IContentManagementResponseDebug,\r\n        rawData: LanguageVariantContracts.IListLanguageVariantsBySpaceResponseContract,\r\n        data: {\r\n            items: LanguageVariantModels.ContentItemLanguageVariant[];\r\n            pagination: SharedModels.Pagination;\r\n        }\r\n    ) {\r\n        super(debug, rawData, data);\r\n    }\r\n}\r\n\r\n\r\n    export class ListAllLanguageVariantsOfContentTypeResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguageVariantsOfContentTypeResponse, LanguageVariantModels.ContentItemLanguageVariant> {\r\n        constructor(\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[],\r\n                responses: ListLanguageVariantsOfContentTypeResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ListAllLanguageVariantsByCollectionResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguageVariantsByCollectionResponse, LanguageVariantModels.ContentItemLanguageVariant> {\r\n        constructor(\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[],\r\n                responses: ListLanguageVariantsByCollectionResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ListAllLanguageVariantsBySpaceResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguageVariantsBySpaceResponse, LanguageVariantModels.ContentItemLanguageVariant> {\r\n        constructor(\r\n            data: {\r\n                items: LanguageVariantModels.ContentItemLanguageVariant[],\r\n                responses: ListLanguageVariantsBySpaceResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n\r\n    export class UpsertLanguageVariantResponse extends BaseResponses.BaseContentManagementResponse<\r\n        LanguageVariantContracts.IUpsertLanguageVariantResponseContract,\r\n        LanguageVariantModels.ContentItemLanguageVariant\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IUpsertLanguageVariantResponseContract,\r\n            data: LanguageVariantModels.ContentItemLanguageVariant\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ViewLanguageVariantResponse extends BaseResponses.BaseContentManagementResponse<\r\n        LanguageVariantContracts.IViewLanguageVariantResponseContract,\r\n        LanguageVariantModels.ContentItemLanguageVariant\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageVariantContracts.IViewLanguageVariantResponseContract,\r\n            data: LanguageVariantModels.ContentItemLanguageVariant\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "import { ContentTypeSnippetContracts } from '../../contracts';\r\nimport { ContentTypeSnippetModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace ContentTypeSnippetResponses {\r\n    export class ContentTypeSnippetListResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        ContentTypeSnippetContracts.IContentTypeSnippetListResponseContract,\r\n        ContentTypeSnippetModels.ContentTypeSnippet\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeSnippetContracts.IContentTypeSnippetListResponseContract,\r\n            data: {\r\n                items: ContentTypeSnippetModels.ContentTypeSnippet[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ContentTypeSnippetListAllResponse extends BaseResponses.ContentManagementListAllResponse<\r\n        ContentTypeSnippetListResponse,\r\n        ContentTypeSnippetModels.ContentTypeSnippet\r\n    > {\r\n        constructor(data: {\r\n            items: ContentTypeSnippetModels.ContentTypeSnippet[];\r\n            responses: ContentTypeSnippetListResponse[];\r\n        }) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ViewContentTypeSnippetResponse extends BaseResponses.BaseContentManagementResponse<\r\n        ContentTypeSnippetContracts.IViewContentTypeSnippetResponseContract,\r\n        ContentTypeSnippetModels.ContentTypeSnippet\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeSnippetContracts.IViewContentTypeSnippetResponseContract,\r\n            data: ContentTypeSnippetModels.ContentTypeSnippet\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddContentTypeSnippetResponse extends BaseResponses.BaseContentManagementResponse<\r\n        ContentTypeSnippetContracts.IAddContentTypeSnippetResponseContract,\r\n        ContentTypeSnippetModels.ContentTypeSnippet\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeSnippetContracts.IAddContentTypeSnippetResponseContract,\r\n            data: ContentTypeSnippetModels.ContentTypeSnippet\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifyContentTypeSnippetResponse extends BaseResponses.BaseContentManagementResponse<\r\n        ContentTypeSnippetContracts.IModifyContentTypeSnippetResponseContract,\r\n        ContentTypeSnippetModels.ContentTypeSnippet\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ContentTypeSnippetContracts.IModifyContentTypeSnippetResponseContract,\r\n            data: ContentTypeSnippetModels.ContentTypeSnippet\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "import { WorkflowContracts } from '../../contracts/workflow-contracts';\r\nimport { WorkflowModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace WorkflowResponses {\r\n    export class ListWorkflowStepsResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WorkflowContracts.IListWorkflowStepsResponseContract,\r\n        WorkflowModels.WorkflowStep[]\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WorkflowContracts.IListWorkflowStepsResponseContract,\r\n            data: WorkflowModels.WorkflowStep[]\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListWorkflowsResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WorkflowContracts.IListWorkflowsResponseContract,\r\n        WorkflowModels.Workflow[]\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WorkflowContracts.IListWorkflowsResponseContract,\r\n            data: WorkflowModels.Workflow[]\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddWorkflowResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WorkflowContracts.IAddWorkflowContract,\r\n        WorkflowModels.Workflow\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WorkflowContracts.IAddWorkflowContract,\r\n            data: WorkflowModels.Workflow\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class UpdateWorkflowResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WorkflowContracts.IUpdateWorkflowContract,\r\n        WorkflowModels.Workflow\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WorkflowContracts.IUpdateWorkflowContract,\r\n            data: WorkflowModels.Workflow\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "import { LanguageContracts } from '../../contracts/language-contracts';\r\nimport { LanguageModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace LanguageResponses {\r\n\r\n    export class ListLanguagesResponse extends BaseResponses.BaseContentManagementListResponse<LanguageContracts.IListLanguagesResponseContract, LanguageModels.LanguageModel>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageContracts.IListLanguagesResponseContract,\r\n            data: {\r\n                items: LanguageModels.LanguageModel[],\r\n                pagination: SharedModels.Pagination\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ListAllLanguagesResponse extends BaseResponses.ContentManagementListAllResponse<ListLanguagesResponse, LanguageModels.LanguageModel> {\r\n        constructor(\r\n            data: {\r\n                items: LanguageModels.LanguageModel[],\r\n                responses: ListLanguagesResponse[]\r\n            }\r\n        ) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ViewLanguageResponse extends BaseResponses.BaseContentManagementResponse<LanguageContracts.IViewLanguageResponseContract, LanguageModels.LanguageModel>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageContracts.IViewLanguageResponseContract,\r\n            data: LanguageModels.LanguageModel\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddLanguageResponse extends BaseResponses.BaseContentManagementResponse<LanguageContracts.IAddLanguageResponseContract, LanguageModels.LanguageModel>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageContracts.IAddLanguageResponseContract,\r\n            data: LanguageModels.LanguageModel\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifyLanguageResponse extends BaseResponses.BaseContentManagementResponse<LanguageContracts.IModifyLanguageResponseContract, LanguageModels.LanguageModel>  {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: LanguageContracts.IModifyLanguageResponseContract,\r\n            data: LanguageModels.LanguageModel\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n}\r\n", "import { BaseResponses } from '../base-responses';\r\nimport { WebhookContracts } from '../../contracts/webhook-contracts';\r\nimport { WebhookModels } from '../../models/webhook/webhook.models';\r\n\r\nexport namespace WebhookResponses {\r\n    export class GetLegacyWebhookResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WebhookContracts.IGetLegacyWebhookContract,\r\n        WebhookModels.LegacyWebhook\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WebhookContracts.IGetLegacyWebhookContract,\r\n            data: WebhookModels.LegacyWebhook\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class GetWebhookResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WebhookContracts.IGetWebhookContract,\r\n        WebhookModels.Webhook\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WebhookContracts.IGetWebhookContract,\r\n            data: WebhookModels.Webhook\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddLegacyWebhookResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WebhookContracts.IAddLegacyWebhookContract,\r\n        WebhookModels.LegacyWebhook\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WebhookContracts.IAddLegacyWebhookContract,\r\n            data: WebhookModels.LegacyWebhook\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddWebhookResponse extends BaseResponses.BaseContentManagementResponse<\r\n    WebhookContracts.IAddWebhookContract,\r\n    WebhookModels.Webhook\r\n> {\r\n    constructor(\r\n        debug: BaseResponses.IContentManagementResponseDebug,\r\n        rawData: WebhookContracts.IAddWebhookContract,\r\n        data: WebhookModels.Webhook\r\n    ) {\r\n        super(debug, rawData, data);\r\n    }\r\n}\r\n\r\n\r\n    export class LegacyWebhookListResponse extends BaseResponses.BaseContentManagementResponse<\r\n        WebhookContracts.ILegacyWebhookListContract,\r\n        {\r\n            webhooks: WebhookModels.LegacyWebhook[];\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: WebhookContracts.ILegacyWebhookListContract,\r\n            data: {\r\n                webhooks: WebhookModels.LegacyWebhook[];\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n    export class WebhookListResponse extends BaseResponses.BaseContentManagementResponse<\r\n    WebhookContracts.IWebhookListContract,\r\n    {\r\n        webhooks: WebhookModels.Webhook[];\r\n    }\r\n> {\r\n    constructor(\r\n        debug: BaseResponses.IContentManagementResponseDebug,\r\n        rawData: WebhookContracts.IWebhookListContract,\r\n        data: {\r\n            webhooks: WebhookModels.Webhook[];\r\n        }\r\n    ) {\r\n        super(debug, rawData, data);\r\n    }\r\n}\r\n\r\n}\r\n", "import { BaseResponses } from '../base-responses';\r\n\r\nexport namespace GenericResponses {\r\n    export class GenericResponse extends BaseResponses.BaseContentManagementResponse<\r\n        any,\r\n        any\r\n    > {\r\n        constructor(debug: BaseResponses.IContentManagementResponseDebug, response: any) {\r\n            super(debug, response, response);\r\n        }\r\n    }\r\n}\r\n", "import { CollectionContracts } from '../../contracts';\r\nimport { CollectionModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace CollectionResponses {\r\n    export class CollectionsListResponse extends BaseResponses.BaseContentManagementResponse<\r\n        CollectionContracts.ICollectionListResponseContract,\r\n        {\r\n            collections: CollectionModels.Collection[];\r\n            lastModified?: Date;\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: CollectionContracts.ICollectionListResponseContract,\r\n            data: {\r\n                collections: CollectionModels.Collection[];\r\n                lastModified?: Date;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class SetCollectionsResponse extends BaseResponses.BaseContentManagementResponse<\r\n        CollectionContracts.ICollectionListResponseContract,\r\n        {\r\n            collections: CollectionModels.Collection[];\r\n            lastModified?: Date;\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: CollectionContracts.ICollectionListResponseContract,\r\n            data: {\r\n                collections: CollectionModels.Collection[];\r\n                lastModified?: Date;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "import { SubscriptionContracts } from '../../contracts';\r\nimport { SharedModels, SubscriptionModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace SubscriptionResponses {\r\n    export class SubscriptionProjectsListResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        SubscriptionContracts.IListSubscriptionProjectsResponseContract,\r\n        SubscriptionModels.SubscriptionProject\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SubscriptionContracts.IListSubscriptionProjectsResponseContract,\r\n            data: {\r\n                items: SubscriptionModels.SubscriptionProject[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class SubscriptionProjectsListAllResponse extends BaseResponses.ContentManagementListAllResponse<\r\n        SubscriptionProjectsListResponse,\r\n        SubscriptionModels.SubscriptionProject\r\n    > {\r\n        constructor(data: {\r\n            items: SubscriptionModels.SubscriptionProject[];\r\n            responses: SubscriptionProjectsListResponse[];\r\n        }) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ViewSubscriptionProjectResponse extends BaseResponses.BaseContentManagementResponse<\r\n        SubscriptionContracts.ISubscriptionProjectContract,\r\n        SubscriptionModels.SubscriptionProject\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SubscriptionContracts.ISubscriptionProjectContract,\r\n            data: SubscriptionModels.SubscriptionProject\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class SubscriptionUsersListResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        SubscriptionContracts.IListSubscriptionUsersResponseContract,\r\n        SubscriptionModels.SubscriptionUser\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SubscriptionContracts.IListSubscriptionUsersResponseContract,\r\n            data: {\r\n                items: SubscriptionModels.SubscriptionUser[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class SubscriptionUsersListAllResponse extends BaseResponses.ContentManagementListAllResponse<\r\n        SubscriptionUsersListResponse,\r\n        SubscriptionModels.SubscriptionUser\r\n    > {\r\n        constructor(data: {\r\n            items: SubscriptionModels.SubscriptionUser[];\r\n            responses: SubscriptionUsersListResponse[];\r\n        }) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ViewSubscriptionUserResponse extends BaseResponses.BaseContentManagementResponse<\r\n        SubscriptionContracts.ISubscriptionUserContract,\r\n        SubscriptionModels.SubscriptionUser\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SubscriptionContracts.ISubscriptionUserContract,\r\n            data: SubscriptionModels.SubscriptionUser\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "import { RoleContracts } from '../../contracts';\r\nimport { RoleModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace RoleResponses {\r\n    export class RoleListResponse extends BaseResponses.BaseContentManagementResponse<\r\n        RoleContracts.IRoleListResponseContract,\r\n        {\r\n            roles: RoleModels.Role[];\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: RoleContracts.IRoleListResponseContract,\r\n            data: {\r\n                roles: RoleModels.Role[];\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ViewRoleResponse extends BaseResponses.BaseContentManagementResponse<\r\n        RoleContracts.IRoleContract,\r\n        RoleModels.Role\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: RoleContracts.IRoleContract,\r\n            data: RoleModels.Role\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "import { ProjectUserContracts } from '../../contracts';\r\nimport { ProjectUserModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace ProjectUsersResponses {\r\n    export class InviteUserResponse extends BaseResponses.BaseContentManagementResponse<\r\n        ProjectUserContracts.IInviteUserResponseContract,\r\n        ProjectUserModels.ProjectUser\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ProjectUserContracts.IInviteUserResponseContract,\r\n            data: ProjectUserModels.ProjectUser\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ChangeUserRolesResponse extends BaseResponses.BaseContentManagementResponse<\r\n        ProjectUserContracts.IChangeUserRolesResponseContract,\r\n        ProjectUserModels.ProjectUser\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: ProjectUserContracts.IChangeUserRolesResponseContract,\r\n            data: ProjectUserModels.ProjectUser\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "import { AssetRenditionContracts } from '../../contracts';\r\nimport { AssetRenditionModels, SharedModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace AssetRenditionResponses {\r\n    export class AssetRenditionsListResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        AssetRenditionContracts.IListRenditionResponseContract,\r\n        AssetRenditionModels.AssetRendition\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetRenditionContracts.IListRenditionResponseContract,\r\n            data: {\r\n                items: AssetRenditionModels.AssetRendition[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AssetRenditionsListAllResponse extends BaseResponses.ContentManagementListAllResponse<\r\n        AssetRenditionsListResponse,\r\n        AssetRenditionModels.AssetRendition\r\n    > {\r\n        constructor(data: { items: AssetRenditionModels.AssetRendition[]; responses: AssetRenditionsListResponse[] }) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class ModifyAssetRenditionResponse extends BaseResponses.BaseContentManagementResponse<\r\n        AssetRenditionContracts.IModifyAssetRenditionResponseContract,\r\n        AssetRenditionModels.AssetRendition\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetRenditionContracts.IModifyAssetRenditionResponseContract,\r\n            data: AssetRenditionModels.AssetRendition\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ViewAssetRenditionResponse extends BaseResponses.BaseContentManagementResponse<\r\n        AssetRenditionContracts.IViewRenditionResponseContract,\r\n        AssetRenditionModels.AssetRendition\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetRenditionContracts.IViewRenditionResponseContract,\r\n            data: AssetRenditionModels.AssetRendition\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class AddAssetRenditionResponse extends BaseResponses.BaseContentManagementResponse<\r\n        AssetRenditionContracts.IAddAssetRenditionResponseContract,\r\n        AssetRenditionModels.AssetRendition\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: AssetRenditionContracts.IAddAssetRenditionResponseContract,\r\n            data: AssetRenditionModels.AssetRendition\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "import { SpaceContracts } from '../../contracts';\r\nimport { SpaceModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace SpaceResponses {\r\n    export class SpacesListResponse extends BaseResponses.BaseContentManagementResponse<\r\n        SpaceContracts.ISpacesListingResponseContract,\r\n        SpaceModels.Space[]\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SpaceContracts.ISpacesListingResponseContract,\r\n            data: SpaceModels.Space[]\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ViewSpaceResponse extends BaseResponses.BaseContentManagementResponse<\r\n        SpaceContracts.IViewSpaceResponseContract,\r\n        SpaceModels.Space\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SpaceContracts.IViewSpaceResponseContract,\r\n            data: SpaceModels.Space\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n    export class AddSpaceResponse extends BaseResponses.BaseContentManagementResponse<\r\n        SpaceContracts.IAddSpaceResponseContract,\r\n        SpaceModels.Space\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SpaceContracts.IAddSpaceResponseContract,\r\n            data: SpaceModels.Space\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifySpaceResponse extends BaseResponses.BaseContentManagementResponse<\r\n        SpaceContracts.IViewSpaceResponseContract,\r\n        SpaceModels.Space\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: SpaceContracts.IViewSpaceResponseContract,\r\n            data: SpaceModels.Space\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "import { BaseResponses } from '../base-responses';\r\nimport { EnvironmentContracts } from '../../contracts';\r\nimport { EnvironmentModels } from '../../models/environments/environment.models';\r\nimport { SharedModels } from '../../models';\r\n\r\nexport namespace EnvironmentResponses {\r\n    export class EnvironmentValidationIssuesListResponse extends BaseResponses.BaseContentManagementListResponse<\r\n        EnvironmentContracts.IEnvironmentValidationListResponseContract,\r\n        EnvironmentModels.EnvironmentValidationVariantIssueModel | EnvironmentModels.EnvironmentValidationTypeIssueModel\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.IEnvironmentValidationListResponseContract,\r\n            data: {\r\n                items: (\r\n                    | EnvironmentModels.EnvironmentValidationVariantIssueModel\r\n                    | EnvironmentModels.EnvironmentValidationTypeIssueModel\r\n                )[];\r\n                pagination: SharedModels.Pagination;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class EnvironmentValidationIssuesListAllResponse extends BaseResponses.ContentManagementListAllResponse<\r\n        EnvironmentValidationIssuesListResponse,\r\n        EnvironmentModels.EnvironmentValidationVariantIssueModel\r\n    > {\r\n        constructor(data: {\r\n            items: EnvironmentModels.EnvironmentValidationVariantIssueModel[];\r\n            responses: EnvironmentValidationIssuesListResponse[];\r\n        }) {\r\n            super(data);\r\n        }\r\n    }\r\n\r\n    export class StartEnvironmentValidationResponse extends BaseResponses.BaseContentManagementResponse<\r\n        EnvironmentContracts.IStartEnvironmentValidationResponseContract,\r\n        {\r\n            id: string;\r\n            status: EnvironmentContracts.EnvironmentValidationStatus;\r\n            validation_result: EnvironmentContracts.EnvironmentValidationResult;\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.IStartEnvironmentValidationResponseContract,\r\n            data: {\r\n                id: string;\r\n                status: EnvironmentContracts.EnvironmentValidationStatus;\r\n                validation_result: EnvironmentContracts.EnvironmentValidationResult;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class CheckEnvironmentValidationResponse extends BaseResponses.BaseContentManagementResponse<\r\n        EnvironmentContracts.ICheckEnvironmentValidationResponseContract,\r\n        {\r\n            id: string;\r\n            status: EnvironmentContracts.EnvironmentValidationStatus;\r\n            validation_result: EnvironmentContracts.EnvironmentValidationResult;\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.ICheckEnvironmentValidationResponseContract,\r\n            data: {\r\n                id: string;\r\n                status: EnvironmentContracts.EnvironmentValidationStatus;\r\n                validation_result: EnvironmentContracts.EnvironmentValidationResult;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class EnvironmentInformationResponse extends BaseResponses.BaseContentManagementResponse<\r\n        EnvironmentContracts.IEnvironmentInformationResponseContract,\r\n        {\r\n            project: EnvironmentModels.EnvironmentInformationModel;\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.IEnvironmentInformationResponseContract,\r\n            data: {\r\n                project: EnvironmentModels.EnvironmentInformationModel;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class GetCloningStateResponse extends BaseResponses.BaseContentManagementResponse<\r\n        EnvironmentContracts.IEnvironmentCloningStateResponseContract,\r\n        {\r\n            cloningInfo: EnvironmentModels.EnvironmentCloningStateModel;\r\n        }\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.IEnvironmentCloningStateResponseContract,\r\n            data: {\r\n                cloningInfo: EnvironmentModels.EnvironmentCloningStateModel;\r\n            }\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifyEnvironmentResponse extends BaseResponses.BaseContentManagementResponse<\r\n        EnvironmentContracts.IModifyEnvironmentResponseContract,\r\n        EnvironmentModels.EnvironmentModel\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.IModifyEnvironmentResponseContract,\r\n            data: EnvironmentModels.EnvironmentModel\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class CloneEnvironmentResponse extends BaseResponses.BaseContentManagementResponse<\r\n        EnvironmentContracts.ICloneEnvironmentResponseContract,\r\n        EnvironmentModels.CloneEnvironmentModel\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: EnvironmentContracts.ICloneEnvironmentResponseContract,\r\n            data: EnvironmentModels.CloneEnvironmentModel\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "import { PreviewContracts } from '../../contracts';\r\nimport { PreviewModels } from '../../models';\r\nimport { BaseResponses } from '../base-responses';\r\n\r\nexport namespace PreviewResponses {\r\n    export class PreviewConfigurationResponse extends BaseResponses.BaseContentManagementResponse<\r\n        PreviewContracts.IPreviewConfigurationContract,\r\n        PreviewModels.PreviewConfiguration\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: PreviewContracts.IPreviewConfigurationContract,\r\n            data: PreviewModels.PreviewConfiguration\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n\r\n    export class ModifyConfigurationResponse extends BaseResponses.BaseContentManagementResponse<\r\n        PreviewContracts.IPreviewConfigurationContract,\r\n        PreviewModels.PreviewConfiguration\r\n    > {\r\n        constructor(\r\n            debug: BaseResponses.IContentManagementResponseDebug,\r\n            rawData: PreviewContracts.IPreviewConfigurationContract,\r\n            data: PreviewModels.PreviewConfiguration\r\n        ) {\r\n            super(debug, rawData, data);\r\n        }\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentItemResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListContentItemsQuery extends BaseListingQuery<\r\n    ContentItemResponses.ContentItemsResponse,\r\n    ContentItemResponses.ContentItemsListAllResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<ContentItemResponses.ContentItemsResponse> {\r\n        return this.queryService.listContentItemsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.items();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: ContentItemResponses.ContentItemsResponse[]\r\n    ): ContentItemResponses.ContentItemsListAllResponse {\r\n        return new ContentItemResponses.ContentItemsListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { ContentItemResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewContentItemQuery extends BaseQuery<ContentItemResponses.ViewContentItemResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.ContentItemIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentItemResponses.ViewContentItemResponse> {\r\n    return this.queryService.viewContentItemAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.viewContentItem(this.identifier);\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentItemContracts } from '../../contracts';\r\nimport { ContentItemResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddContentItemQuery extends BaseQuery<ContentItemResponses.AddContentItemResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: ContentItemContracts.IAddContentItemPostContract\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentItemResponses.AddContentItemResponse> {\r\n    return this.queryService.addContentItemAsync(this.getUrl(), this.data, this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.addContentItem();\r\n  }\r\n}\r\n\r\nexport class AddContentItemQueryInit {\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n  ) {\r\n  }\r\n\r\n  withData(item: ContentItemContracts.IAddContentItemPostContract): AddContentItemQuery {\r\n    return new AddContentItemQuery(this.config, this.queryService, item);\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentItemContracts } from '../../contracts';\r\nimport { Identifiers } from '../../models';\r\nimport { ContentItemResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UpdateContentItemQuery extends BaseQuery<ContentItemResponses.UpdateContentItemResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: ContentItemContracts.IUpdateContentItemPostContract,\r\n    public identifier: Identifiers.ContentItemIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentItemResponses.UpdateContentItemResponse> {\r\n    return this.queryService.updateContentItemAsync(this.getUrl(), this.data, this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n      return this.apiEndpoints.updateContentItem(this.identifier);\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteContentItemQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.ContentItemIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteContentItemAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteContentItem(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentItemContracts } from '../../contracts';\r\nimport { Identifiers } from '../../models';\r\nimport { ContentItemResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UpsertContentItemQuery extends BaseQuery<ContentItemResponses.UpsertContentItemResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: ContentItemContracts.IUpsertContentItemPostContract,\r\n    public identifier: Identifiers.ContentItemIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentItemResponses.UpsertContentItemResponse> {\r\n    return this.queryService.upsertContentItemAsync(this.getUrl(), this.data, this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n      return this.apiEndpoints.upsertContentItem(this.identifier);\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { AssetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListAssetsQuery extends BaseListingQuery<\r\n    AssetResponses.AssetsListResponse,\r\n    AssetResponses.AssetsListAllResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetResponses.AssetsListResponse> {\r\n        return this.queryService.listAssetsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listAssets();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: AssetResponses.AssetsListResponse[]\r\n    ): AssetResponses.AssetsListAllResponse {\r\n        return new AssetResponses.AssetsListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { AssetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewAssetsQuery extends BaseQuery<AssetResponses.ViewAssetResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.AssetIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetResponses.ViewAssetResponse> {\r\n        return this.queryService.viewAssetAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.viewAsset(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { AssetModels } from '../../models';\r\nimport { AssetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UploadBinaryFileQuery extends BaseQuery<AssetResponses.UploadBinaryFileResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: AssetModels.IUploadBinaryFileRequestData,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<AssetResponses.UploadBinaryFileResponse> {\r\n    return this.queryService.uploadBinaryFileAsync(this.getUrl(), this.data, this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.uploadBinaryFile(this.data.filename);\r\n  }\r\n}\r\n\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { assetElementsBuilder, AssetElementsBuilder, AssetModels } from '../../models';\r\nimport { AssetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddAssetQuery extends BaseQuery<AssetResponses.AddAssetResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: (builder: AssetElementsBuilder) => AssetModels.IAddAssetRequestData,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<AssetResponses.AddAssetResponse> {\r\n    return this.queryService.addAssetAsync(this.getUrl(), this.data(assetElementsBuilder), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.addAsset();\r\n  }\r\n}\r\n\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { AssetElementsBuilder, assetElementsBuilder, AssetModels, Identifiers } from '../../models';\r\nimport { AssetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UpsertAssetQuery extends BaseQuery<AssetResponses.UpdateAssetResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.AssetIdentifier,\r\n        public data: (builder: AssetElementsBuilder) => AssetModels.IUpsertAssetRequestData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetResponses.UpsertAssertResponse> {\r\n        return this.queryService.upsertAssetAsync(this.getUrl(), this.data(assetElementsBuilder), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.upsertAsset(this.identifier);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteAssetQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.AssetIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteAssetAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteAsset(this.identifier);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { AssetModels } from '../../models';\r\nimport { AssetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UploadAssetFromUrlQuery extends BaseQuery<AssetResponses.AddAssetResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: AssetModels.IUploadAssetFromUrlRequestData\r\n    ) {\r\n        super(config, queryService);\r\n\r\n        this.withUrl('none'); // do not set url as there are multiple endpoints used\r\n    }\r\n\r\n    toPromise(): Promise<AssetResponses.AddAssetResponse> {\r\n        return this.queryService.uploadAssetFromUrlAsync(\r\n            this.getUploadBinaryFileUrl(),\r\n            this.getAddAssetUrl(),\r\n            this.data,\r\n            this.queryConfig\r\n        );\r\n    }\r\n\r\n    getAddAssetUrl(): string {\r\n        return super.getUrlForAction(this.apiEndpoints.addAsset());\r\n    }\r\n\r\n    getUploadBinaryFileUrl(): string {\r\n        return super.getUrlForAction(this.apiEndpoints.uploadBinaryFile(this.data.binaryFile.filename));\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addAsset();\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { TaxonomyResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListTaxonomiesQuery extends BaseListingQuery<\r\n    TaxonomyResponses.TaxonomyListResponse,\r\n    TaxonomyResponses.ListAllTaxonomiesResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<TaxonomyResponses.TaxonomyListResponse> {\r\n        return this.queryService.listTaxonomiesAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listTaxonomies();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: TaxonomyResponses.TaxonomyListResponse[]\r\n    ): TaxonomyResponses.ListAllTaxonomiesResponse {\r\n        return new TaxonomyResponses.ListAllTaxonomiesResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteTaxonomyQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.TaxonomyIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteTaxonomyAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteTaxonomy(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { TaxonomyModels } from '../../models';\r\nimport { TaxonomyResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddTaxonomyQuery extends BaseQuery<TaxonomyResponses.AddTaxonomyResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: TaxonomyModels.IAddTaxonomyRequestModel\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<TaxonomyResponses.AddTaxonomyResponse> {\r\n    return this.queryService.addTaxonomyAsync(this.getUrl(), this.data, this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.addTaxonomy();\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { TaxonomyResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { Identifiers } from '../../models';\r\n\r\nexport class GetTaxonomyQuery extends BaseQuery<TaxonomyResponses.GetTaxonomyResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.TaxonomyIdentifier\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<TaxonomyResponses.GetTaxonomyResponse> {\r\n    return this.queryService.getTaxonomyAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.getTaxonomy(this.identifier);\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, TaxonomyModels } from '../../models';\r\nimport { TaxonomyResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifyTaxonomyQuery extends BaseQuery<TaxonomyResponses.ModifyTaxonomyResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.TaxonomyIdentifier,\r\n        public data: TaxonomyModels.IModifyTaxonomyData[]\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<TaxonomyResponses.ModifyTaxonomyResponse> {\r\n        return this.queryService.modifyTaxonomyAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.modifyTaxonomy(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentTypeResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListContentTypesQuery extends BaseListingQuery<\r\n    ContentTypeResponses.ContentTypeListResponse,\r\n    ContentTypeResponses.ContentTypeListAllResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<ContentTypeResponses.ContentTypeListResponse> {\r\n        return this.queryService.listContentTypesAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listContentTypes();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: ContentTypeResponses.ContentTypeListResponse[]\r\n    ): ContentTypeResponses.ContentTypeListAllResponse {\r\n        return new ContentTypeResponses.ContentTypeListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { ContentTypeResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewContentTypeQuery extends BaseQuery<ContentTypeResponses.ViewContentTypeResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.ContentTypeIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentTypeResponses.ViewContentTypeResponse> {\r\n    return this.queryService.viewContentTypeAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.viewContentType(this.identifier);\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteContentTypeQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.ContentTypeIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteContentTypeAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteContentType(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentTypeModels, contentTypeElementsBuilder, ContentTypeElementsBuilder } from '../../models';\r\nimport { ContentTypeResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddContentTypeQuery extends BaseQuery<ContentTypeResponses.AddContentTypeResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: (builder: ContentTypeElementsBuilder) => ContentTypeModels.IAddContentTypeData,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentTypeResponses.AddContentTypeResponse> {\r\n    return this.queryService.addContentTypeAsync(this.getUrl(), this.data(contentTypeElementsBuilder), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.addContentType();\r\n  }\r\n}\r\n\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, ContentTypeModels } from '../../models';\r\nimport { ContentTypeResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifyContentTypeQuery extends BaseQuery<ContentTypeResponses.ModifyContentTypeResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.ContentTypeIdentifier,\r\n    public data: ContentTypeModels.IModifyContentTypeData[]\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentTypeResponses.ModifyContentTypeResponse> {\r\n    return this.queryService.modifyContentTypeAsync(this.getUrl(), this.queryConfig, this.data);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.modifyContentType(this.identifier);\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListLanguageVariantsOfItemQuery extends BaseQuery<LanguageVariantResponses.ListLanguageVariantsOfItemResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    protected identifier: Identifiers.ContentItemIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<LanguageVariantResponses.ListLanguageVariantsOfItemResponse> {\r\n    return this.queryService.listLanguageVariantsOfItemAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.listLanguageVariantsOfItem(this.identifier);\r\n  }\r\n}\r\n\r\n\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListLanguageVariantsOfContentTypeQuery extends BaseListingQuery<\r\n    LanguageVariantResponses.ListLanguageVariantsOfContentTypeResponse,\r\n    LanguageVariantResponses.ListAllLanguageVariantsOfContentTypeResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected identifier: Identifiers.ContentTypeIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageVariantResponses.ListLanguageVariantsOfContentTypeResponse> {\r\n        return this.queryService.listLanguageVariantsOfContentTypeAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listLanguageVariantsOfContentType(this.identifier);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: LanguageVariantResponses.ListLanguageVariantsOfContentTypeResponse[]\r\n    ): LanguageVariantResponses.ListAllLanguageVariantsOfContentTypeResponse {\r\n        return new LanguageVariantResponses.ListAllLanguageVariantsOfContentTypeResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListLanguageVariantsOfContentTypeWithComponentsQuery extends BaseListingQuery<\r\n    LanguageVariantResponses.ListLanguageVariantsOfContentTypeWithComponentsResponse,\r\n    LanguageVariantResponses.ListAllLanguageVariantsOfContentTypeWithComponentsResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected identifier: Identifiers.ContentTypeIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageVariantResponses.ListLanguageVariantsOfContentTypeWithComponentsResponse> {\r\n        return this.queryService.listLanguageVariantsOfContentTypeWithComponentsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listLanguageVariantsOfContentTypeWithComponents(this.identifier);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: LanguageVariantResponses.ListLanguageVariantsOfContentTypeWithComponentsResponse[]\r\n    ): LanguageVariantResponses.ListAllLanguageVariantsOfContentTypeWithComponentsResponse {\r\n        return new LanguageVariantResponses.ListAllLanguageVariantsOfContentTypeWithComponentsResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "import {LanguageVariantElementsBuilder, languageVariantElementsBuilder } from '../../models/language-variants/language-variant-elements-builder';\r\nimport { LanguageVariantContracts } from '../../contracts';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UpsertLanguageVariantQuery extends BaseQuery<LanguageVariantResponses.UpsertLanguageVariantResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    protected contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n    protected languageIdentifier: Identifiers.LanguageIdentifier,\r\n  public data: (builder: LanguageVariantElementsBuilder) => LanguageVariantContracts.IUpsertLanguageVariantPostContract,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n\r\n  toPromise(): Promise<LanguageVariantResponses.UpsertLanguageVariantResponse> {\r\n    return this.queryService.upsertLanguageVariantAsync(this.getUrl(), this.data(languageVariantElementsBuilder), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.viewOrUpsertLanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n  }\r\n}\r\n\r\n\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewLanguageVariantQuery extends BaseQuery<LanguageVariantResponses.ViewLanguageVariantResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n    public languageIdentifier: Identifiers.LanguageIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<LanguageVariantResponses.ViewLanguageVariantResponse> {\r\n    return this.queryService.viewLanguageVariantAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.viewOrUpsertLanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n  }\r\n}\r\n\r\n\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteLanguageVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n        public languageIdentifier: Identifiers.LanguageIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteLanguageVariantAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteLanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListLanguageVariantsByCollectionQuery extends BaseListingQuery<\r\n    LanguageVariantResponses.ListLanguageVariantsByCollectionResponse,\r\n    LanguageVariantResponses.ListAllLanguageVariantsByCollectionResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected identifier: Identifiers.CollectionIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageVariantResponses.ListLanguageVariantsByCollectionResponse> {\r\n        return this.queryService.listLanguageVariantsByCollectionAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listLanguageVariantsByCollection(this.identifier);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: LanguageVariantResponses.ListLanguageVariantsByCollectionResponse[]\r\n    ): LanguageVariantResponses.ListAllLanguageVariantsByCollectionResponse {\r\n        return new LanguageVariantResponses.ListAllLanguageVariantsByCollectionResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageVariantResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListLanguageVariantsBySpaceQuery extends BaseListingQuery<\r\n    LanguageVariantResponses.ListLanguageVariantsBySpaceResponse,\r\n    LanguageVariantResponses.ListAllLanguageVariantsBySpaceResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        protected identifier: Identifiers.SpaceIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageVariantResponses.ListLanguageVariantsBySpaceResponse> {\r\n        return this.queryService.listLanguageVariantsBySpaceAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listLanguageVariantsBySpace(this.identifier);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: LanguageVariantResponses.ListLanguageVariantsBySpaceResponse[]\r\n    ): LanguageVariantResponses.ListAllLanguageVariantsBySpaceResponse {\r\n        return new LanguageVariantResponses.ListAllLanguageVariantsBySpaceResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentTypeSnippetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListContentTypeSnippetsQuery extends BaseListingQuery<\r\n    ContentTypeSnippetResponses.ContentTypeSnippetListResponse,\r\n    ContentTypeSnippetResponses.ContentTypeSnippetListAllResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<ContentTypeSnippetResponses.ContentTypeSnippetListResponse> {\r\n        return this.queryService.listContentTypeSnippetsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listContentTypeSnippets();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: ContentTypeSnippetResponses.ContentTypeSnippetListResponse[]\r\n    ): ContentTypeSnippetResponses.ContentTypeSnippetListAllResponse {\r\n        return new ContentTypeSnippetResponses.ContentTypeSnippetListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { ContentTypeSnippetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewContentTypeSnippetQuery extends BaseQuery<ContentTypeSnippetResponses.ViewContentTypeSnippetResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.ContentTypeIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentTypeSnippetResponses.ViewContentTypeSnippetResponse> {\r\n    return this.queryService.viewContentTypeSnippetAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.viewContentTypeSnippet(this.identifier);\r\n  }\r\n}\r\n\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ContentTypeSnippetModels, ContentTypeSnippetElements, contentTypeSnippetElementsBuilder } from '../../models';\r\nimport { ContentTypeSnippetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddContentTypeSnippetQuery extends BaseQuery<ContentTypeSnippetResponses.ViewContentTypeSnippetResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: (builder: ContentTypeSnippetElements) => ContentTypeSnippetModels.IAddContentTypeSnippetData,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentTypeSnippetResponses.ViewContentTypeSnippetResponse> {\r\n    return this.queryService.addContentTypeSnippetAsync(this.getUrl(), this.data(contentTypeSnippetElementsBuilder), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.addContentTypeSnippet();\r\n  }\r\n}\r\n\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, ContentTypeModels } from '../../models';\r\nimport { ContentTypeSnippetResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifyContentTypeSnippetQuery extends BaseQuery<ContentTypeSnippetResponses.ModifyContentTypeSnippetResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.ContentTypeIdentifier,\r\n    public data: ContentTypeModels.IModifyContentTypeData[]\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<ContentTypeSnippetResponses.ModifyContentTypeSnippetResponse> {\r\n    return this.queryService.modifyContentTypeSnippetAsync(this.getUrl(), this.queryConfig, this.data);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.modifyContentTypeSnippet(this.identifier);\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteContentTypeSnippetQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.ContentTypeIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteContentTypeSnippetAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteContentTypeSnippet(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { LanguageResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListLanguagesQuery extends BaseListingQuery<\r\n    LanguageResponses.ListLanguagesResponse,\r\n    LanguageResponses.ListAllLanguagesResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageResponses.ListLanguagesResponse> {\r\n        return this.queryService.listLanguagesAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listLanguages();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: LanguageResponses.ListLanguagesResponse[]\r\n    ): LanguageResponses.ListAllLanguagesResponse {\r\n        return new LanguageResponses.ListAllLanguagesResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, LanguageModels } from '../../models';\r\nimport { LanguageResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifyLanguageQuery extends BaseQuery<LanguageResponses.ModifyLanguageResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.LanguageIdentifier,\r\n    public data: LanguageModels.IModifyLanguageData[]\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<LanguageResponses.ModifyLanguageResponse> {\r\n    return this.queryService.modifyLanguageAsync(this.getUrl(), this.queryConfig, this.data);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.modifyLanguage(this.identifier);\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { LanguageModels } from '../../models';\r\nimport { LanguageResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddLanguageQuery extends BaseQuery<LanguageResponses.AddLanguageResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public data: LanguageModels.IAddLanguageData\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<LanguageResponses.AddLanguageResponse> {\r\n    return this.queryService.addLanguageAsync(this.getUrl(), this.queryConfig, this.data);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.addLanguage();\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { LanguageResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewLanguageQuery extends BaseQuery<LanguageResponses.ViewLanguageResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.LanguageIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<LanguageResponses.ViewLanguageResponse> {\r\n        return this.queryService.viewLanguageAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.viewLanguage(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { WorkflowResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListWorkflowStepsQuery extends BaseQuery<WorkflowResponses.ListWorkflowStepsResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<WorkflowResponses.ListWorkflowStepsResponse> {\r\n    return this.queryService.listWorkflowStepsAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.listWorkflowSteps();\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ChangeWorkflowStepOfLanguageOrVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n    public languageIdentifier: Identifiers.LanguageIdentifier,\r\n    public workflowIdentifier: Identifiers.WorkflowIdentifier\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n    return this.queryService.changeWorkflowStepOfLanguageVariantAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.changeWorkflowStepOfLanguageVariant(this.contentItemIdentifier, this.languageIdentifier, this.workflowIdentifier);\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, WorkflowModels } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class PublishLanguageVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n    public languageIdentifier: Identifiers.LanguageIdentifier,\r\n    public data?: WorkflowModels.IPublishLanguageVariantData\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n    return this.queryService.publishLanguageVariantAsync(this.getUrl(), this.data, this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.publishLaguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class CreateNewVersionOfLanguageVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n    public languageIdentifier: Identifiers.LanguageIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n    return this.queryService.createNewVersionOfLanguageVariantAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.createNewVersionOfALanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, WorkflowModels } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UnpublishLanguageVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n        public languageIdentifier: Identifiers.LanguageIdentifier,\r\n        public data?: WorkflowModels.IUnpublishLanguageVarianthData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.unpublishLanguageVariantAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.unpublishLanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class CancelScheduledPublishingOfLanguageVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n    public languageIdentifier: Identifiers.LanguageIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n    return this.queryService.cancelScheduledPublishingOfLanguageVariantAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.cancelScheduledPublishingOfLanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n  }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class CancelScheduledUnpublishingOfLanguageVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n    public languageIdentifier: Identifiers.LanguageIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n    return this.queryService.cancelScheduledUnpublishingOfLanguageVariantAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.cancelScheduledUnpublishingOfLanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n  }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { WorkflowResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListWorkflowsQuery extends BaseQuery<WorkflowResponses.ListWorkflowsResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WorkflowResponses.ListWorkflowsResponse> {\r\n        return this.queryService.listWorkflowsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listWorkflows();\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { WorkflowModels } from '../../models';\r\nimport { WorkflowResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddWorkflowQuery extends BaseQuery<WorkflowResponses.AddWorkflowResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: WorkflowModels.IAddWorkflowData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WorkflowResponses.AddWorkflowResponse> {\r\n        return this.queryService.addWorkflowAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addWorkflow();\r\n    }\r\n}\r\n", "\r\nimport { BaseQuery } from '../base-query';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\n\r\nexport class DeleteWorkflowQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WorkflowIdentifier,\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteWorkflowAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteWorkflow(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, WorkflowModels } from '../../models';\r\nimport { WorkflowResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class UpdateWorkflowQuery extends BaseQuery<WorkflowResponses.UpdateWorkflowResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: WorkflowModels.IUpdateWorkflowData,\r\n        public identifier: Identifiers.WorkflowIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WorkflowResponses.UpdateWorkflowResponse> {\r\n        return this.queryService.updateWorkflowAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.updateWorkflow(this.identifier);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, WorkflowModels } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ChangeWorkflowOfLanguageOrVariantQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public contentItemIdentifier: Identifiers.ContentItemIdentifier,\r\n        public languageIdentifier: Identifiers.LanguageIdentifier,\r\n        public data: WorkflowModels.IChangeWorkflowOfLanguageVariantData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.changeWorkflowOfLanguageVariantAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.changeWorkflowOfLanguageVariant(this.contentItemIdentifier, this.languageIdentifier);\r\n    }\r\n}\r\n", "\r\nimport { BaseQuery } from '../base-query';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\n\r\nexport class DeleteWebhookQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier,\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteWebhook(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { WebhookModels } from '../../models';\r\nimport { WebhookResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddWebhookQuery extends BaseQuery<WebhookResponses.AddWebhookResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: WebhookModels.IAddWebhookData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebhookResponses.GetWebhookResponse> {\r\n        return this.queryService.addWebhookAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addWebhook();\r\n    }\r\n\r\n}", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { WebhookResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class GetWebhookQuery extends BaseQuery<WebhookResponses.GetWebhookResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebhookResponses.GetWebhookResponse> {\r\n        return this.queryService.getWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.getWebhook(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { WebhookResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListWebhooksQuery extends BaseQuery<WebhookResponses.WebhookListResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebhookResponses.WebhookListResponse> {\r\n        return this.queryService.listWebhooksAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listWebhooks();\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { Identifiers } from '../../models';\r\n\r\nexport class EnableWebhookQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.enableWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.enableWebhook(this.identifier);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { Identifiers } from '../../models';\r\n\r\nexport class DisableWebhookQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.disableWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.disableWebhook(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { WebhookModels } from '../../models';\r\nimport { WebhookResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddLegacyWebhookQuery extends BaseQuery<WebhookResponses.AddLegacyWebhookResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: WebhookModels.IAddLegacyWebhookData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebhookResponses.GetLegacyWebhookResponse> {\r\n        return this.queryService.addLegacyWebhookAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addLegacyWebhook();\r\n    }\r\n}\r\n\r\n", "\r\nimport { BaseQuery } from '../base-query';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\n\r\nexport class DeleteLegacyWebhookQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier,\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteLegacyWebhook(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { WebhookResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class GetLegacyWebhookQuery extends BaseQuery<WebhookResponses.GetLegacyWebhookResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebhookResponses.GetLegacyWebhookResponse> {\r\n        return this.queryService.getLegacyWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.getLegacyWebhook(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { WebhookResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListLegacyWebhooksQuery extends BaseQuery<WebhookResponses.LegacyWebhookListResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<WebhookResponses.LegacyWebhookListResponse> {\r\n        return this.queryService.listLegacyWebhooksAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listLegacyWebhooks();\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { Identifiers } from '../../models';\r\n\r\nexport class EnableLegacyWebhookQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.enableWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.enableLegacyWebhook(this.identifier);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { Identifiers } from '../../models';\r\n\r\nexport class DisableLegacyWebhookQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.WebhookIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.disableWebhookAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.disableLegacyWebhook(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { AssetFolderResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListAssetFoldersQuery extends BaseQuery<AssetFolderResponses.AssetFoldersListResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetFolderResponses.AssetFoldersListResponse> {\r\n        return this.queryService.listAssetFoldersAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listAssetFolders();\r\n    }\r\n}\r\n", "\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { AssetFolderModels } from '../../models';\r\nimport { AssetFolderResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddAssetFoldersQuery extends BaseQuery<AssetFolderResponses.AddAssetFoldersResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: AssetFolderModels.IAddAssetFoldersData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetFolderResponses.AddAssetFoldersResponse> {\r\n        return this.queryService.addAssetFoldersAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addAssetFolders();\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { AssetFolderModels } from '../../models';\r\nimport { AssetFolderResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifyAssetFoldersQuery extends BaseQuery<AssetFolderResponses.ModifyAssetFoldersResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: AssetFolderModels.IModifyAssetFoldersData[]\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetFolderResponses.ModifyAssetFoldersResponse> {\r\n        return this.queryService.modifyAssetFoldersAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.modifyAssetFolders();\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { GenericResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteQuery extends BaseQuery<GenericResponses.GenericResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public action: string,\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<GenericResponses.GenericResponse> {\r\n        return this.queryService.genericDeleteResponseAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.action;\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { GenericResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class GetQuery extends BaseQuery<GenericResponses.GenericResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public action: string,\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<GenericResponses.GenericResponse> {\r\n        return this.queryService.genericGetResponseAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.action;\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { GenericResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class PatchQuery extends BaseQuery<GenericResponses.GenericResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public action: string,\r\n        public data: any\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<GenericResponses.GenericResponse> {\r\n        return this.queryService.genericPatchResponseAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.action;\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { GenericResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class PostQuery extends BaseQuery<GenericResponses.GenericResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public action: string,\r\n        public data: any\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<GenericResponses.GenericResponse> {\r\n        return this.queryService.genericPostResponseAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.action;\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { GenericResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class PutQuery extends BaseQuery<GenericResponses.GenericResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public action: string,\r\n        public data: any\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<GenericResponses.GenericResponse> {\r\n        return this.queryService.genericPutResponseAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.action;\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { CollectionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListCollectionsQuery extends BaseQuery<CollectionResponses.CollectionsListResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<CollectionResponses.CollectionsListResponse> {\r\n        return this.queryService.listCollectionsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listCollections();\r\n    }\r\n}\r\n", "\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { CollectionModels } from '../../models';\r\nimport { CollectionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class SetCollectionsQuery extends BaseQuery<CollectionResponses.SetCollectionsResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: CollectionModels.ISetCollectionData[]\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<CollectionResponses.SetCollectionsResponse> {\r\n        return this.queryService.setCollectionsAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.setCollections();\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { SubscriptionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListSubscriptionProjectsQuery extends BaseListingQuery<\r\n    SubscriptionResponses.SubscriptionProjectsListResponse,\r\n    SubscriptionResponses.SubscriptionProjectsListAllResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<SubscriptionResponses.SubscriptionProjectsListResponse> {\r\n        return this.queryService.listSubscriptionProjectsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listSubscriptionProjects();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: SubscriptionResponses.SubscriptionProjectsListResponse[]\r\n    ): SubscriptionResponses.SubscriptionProjectsListAllResponse {\r\n        return new SubscriptionResponses.SubscriptionProjectsListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { SubscriptionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListSubscriptionUsersQuery extends BaseListingQuery<\r\n    SubscriptionResponses.SubscriptionUsersListResponse,\r\n    SubscriptionResponses.SubscriptionUsersListAllResponse\r\n> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<SubscriptionResponses.SubscriptionUsersListResponse> {\r\n        return this.queryService.litSubscriptionUsersAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listSubscriptionUsers();\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: SubscriptionResponses.SubscriptionUsersListResponse[]\r\n    ): SubscriptionResponses.SubscriptionUsersListAllResponse {\r\n        return new SubscriptionResponses.SubscriptionUsersListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { SubscriptionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewSubscriptionProjectQuery extends BaseQuery<SubscriptionResponses.ViewSubscriptionProjectResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.EnvironmentIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<SubscriptionResponses.ViewSubscriptionProjectResponse> {\r\n        return this.queryService.viewSubscriptionProjectAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.viewSubscriptionProject(this.identifier);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { SubscriptionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewSubscriptionUserQuery extends BaseQuery<SubscriptionResponses.ViewSubscriptionUserResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.UserIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<SubscriptionResponses.ViewSubscriptionUserResponse> {\r\n        return this.queryService.viewSubscriptionUserAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.viewSubscriptionUser(this.identifier);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ActivateUserInAllProjectsQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.UserIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.activateUserInAllProjectsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.activateUserInAllProjects(this.identifier);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeactivateUserInAllProjectsQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.UserIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deactivateUserInAllProjectsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deactivateUserInAllProjects(this.identifier);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { RoleResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListRolesQuery extends BaseQuery<RoleResponses.RoleListResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<RoleResponses.RoleListResponse> {\r\n        return this.queryService.listRolesAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listRoles();\r\n    }\r\n}\r\n", "import { Identifiers } from '../../models';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { RoleResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewRoleQuery extends BaseQuery<RoleResponses.ViewRoleResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        private identifier: Identifiers.RoleIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<RoleResponses.ViewRoleResponse> {\r\n        return this.queryService.viewRoleAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.viewRole(this.identifier);\r\n    }\r\n}\r\n", "import { Identifiers, ProjectUserModels } from '../../models';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ProjectUsersResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ChangeUserRolesQuery extends BaseQuery<ProjectUsersResponses.ChangeUserRolesResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        private identifier: Identifiers.UserIdentifier,\r\n        private data: ProjectUserModels.IChangeUserRoleData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<ProjectUsersResponses.ChangeUserRolesResponse> {\r\n        return this.queryService.changeUserRolesAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.changeProjectUserRoles(this.identifier);\r\n    }\r\n}\r\n", "import { ProjectUserModels } from '../../models';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ProjectUsersResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class InviteProjectUserQuery extends BaseQuery<ProjectUsersResponses.InviteUserResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        private data: ProjectUserModels.IInviteUserData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<ProjectUsersResponses.InviteUserResponse> {\r\n        return this.queryService.inviteProjectUserAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.inviteProjectUser();\r\n    }\r\n}\r\n", "import { Identifiers } from '../../models/identifiers';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { AssetRenditionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListAssetRenditionsQuery extends BaseListingQuery<\r\n    AssetRenditionResponses.AssetRenditionsListResponse,\r\n    AssetRenditionResponses.AssetRenditionsListAllResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.AssetIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetRenditionResponses.AssetRenditionsListResponse> {\r\n        return this.queryService.listAssetRenditionsAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listAssetRenditions(this.identifier);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: AssetRenditionResponses.AssetRenditionsListResponse[]\r\n    ): AssetRenditionResponses.AssetRenditionsListAllResponse {\r\n        return new AssetRenditionResponses.AssetRenditionsListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { AssetRenditionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewAssetRenditionQuery extends BaseQuery<AssetRenditionResponses.ViewAssetRenditionResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public assetIdentifier: Identifiers.AssetIdentifier,\r\n        public renditionIdentifier: Identifiers.RenditionIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetRenditionResponses.ViewAssetRenditionResponse> {\r\n        return this.queryService.viewAssetRenditionAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.viewAssetRendition(this.assetIdentifier, this.renditionIdentifier);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, AssetRenditionModels } from '../../models';\r\nimport { AssetRenditionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class AddAssetRenditionQuery extends BaseQuery<AssetRenditionResponses.AddAssetRenditionResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public assetIdentifier: Identifiers.AssetIdentifier,\r\n        public data: AssetRenditionModels.IAddAssetRenditionData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetRenditionResponses.AddAssetRenditionResponse> {\r\n        return this.queryService.addAssetRenditionAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addAssetRendition(this.assetIdentifier);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, AssetRenditionModels } from '../../models';\r\nimport { AssetRenditionResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifyAssetRenditionQuery extends BaseQuery<AssetRenditionResponses.ModifyAssetRenditionResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public assetIdentifier: Identifiers.AssetIdentifier,\r\n        public renditionIdentifier: Identifiers.RenditionIdentifier,\r\n        public data: AssetRenditionModels.IModifyAssetRenditionData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<AssetRenditionResponses.ModifyAssetRenditionResponse> {\r\n        return this.queryService.modifyAssetRenditionAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.modifyAssetRendition(this.assetIdentifier, this.renditionIdentifier);\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { SpaceResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { SpaceModels } from '../../models';\r\n\r\nexport class AddSpaceQuery extends BaseQuery<SpaceResponses.AddSpaceResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: SpaceModels.IAddSpaceData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<SpaceResponses.AddSpaceResponse> {\r\n        return this.queryService.addSpaceAsync(this.getUrl(), this.data, this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.addSpace();\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { BaseResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class DeleteSpaceQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.SpaceIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteSpaceAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteSpace(this.identifier);\r\n    }\r\n}\r\n", "\r\n\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { SpaceResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ListSpacesQuery extends BaseQuery<SpaceResponses.SpacesListResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<SpaceResponses.SpacesListResponse> {\r\n        return this.queryService.listSpacesAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listSpaces();\r\n    }\r\n\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers, SpaceModels } from '../../models';\r\nimport { SpaceResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ModifySpaceQuery extends BaseQuery<SpaceResponses.ModifySpaceResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.SpaceIdentifier,\r\n    public data: SpaceModels.IModifySpaceData[]\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<SpaceResponses.ModifySpaceResponse> {\r\n    return this.queryService.modifySpaceAsync(this.getUrl(), this.queryConfig, this.data);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.modifySpace(this.identifier);\r\n  }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { Identifiers } from '../../models';\r\nimport { SpaceResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class ViewSpaceQuery extends BaseQuery<SpaceResponses.ViewSpaceResponse> {\r\n\r\n  constructor(\r\n    protected config: IManagementClientConfig,\r\n    protected queryService: ManagementQueryService,\r\n    public identifier: Identifiers.SpaceIdentifier,\r\n  ) {\r\n    super(config, queryService);\r\n  }\r\n\r\n  toPromise(): Promise<SpaceResponses.ViewSpaceResponse> {\r\n    return this.queryService.viewSpaceAsync(this.getUrl(), this.queryConfig);\r\n  }\r\n\r\n  protected getAction(): string {\r\n    return this.apiEndpoints.viewSpace(this.identifier);\r\n  }\r\n}\r\n", "import { Identifiers } from '../../models';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { EnvironmentResponses } from '../../responses';\r\n\r\nexport class CheckEnvironmentValidationQuery extends BaseQuery<EnvironmentResponses.StartEnvironmentValidationResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public identifier: Identifiers.TaskIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.StartEnvironmentValidationResponse> {\r\n        return this.queryService.checkEnvironmentValidationAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.checkEnvironmentValidation(this.identifier);\r\n    }\r\n}\r\n", "import { BaseQuery } from '../base-query';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { EnvironmentModels } from '../../models/environments/environment.models';\r\nimport { EnvironmentResponses } from '../../responses/environments/environment-responses';\r\n\r\n\r\nexport class CloneEnvironmentQuery extends BaseQuery<EnvironmentResponses.CloneEnvironmentResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: EnvironmentModels.ICloneEnvironmentData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.CloneEnvironmentResponse> {\r\n        return this.queryService.cloneEnvironmentAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.cloneEnvironment();\r\n    }\r\n}\r\n", "import { BaseQuery } from '../base-query';\r\nimport { BaseResponses } from '../../responses';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\n\r\nexport class DeleteEnvironmentQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.deleteEnvironmentAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.deleteEnvironment();\r\n    }\r\n}\r\n", "import { BaseQuery } from '../base-query';\r\nimport { EnvironmentResponses } from '../../responses/environments/environment-responses';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\n\r\nexport class GetEnvironmentCloningStateQuery extends BaseQuery<EnvironmentResponses.GetCloningStateResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.GetCloningStateResponse> {\r\n        return this.queryService.getEnvironmentCloningStateAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.getEnvironmentCloningStatus();\r\n    }\r\n}\r\n", "import { Identifiers } from '../../models';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { EnvironmentResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseListingQuery } from '../base-listing-query';\r\n\r\nexport class ListEnvironmentValidationIssuesQuery extends BaseListingQuery<\r\n    EnvironmentResponses.EnvironmentValidationIssuesListResponse,\r\n    EnvironmentResponses.EnvironmentValidationIssuesListAllResponse\r\n> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public taskIdentifier: Identifiers.TaskIdentifier\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.EnvironmentValidationIssuesListResponse> {\r\n        return this.queryService.listEnvironmentValidationIssuesAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.listEnvironmentIssues(this.taskIdentifier);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: EnvironmentResponses.EnvironmentValidationIssuesListResponse[]\r\n    ): EnvironmentResponses.EnvironmentValidationIssuesListAllResponse {\r\n        return new EnvironmentResponses.EnvironmentValidationIssuesListAllResponse({\r\n            items: items,\r\n            responses: responses\r\n        });\r\n    }\r\n}\r\n", "import { BaseQuery } from '../base-query';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { EnvironmentModels } from '../../models/environments/environment.models';\r\nimport { BaseResponses } from '../../responses';\r\n\r\nexport class MarkEnvironmentAsProductionQuery extends BaseQuery<BaseResponses.EmptyContentManagementResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: EnvironmentModels.IMarkEnvironmentAsProductionData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return this.queryService.markEnvironmentAsProductionAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.markEnvironmentAsProduction();\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { EnvironmentResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class StartEnvironmentValidationQuery extends BaseQuery<EnvironmentResponses.StartEnvironmentValidationResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.StartEnvironmentValidationResponse> {\r\n        return this.queryService.startEnvironmentValidationAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.startProjectValidation();\r\n    }\r\n}\r\n", "import { BaseQuery } from '../base-query';\r\nimport { EnvironmentResponses } from '../../responses/environments/environment-responses';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { EnvironmentModels } from '../../models/environments/environment.models';\r\n\r\nexport class ModifyEnvironmentQuery extends BaseQuery<EnvironmentResponses.ModifyEnvironmentResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        public data: EnvironmentModels.IModifyEnvironmentData[]) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.ModifyEnvironmentResponse> {\r\n        return this.queryService.modifyEnvironmentAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.modifyEnvironment();\r\n    }\r\n}\r\n", "import { IManagementClientConfig } from '../../config';\r\nimport { EnvironmentResponses } from '../../responses';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class EnvironmentInformationQuery extends BaseQuery<EnvironmentResponses.EnvironmentInformationResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<EnvironmentResponses.EnvironmentInformationResponse> {\r\n        return this.queryService.environmentInformationAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.environmentInformation();\r\n    }\r\n}\r\n", "import { PreviewResponses } from '../../responses';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\n\r\nexport class GetPreviewConfigurationQuery extends BaseQuery<PreviewResponses.PreviewConfigurationResponse> {\r\n    constructor(protected config: IManagementClientConfig, protected queryService: ManagementQueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<PreviewResponses.PreviewConfigurationResponse> {\r\n        return this.queryService.getPreviewConfigurationAsync(this.getUrl(), this.queryConfig);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.getPreviewConfigruation();\r\n    }\r\n}\r\n", "import { PreviewResponses } from '../../responses';\r\nimport { IManagementClientConfig } from '../../config';\r\nimport { ManagementQueryService } from '../../services';\r\nimport { BaseQuery } from '../base-query';\r\nimport { PreviewModels } from '../../models';\r\n\r\nexport class ModifyPreviewConfigurationQuery extends BaseQuery<PreviewResponses.ModifyConfigurationResponse> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected queryService: ManagementQueryService,\r\n        private data: PreviewModels.IModifyPreviewConfigurationData\r\n    ) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<PreviewResponses.ModifyConfigurationResponse> {\r\n        return this.queryService.modifyPreviewConfigurationAsync(this.getUrl(), this.queryConfig, this.data);\r\n    }\r\n\r\n    protected getAction(): string {\r\n        return this.apiEndpoints.modifyPreviewConfigruation();\r\n    }\r\n}\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { SharedContracts } from '../contracts';\r\nimport { SharedModels } from '../models';\r\nimport { BaseResponses } from '../responses';\r\n\r\nexport abstract class BaseMapper {\r\n\r\n    mapResponseDebug(\r\n        baseResponse: IResponse<any>\r\n    ): BaseResponses.IContentManagementResponseDebug {\r\n        if (!baseResponse) {\r\n            throw Error(`Cannot map debug model from the response`);\r\n        }\r\n\r\n        return {\r\n            response: baseResponse\r\n        };\r\n    }\r\n\r\n    mapPagination(rawPagination: SharedContracts.IPaginationModelContract): SharedModels.Pagination {\r\n        return new SharedModels.Pagination(rawPagination.continuation_token, rawPagination.next_page);\r\n    }\r\n\r\n    mapReference(rawReference: SharedContracts.IReferenceObjectContract): SharedModels.ReferenceObject {\r\n        return new SharedModels.ReferenceObject({\r\n            codename: rawReference.codename,\r\n            externalId: rawReference.external_id,\r\n            id: rawReference.id\r\n        });\r\n    }\r\n\r\n    mapEmptyResponse(response: IResponse<void | any>): BaseResponses.EmptyContentManagementResponse {\r\n        return new BaseResponses.EmptyContentManagementResponse(this.mapResponseDebug(response), undefined, undefined);\r\n    }\r\n}\r\n\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { ContentItemContracts } from '../contracts';\r\nimport { ContentItemModels } from '../models';\r\nimport { ContentItemResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class ContentItemsMapper extends BaseMapper {\r\n\r\n    mapListingItemsResponse(\r\n        response: IResponse<ContentItemContracts.IContentItemsListingResponseContract>\r\n    ): ContentItemResponses.ContentItemsResponse {\r\n\r\n        const pagination = super.mapPagination(response.data.pagination);\r\n        const items = response.data.items.map(m => this.mapContentItem(m));\r\n\r\n        return new ContentItemResponses.ContentItemsResponse(super.mapResponseDebug(response), response.data, {\r\n            pagination: pagination,\r\n            items: items\r\n        });\r\n    }\r\n\r\n    mapViewContentItemResponse(\r\n        response: IResponse<ContentItemContracts.IContentItemModelContract>\r\n    ): ContentItemResponses.ViewContentItemResponse {\r\n        return new ContentItemResponses.ViewContentItemResponse(super.mapResponseDebug(response), response.data, this.mapContentItem(response.data));\r\n    }\r\n\r\n    mapAddContentItemResponse(\r\n        response: IResponse<ContentItemContracts.IAddContentItemResponseContract>\r\n    ): ContentItemResponses.AddContentItemResponse {\r\n        return new ContentItemResponses.AddContentItemResponse(super.mapResponseDebug(response), response.data, this.mapContentItem(response.data));\r\n    }\r\n\r\n    mapUpdateContentItemResponse(\r\n        response: IResponse<ContentItemContracts.IUpdateContentItemResponseContract>\r\n    ): ContentItemResponses.UpdateContentItemResponse {\r\n        return new ContentItemResponses.UpdateContentItemResponse(super.mapResponseDebug(response), response.data, this.mapContentItem(response.data));\r\n    }\r\n\r\n    mapUpsertContentItemResponse(\r\n        response: IResponse<ContentItemContracts.IUpsertContentItemResponseContract>\r\n    ): ContentItemResponses.UpsertContentItemResponse {\r\n        return new ContentItemResponses.UpsertContentItemResponse(super.mapResponseDebug(response), response.data, this.mapContentItem(response.data));\r\n    }\r\n\r\n    mapContentItem(rawItem: ContentItemContracts.IContentItemModelContract): ContentItemModels.ContentItem {\r\n        return new ContentItemModels.ContentItem({\r\n            codename: rawItem.codename,\r\n            externalId: rawItem.external_id,\r\n            id: rawItem.id,\r\n            lastModified: new Date(rawItem.last_modified),\r\n            name: rawItem.name,\r\n            type: rawItem.type,\r\n            collection: super.mapReference(rawItem.collection),\r\n            _raw: rawItem\r\n        });\r\n    }\r\n}\r\n\r\nexport const contentItemsMapper = new ContentItemsMapper();\r\n", "import { ElementContracts, SharedContracts } from '../contracts';\r\nimport { ContentTypeElements, ElementModels, SharedModels } from '../models';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class ElementsMapper extends BaseMapper {\r\n    mapTypeElements(\r\n        elementsRaw: ElementContracts.IContentTypeElementContract[]\r\n    ): ContentTypeElements.ContentTypeElementModel[] {\r\n        return elementsRaw.map((m) => this.mapTypeElement(m));\r\n    }\r\n\r\n    mapTypeElement(\r\n        rawElement: ElementContracts.IContentTypeElementContract\r\n    ): ContentTypeElements.ContentTypeElementModel {\r\n        return rawElement as ContentTypeElements.ContentTypeElementModel;\r\n    }\r\n\r\n    mapElements(elementsRaw: ElementContracts.IContentItemElementContract[]): ElementModels.ContentItemElement[] {\r\n        return elementsRaw.map((m) => {\r\n            return new ElementModels.ContentItemElement({\r\n                element: super.mapReference(m.element),\r\n                value: this.mapElementValue(m.value),\r\n                components: this.mapElementComponents(m.components ?? []),\r\n                mode: m.mode,\r\n                searchableValue: m.searchableValue,\r\n                _raw: m\r\n            });\r\n        });\r\n    }\r\n\r\n    mapElement(rawElement: ElementContracts.IContentItemElementContract): ElementModels.ContentItemElement {\r\n        return new ElementModels.ContentItemElement({\r\n            element: super.mapReference(rawElement.element),\r\n            value: this.mapElementValue(rawElement.value),\r\n            mode: rawElement.mode,\r\n            searchableValue: rawElement.searchableValue,\r\n            _raw: rawElement\r\n        });\r\n    }\r\n\r\n    private mapElementComponents(\r\n        components: ElementContracts.IContentItemElementComponent[]\r\n    ): ElementModels.ContentItemElementComponent[] {\r\n        return components.map(\r\n            (m) =>\r\n                new ElementModels.ContentItemElementComponent({\r\n                    elements: this.mapElements(m.elements),\r\n                    id: m.id,\r\n                    type: m.type,\r\n                    _raw: m\r\n                })\r\n        );\r\n    }\r\n\r\n    private mapElementValue(\r\n        rawValue: string | number | SharedContracts.IReferenceObjectContract[]\r\n    ): string | number | SharedModels.ReferenceObject[] {\r\n        if (Array.isArray(rawValue)) {\r\n            return rawValue.map((m) => super.mapReference(m));\r\n        }\r\n\r\n        return rawValue;\r\n    }\r\n}\r\n\r\nexport const elementsMapper = new ElementsMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { AssetContracts } from '../contracts';\r\nimport { AssetModels } from '../models';\r\nimport { AssetResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class AssetsMapper extends BaseMapper {\r\n    mapListingAssetsResponse(\r\n        response: IResponse<AssetContracts.IAssetsListingResponseContract>\r\n    ): AssetResponses.AssetsListResponse {\r\n        const pagination = super.mapPagination(response.data.pagination);\r\n        const items = response.data.assets.map(m => this.mapAsset(m));\r\n\r\n        return new AssetResponses.AssetsListResponse(super.mapResponseDebug(response), response.data, {\r\n            pagination: pagination,\r\n            items: items\r\n        });\r\n    }\r\n\r\n    mapViewAssetResponse(\r\n        response: IResponse<AssetContracts.IAssetModelContract>\r\n    ): AssetResponses.ViewAssetResponse {\r\n        return new AssetResponses.ViewAssetResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAsset(response.data)\r\n        );\r\n    }\r\n\r\n    mapUploadBinaryFileResponse(\r\n        response: IResponse<AssetContracts.IUploadBinaryFileResponseContract>\r\n    ): AssetResponses.UploadBinaryFileResponse {\r\n        return new AssetResponses.UploadBinaryFileResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAssetReference(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddAssetResponse(\r\n        response: IResponse<AssetContracts.IAddAssetResponseContract>\r\n    ): AssetResponses.AddAssetResponse {\r\n        return new AssetResponses.AddAssetResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAsset(response.data)\r\n        );\r\n    }\r\n\r\n    mapUpdateAssetResponse(\r\n        response: IResponse<AssetContracts.IUpdateAssetResponseContract>\r\n    ): AssetResponses.UpdateAssetResponse {\r\n        return new AssetResponses.UpdateAssetResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAsset(response.data)\r\n        );\r\n    }\r\n\r\n    mapUpsertAssetResponse(\r\n        response: IResponse<AssetContracts.IUpsertAssetResponseContract>\r\n    ): AssetResponses.UpsertAssertResponse {\r\n        return new AssetResponses.UpsertAssertResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAsset(response.data)\r\n        );\r\n    }\r\n\r\n    mapAssetReference(\r\n        rawFileReference: AssetContracts.IAssetFileReferenceContract\r\n    ): AssetModels.AssetFileReference {\r\n        return new AssetModels.AssetFileReference({\r\n            id: rawFileReference.id,\r\n            type: rawFileReference.type\r\n        });\r\n    }\r\n\r\n    mapAsset(rawAsset: AssetContracts.IAssetModelContract): AssetModels.Asset {\r\n        return new AssetModels.Asset({\r\n            descriptions: rawAsset.descriptions.map(\r\n                m =>\r\n                    new AssetModels.AssetFileDescription({\r\n                        description: m.description,\r\n                        language: super.mapReference(m.language)\r\n                    })\r\n            ),\r\n            externalId: rawAsset.external_id,\r\n            fileName: rawAsset.file_name,\r\n            fileReference: this.mapAssetReference(rawAsset.file_reference),\r\n            id: rawAsset.id,\r\n            url: rawAsset.url,\r\n            imageHeight: rawAsset.image_height,\r\n            imageWidth: rawAsset.image_width,\r\n            lastModified: new Date(rawAsset.last_modified),\r\n            size: rawAsset.size,\r\n            title: rawAsset.title,\r\n            type: rawAsset.type,\r\n            folder: rawAsset.folder,\r\n            codename: rawAsset.codename,\r\n            collection: rawAsset.collection,\r\n            _raw: rawAsset\r\n        });\r\n    }\r\n}\r\n\r\nexport const assetsMapper = new AssetsMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { TaxonomyContracts } from '../contracts';\r\nimport { TaxonomyModels, SharedModels } from '../models';\r\nimport { TaxonomyResponses as TaxonomyResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class TaxonomyMapper extends BaseMapper {\r\n    mapListingTaxonomysResponse(\r\n        response: IResponse<TaxonomyContracts.IListTaxonomyResponseContract>\r\n    ): TaxonomyResponses.TaxonomyListResponse {\r\n        let taxonomies: TaxonomyModels.Taxonomy[];\r\n        let pagination: SharedModels.Pagination;\r\n\r\n        // temporary mapping of taxonomies before API breaking change\r\n        if (Array.isArray(response.data)) {\r\n            taxonomies = response.data.map((m) => this.mapTaxonomy(m));\r\n            pagination = new SharedModels.Pagination(null, null);\r\n        } else {\r\n            // new API response model\r\n            taxonomies = response.data.taxonomies.map((m) => this.mapTaxonomy(m));\r\n            pagination = super.mapPagination(response.data.pagination);\r\n        }\r\n\r\n        return new TaxonomyResponses.TaxonomyListResponse(super.mapResponseDebug(response), response.data, {\r\n            pagination: pagination,\r\n            items: taxonomies\r\n        });\r\n    }\r\n\r\n    mapGetTaxonomyResponse(\r\n        response: IResponse<TaxonomyContracts.IGetTaxonomyResponseContract>\r\n    ): TaxonomyResponses.GetTaxonomyResponse {\r\n        const taxonomy = this.mapTaxonomy(response.data);\r\n\r\n        return new TaxonomyResponses.GetTaxonomyResponse(super.mapResponseDebug(response), response.data, taxonomy);\r\n    }\r\n\r\n    mapModifyTaxonomyResponse(\r\n        response: IResponse<TaxonomyContracts.IModifyTaxonomyResponseContract>\r\n    ): TaxonomyResponses.ModifyTaxonomyResponse {\r\n        const taxonomy = this.mapTaxonomy(response.data);\r\n\r\n        return new TaxonomyResponses.ModifyTaxonomyResponse(super.mapResponseDebug(response), response.data, taxonomy);\r\n    }\r\n\r\n    mapAddTaxonomyResponse(\r\n        response: IResponse<TaxonomyContracts.IAddTaxonomyResponseContract>\r\n    ): TaxonomyResponses.AddTaxonomyResponse {\r\n        const taxonomy = this.mapTaxonomy(response.data);\r\n\r\n        return new TaxonomyResponses.AddTaxonomyResponse(super.mapResponseDebug(response), response.data, taxonomy);\r\n    }\r\n\r\n    mapTaxonomy(rawTaxonomy: TaxonomyContracts.ITaxonomyContract): TaxonomyModels.Taxonomy {\r\n        return new TaxonomyModels.Taxonomy({\r\n            codename: rawTaxonomy.codename,\r\n            id: rawTaxonomy.id,\r\n            lastModified: new Date(rawTaxonomy.last_modified),\r\n            name: rawTaxonomy.name,\r\n            terms: rawTaxonomy.terms.map((m) => this.mapTaxonomy(m)),\r\n            externalId: rawTaxonomy.external_id,\r\n            _raw: rawTaxonomy\r\n        });\r\n    }\r\n}\r\n\r\nexport const taxonomyMappper = new TaxonomyMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { ContentTypeContracts } from '../contracts';\r\nimport { ContentTypeModels } from '../models';\r\nimport { ContentTypeResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\nimport { elementsMapper } from './elements-mapper';\r\n\r\nexport class ContentTypeMapper extends BaseMapper {\r\n\r\n    mapListingResponse(response: IResponse<ContentTypeContracts.IContentTypeListResponseContract>): ContentTypeResponses.ContentTypeListResponse {\r\n        return new ContentTypeResponses.ContentTypeListResponse(\r\n            super.mapResponseDebug(response), response.data, {\r\n                items: response.data.types.map(m => this.mapContentType(m)),\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapViewContentTypeResponse(response: IResponse<ContentTypeContracts.IViewContentTypeResponseContract>): ContentTypeResponses.ViewContentTypeResponse {\r\n        return new ContentTypeResponses.ViewContentTypeResponse(\r\n            super.mapResponseDebug(response), response.data, this.mapContentType(response.data)\r\n        );\r\n    }\r\n\r\n    mapModifyContentTypeResponse(response: IResponse<ContentTypeContracts.IModifyContentTypeResponseContract>): ContentTypeResponses.ModifyContentTypeResponse {\r\n        return new ContentTypeResponses.ModifyContentTypeResponse(\r\n            super.mapResponseDebug(response), response.data, this.mapContentType(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddContentTypeResponse(response: IResponse<ContentTypeContracts.IAddContentTypeResponseContract>): ContentTypeResponses.AddContentTypeResponse {\r\n        return new ContentTypeResponses.AddContentTypeResponse(\r\n            super.mapResponseDebug(response), response.data, this.mapContentType(response.data)\r\n        );\r\n    }\r\n\r\n    mapContentType(rawContentType: ContentTypeContracts.IContentTypeContract): ContentTypeModels.ContentType {\r\n        return new ContentTypeModels.ContentType({\r\n            codename: rawContentType.codename,\r\n            id: rawContentType.id,\r\n            name: rawContentType.name,\r\n            elements: elementsMapper.mapTypeElements(rawContentType.elements),\r\n            lastModified: new Date(rawContentType.last_modified),\r\n            externalId: rawContentType.external_id,\r\n            contentGroups: rawContentType.content_groups ? rawContentType.content_groups.map(m => this.mapContentTypeGroup(m)) : undefined,\r\n            _raw: rawContentType\r\n        });\r\n    }\r\n\r\n    mapContentTypeGroup(rawContentTypeGroup: ContentTypeContracts.IContentTypeGroup): ContentTypeModels.ContentTypeGroup {\r\n        return new ContentTypeModels.ContentTypeGroup({\r\n            name: rawContentTypeGroup.name,\r\n            codename: rawContentTypeGroup.codename,\r\n            externalId: rawContentTypeGroup.external_id,\r\n            id: rawContentTypeGroup.id\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport const contentTypeMapper = new ContentTypeMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\nimport { EnvironmentModels } from '../models';\r\nimport { EnvironmentResponses } from '../responses';\r\n\r\nimport { EnvironmentContracts } from '../contracts';\r\nimport { BaseMapper } from './base-mapper';\r\nimport CloneEnvironmentModel = EnvironmentModels.CloneEnvironmentModel;\r\n\r\nexport class EnvironmentMapper extends BaseMapper {\r\n    mapGetEnvironmentCloningStateResponse(\r\n        response: IResponse<EnvironmentContracts.IEnvironmentCloningStateResponseContract>\r\n    ): EnvironmentResponses.GetCloningStateResponse {\r\n        return new EnvironmentResponses.GetCloningStateResponse(super.mapResponseDebug(response), response.data, {\r\n            cloningInfo: new EnvironmentModels.EnvironmentCloningStateModel(response.data.cloning_state)\r\n        });\r\n    }\r\n\r\n    mapModifyEnvironmentResponse(\r\n        response: IResponse<EnvironmentContracts.IModifyEnvironmentResponseContract>\r\n    ): EnvironmentResponses.ModifyEnvironmentResponse {\r\n        return new EnvironmentResponses.ModifyEnvironmentResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            new EnvironmentModels.EnvironmentModel(response.data.id, response.data.name, response.data.is_production)\r\n        );\r\n    }\r\n\r\n    mapCloneEnvironmentResponse(\r\n        response: IResponse<EnvironmentContracts.ICloneEnvironmentResponseContract>\r\n    ): EnvironmentResponses.CloneEnvironmentResponse {\r\n        return new EnvironmentResponses.CloneEnvironmentResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            new CloneEnvironmentModel(\r\n                response.data.id,\r\n                response.data.management_api_key,\r\n                response.data.delivery_preview_api_key,\r\n                response.data.secured_delivery_api_key\r\n            )\r\n        );\r\n    }\r\n\r\n    mapProjectValidationIssuesListResponse(\r\n        response: IResponse<EnvironmentContracts.IEnvironmentValidationListResponseContract>\r\n    ): EnvironmentResponses.EnvironmentValidationIssuesListResponse {\r\n        return new EnvironmentResponses.EnvironmentValidationIssuesListResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: response.data.issues.map((m) => this.mapEnvironmentValidationIssue(m)),\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapStartEnvironmentValidationResponse(\r\n        response: IResponse<EnvironmentContracts.IStartEnvironmentValidationResponseContract>\r\n    ): EnvironmentResponses.StartEnvironmentValidationResponse {\r\n        return new EnvironmentResponses.StartEnvironmentValidationResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                id: response.data.id,\r\n                status: response.data.status,\r\n                validation_result: response.data.validation_result\r\n            }\r\n        );\r\n    }\r\n\r\n    mapCheckEnvironmentValidationResponse(\r\n        response: IResponse<EnvironmentContracts.ICheckEnvironmentValidationResponseContract>\r\n    ): EnvironmentResponses.CheckEnvironmentValidationResponse {\r\n        return new EnvironmentResponses.CheckEnvironmentValidationResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                id: response.data.id,\r\n                status: response.data.status,\r\n                validation_result: response.data.validation_result\r\n            }\r\n        );\r\n    }\r\n\r\n    mapEnvironmentInformationResponse(\r\n        response: IResponse<EnvironmentContracts.IEnvironmentInformationResponseContract>\r\n    ): EnvironmentResponses.EnvironmentInformationResponse {\r\n        return new EnvironmentResponses.EnvironmentInformationResponse(super.mapResponseDebug(response), response.data, {\r\n            project: new EnvironmentModels.EnvironmentInformationModel(\r\n                response.data.id,\r\n                response.data.name,\r\n                response.data.environment\r\n            )\r\n        });\r\n    }\r\n\r\n    mapProjectModel(raw: EnvironmentContracts.IEnvironmentReportModelContract): EnvironmentModels.EnvironmentReportModel {\r\n        return new EnvironmentModels.EnvironmentReportModel(raw.id, raw.name);\r\n    }\r\n\r\n    mapTypeModel(raw: EnvironmentContracts.IEnvironmentTypeContract): EnvironmentModels.EnvironmentTypeModel {\r\n        return new EnvironmentModels.EnvironmentTypeModel(raw.id, raw.name, raw.codename);\r\n    }\r\n\r\n    mapItemModel(\r\n        raw: EnvironmentContracts.IEnvironmentVariantContentItemContract\r\n    ): EnvironmentModels.EnvironmentVariantContentItemModel {\r\n        return new EnvironmentModels.EnvironmentVariantContentItemModel(raw.id, raw.name, raw.codename);\r\n    }\r\n\r\n    mapLanguageModel(\r\n        raw: EnvironmentContracts.IEnvironmentVariantLanguageContract\r\n    ): EnvironmentModels.EnvironmentVariantLanguageModel {\r\n        return new EnvironmentModels.EnvironmentVariantLanguageModel(raw.id, raw.name, raw.codename);\r\n    }\r\n\r\n    mapIssueModel(raw: EnvironmentContracts.IEnvironmentIssueContract): EnvironmentModels.EnvironmentIssueModel {\r\n        return new EnvironmentModels.EnvironmentIssueModel(this.mapVariantElementModel(raw.element), raw.messages);\r\n    }\r\n\r\n    mapTypeIssue(raw: EnvironmentContracts.IEnvironmentTypeIssueContract): EnvironmentModels.EnvironmentTypeIssueModel {\r\n        return new EnvironmentModels.EnvironmentTypeIssueModel(\r\n            this.mapTypeModel(raw.type),\r\n            raw.issues.map((m) => this.mapIssueModel(m))\r\n        );\r\n    }\r\n\r\n    mapVariantIssue(\r\n        raw: EnvironmentContracts.IEnvironmentVariantIssueContract\r\n    ): EnvironmentModels.EnvironmentVariantIssueModel {\r\n        return new EnvironmentModels.EnvironmentVariantIssueModel(\r\n            this.mapItemModel(raw.item),\r\n            this.mapLanguageModel(raw.language),\r\n            raw.issues.map((m) => this.mapIssueModel(m))\r\n        );\r\n    }\r\n\r\n    mapVariantElementModel(\r\n        raw: EnvironmentContracts.IEnvironmentVariantElementContract\r\n    ): EnvironmentModels.EnvironmentVariantElementModel {\r\n        return new EnvironmentModels.EnvironmentVariantElementModel(raw.id, raw.name, raw.codename);\r\n    }\r\n\r\n    mapEnvironmentValidationIssue(\r\n        raw: EnvironmentContracts.IEnvironmentValidationIssueContract\r\n    ): EnvironmentModels.EnvironmentValidationVariantIssueModel | EnvironmentModels.EnvironmentValidationTypeIssueModel {\r\n        if (raw.issue_type === 'variant_issue') {\r\n            return new EnvironmentModels.EnvironmentValidationVariantIssueModel(\r\n                this.mapItemModel(raw.item as EnvironmentContracts.IEnvironmentVariantContentItemContract),\r\n                this.mapLanguageModel(raw.language as EnvironmentContracts.IEnvironmentVariantLanguageContract),\r\n                raw.issues.map((m) => this.mapIssueModel(m))\r\n            );\r\n        }\r\n\r\n        if (raw.issue_type === 'type_issue') {\r\n            return new EnvironmentModels.EnvironmentValidationTypeIssueModel(\r\n                this.mapTypeModel(raw.type as EnvironmentContracts.IEnvironmentTypeContract),\r\n                raw.issues.map((m) => this.mapIssueModel(m))\r\n            );\r\n        }\r\n\r\n        throw Error(`Unsupported issue type '${raw.issue_type}'`);\r\n    }\r\n}\r\n\r\nexport const environmentMapper = new EnvironmentMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { LanguageVariantContracts } from '../contracts';\r\nimport { LanguageVariantModels } from '../models';\r\nimport { LanguageVariantResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\nimport { elementsMapper } from './elements-mapper';\r\n\r\nexport class LanguageVariantMapper extends BaseMapper {\r\n    mapUpsertLanguageVariantResponse(\r\n        response: IResponse<LanguageVariantContracts.IUpsertLanguageVariantResponseContract>\r\n    ): LanguageVariantResponses.UpsertLanguageVariantResponse {\r\n        const variant = this.mapLanguageVariant(response.data);\r\n        return new LanguageVariantResponses.UpsertLanguageVariantResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            variant\r\n        );\r\n    }\r\n\r\n    mapViewLanguageVariantResponse(\r\n        response: IResponse<LanguageVariantContracts.IViewLanguageVariantResponseContract>\r\n    ): LanguageVariantResponses.ViewLanguageVariantResponse {\r\n        const variant = this.mapLanguageVariant(response.data);\r\n        return new LanguageVariantResponses.ViewLanguageVariantResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            variant\r\n        );\r\n    }\r\n\r\n    mapLanguageVariantsOfItemResponse(\r\n        response: IResponse<LanguageVariantContracts.IListLanguageVariantsOfItemResponseContract[]>\r\n    ): LanguageVariantResponses.ListLanguageVariantsOfItemResponse {\r\n        const variants = response.data.map((m) => this.mapLanguageVariant(m));\r\n        return new LanguageVariantResponses.ListLanguageVariantsOfItemResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: variants\r\n            }\r\n        );\r\n    }\r\n\r\n    mapLanguageVariantsByCollectionResponse(\r\n        response: IResponse<LanguageVariantContracts.IListLanguageVariantsByCollectionResponseContract>\r\n    ): LanguageVariantResponses.ListLanguageVariantsByCollectionResponse {\r\n        const variants = response.data.variants.map((m) => this.mapLanguageVariant(m));\r\n        return new LanguageVariantResponses.ListLanguageVariantsByCollectionResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: variants,\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapLanguageVariantsBySpaceResponse(\r\n        response: IResponse<LanguageVariantContracts.IListLanguageVariantsBySpaceResponseContract>\r\n    ): LanguageVariantResponses.ListLanguageVariantsBySpaceResponse {\r\n        const variants = response.data.variants.map((m) => this.mapLanguageVariant(m));\r\n        return new LanguageVariantResponses.ListLanguageVariantsBySpaceResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: variants,\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    mapLanguageVariantsOfContentTypeResponse(\r\n        response: IResponse<LanguageVariantContracts.IListLanguageVariantsOfContentTypeResponseContract>\r\n    ): LanguageVariantResponses.ListLanguageVariantsOfContentTypeResponse {\r\n        const variants = response.data.variants.map((m) => this.mapLanguageVariant(m));\r\n        return new LanguageVariantResponses.ListLanguageVariantsOfContentTypeResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: variants,\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    mapLanguageVariantsOfContentTypeWithComponentsResponse(\r\n        response: IResponse<LanguageVariantContracts.IListLanguageVariantsOfContentTypeWithComponentsResponseContract>\r\n    ): LanguageVariantResponses.ListLanguageVariantsOfContentTypeWithComponentsResponse {\r\n        const variants = response.data.variants.map((m) => this.mapLanguageVariantWithComponents(m));\r\n        return new LanguageVariantResponses.ListLanguageVariantsOfContentTypeWithComponentsResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: variants,\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapLanguageVariantWithComponents(\r\n        rawVariant: LanguageVariantContracts.ILanguageVariantModelsContract\r\n    ): LanguageVariantModels.ContentItemLanguageWithComponentsVariant {\r\n        return new LanguageVariantModels.ContentItemLanguageWithComponentsVariant({\r\n            rawElements: rawVariant.elements,\r\n            elements: elementsMapper.mapElements(rawVariant.elements),\r\n            item: super.mapReference(rawVariant.item),\r\n            language: super.mapReference(rawVariant.language),\r\n            lastModified: new Date(rawVariant.last_modified),\r\n            workflowStep: super.mapReference(rawVariant.workflow_step),\r\n            workflow: {\r\n                workflowIdentifier: super.mapReference(rawVariant.workflow.workflow_identifier),\r\n                stepIdentifier: super.mapReference(rawVariant.workflow.step_identifier)\r\n            },\r\n            _raw: rawVariant\r\n        });\r\n    }\r\n\r\n    mapLanguageVariant(\r\n        rawVariant: LanguageVariantContracts.ILanguageVariantModelContract\r\n    ): LanguageVariantModels.ContentItemLanguageVariant {\r\n        return new LanguageVariantModels.ContentItemLanguageVariant({\r\n            elements: elementsMapper.mapElements(rawVariant.elements),\r\n            item: super.mapReference(rawVariant.item),\r\n            language: super.mapReference(rawVariant.language),\r\n            lastModified: new Date(rawVariant.last_modified),\r\n            workflowStep: super.mapReference(rawVariant.workflow_step),\r\n            workflow: {\r\n                workflowIdentifier: super.mapReference(rawVariant.workflow.workflow_identifier),\r\n                stepIdentifier: super.mapReference(rawVariant.workflow.step_identifier)\r\n            },\r\n            _raw: rawVariant\r\n        });\r\n    }\r\n}\r\n\r\nexport const languageVariantMapper = new LanguageVariantMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { ContentTypeSnippetContracts } from '../contracts';\r\nimport { ContentTypeSnippetModels } from '../models';\r\nimport { ContentTypeSnippetResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\nimport { elementsMapper } from './elements-mapper';\r\n\r\nexport class ContentTypeSnippetMapper extends BaseMapper {\r\n\r\n    mapListingResponse(response: IResponse<ContentTypeSnippetContracts.IContentTypeSnippetListResponseContract>): ContentTypeSnippetResponses.ContentTypeSnippetListResponse {\r\n        return new ContentTypeSnippetResponses.ContentTypeSnippetListResponse(\r\n            super.mapResponseDebug(response), response.data, {\r\n                items: response.data.snippets.map(m => this.mapContentTypeSnippet(m)),\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapViewContentTypeSnippetResponse(response: IResponse<ContentTypeSnippetContracts.IViewContentTypeSnippetResponseContract>): ContentTypeSnippetResponses.ViewContentTypeSnippetResponse {\r\n        return new ContentTypeSnippetResponses.ViewContentTypeSnippetResponse(\r\n            super.mapResponseDebug(response), response.data, this.mapContentTypeSnippet(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddContentTypeSnippetResponse(response: IResponse<ContentTypeSnippetContracts.IAddContentTypeSnippetResponseContract>): ContentTypeSnippetResponses.AddContentTypeSnippetResponse {\r\n        return new ContentTypeSnippetResponses.AddContentTypeSnippetResponse(\r\n            super.mapResponseDebug(response), response.data, this.mapContentTypeSnippet(response.data)\r\n        );\r\n    }\r\n\r\n    mapModifyContentTypeSnippetResponse(response: IResponse<ContentTypeSnippetContracts.IModifyContentTypeSnippetResponseContract>): ContentTypeSnippetResponses.AddContentTypeSnippetResponse {\r\n        return new ContentTypeSnippetResponses.ModifyContentTypeSnippetResponse(\r\n            super.mapResponseDebug(response), response.data, this.mapContentTypeSnippet(response.data)\r\n        );\r\n    }\r\n\r\n    mapContentTypeSnippet(rawContentType: ContentTypeSnippetContracts.IContentTypeSnippetContract): ContentTypeSnippetModels.ContentTypeSnippet {\r\n        return new ContentTypeSnippetModels.ContentTypeSnippet({\r\n            codename: rawContentType.codename,\r\n            id: rawContentType.id,\r\n            name: rawContentType.name,\r\n            elements: elementsMapper.mapTypeElements(rawContentType.elements),\r\n            lastModified: new Date(rawContentType.last_modified),\r\n            externalId: rawContentType.external_id,\r\n            _raw: rawContentType\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport const contentTypeSnippetMapper = new ContentTypeSnippetMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { WorkflowContracts } from '../contracts/workflow-contracts';\r\nimport { WorkflowModels } from '../models';\r\nimport { WorkflowResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class WorkflowMapper extends BaseMapper {\r\n    mapListWorkflowStepsResponse(\r\n        response: IResponse<WorkflowContracts.IListWorkflowStepsResponseContract>\r\n    ): WorkflowResponses.ListWorkflowStepsResponse {\r\n        const workflowSteps = response.data.map((m) => this.mapWorkflowStep(m));\r\n\r\n        return new WorkflowResponses.ListWorkflowStepsResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            workflowSteps\r\n        );\r\n    }\r\n\r\n    mapListWorkflowsResponse(\r\n        response: IResponse<WorkflowContracts.IListWorkflowsResponseContract>\r\n    ): WorkflowResponses.ListWorkflowsResponse {\r\n        const workflows = response.data.map((m) => this.mapWorkflow(m));\r\n\r\n        return new WorkflowResponses.ListWorkflowsResponse(super.mapResponseDebug(response), response.data, workflows);\r\n    }\r\n\r\n    mapAddWorkflowResponse(\r\n        response: IResponse<WorkflowContracts.IAddWorkflowContract>\r\n    ): WorkflowResponses.AddWorkflowResponse {\r\n        return new WorkflowResponses.AddWorkflowResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapWorkflow(response.data)\r\n        );\r\n    }\r\n\r\n    mapUpdateWorkflowResponse(\r\n        response: IResponse<WorkflowContracts.IUpdateWorkflowContract>\r\n    ): WorkflowResponses.UpdateWorkflowResponse {\r\n        return new WorkflowResponses.UpdateWorkflowResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapWorkflow(response.data)\r\n        );\r\n    }\r\n\r\n    mapWorkflowStep(rawStep: WorkflowContracts.IWorkflowStepContract): WorkflowModels.WorkflowStep {\r\n        return new WorkflowModels.WorkflowStep({\r\n            id: rawStep.id,\r\n            name: rawStep.name,\r\n            codename: rawStep.codename,\r\n            transitionsTo: rawStep.transitions_to,\r\n            _raw: rawStep\r\n        });\r\n    }\r\n\r\n    mapWorkflow(raw: WorkflowContracts.IWorkflowContract): WorkflowModels.Workflow {\r\n        return new WorkflowModels.Workflow({\r\n            id: raw.id,\r\n            name: raw.name,\r\n            codename: raw.codename,\r\n            archivedStep: raw.archived_step,\r\n            publishedStep: raw.published_step,\r\n            scheduledStep: raw.scheduled_step,\r\n            scopes: raw.scopes,\r\n            steps: raw.steps,\r\n            _raw: raw\r\n        });\r\n    }\r\n}\r\n\r\nexport const workflowMapper = new WorkflowMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { LanguageContracts } from '../contracts';\r\nimport { LanguageModels } from '../models';\r\nimport { LanguageResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class LanguageMapper extends BaseMapper {\r\n    mapViewLanguageResponse(\r\n        response: IResponse<LanguageContracts.IViewLanguageResponseContract>\r\n    ): LanguageResponses.ViewLanguageResponse {\r\n        const language = this.mapLanguage(response.data);\r\n        return new LanguageResponses.ViewLanguageResponse(super.mapResponseDebug(response), response.data, language);\r\n    }\r\n\r\n    mapModifyLanguageResponse(\r\n        response: IResponse<LanguageContracts.IModifyLanguageResponseContract>\r\n    ): LanguageResponses.ModifyLanguageResponse {\r\n        const language = this.mapLanguage(response.data);\r\n        return new LanguageResponses.ModifyLanguageResponse(super.mapResponseDebug(response), response.data, language);\r\n    }\r\n\r\n    mapAddLanguageResponse(\r\n        response: IResponse<LanguageContracts.IAddLanguageResponseContract>\r\n    ): LanguageResponses.AddLanguageResponse {\r\n        const language = this.mapLanguage(response.data);\r\n        return new LanguageResponses.AddLanguageResponse(super.mapResponseDebug(response), response.data, language);\r\n    }\r\n\r\n    mapListLanguagesResponse(\r\n        response: IResponse<LanguageContracts.IListLanguagesResponseContract>\r\n    ): LanguageResponses.ListLanguagesResponse {\r\n        const languages = response.data.languages.map(m => this.mapLanguage(m));\r\n        return new LanguageResponses.ListLanguagesResponse(super.mapResponseDebug(response), response.data, {\r\n            items: languages,\r\n            pagination: super.mapPagination(response.data.pagination)\r\n        });\r\n    }\r\n\r\n    mapLanguage(rawModel: LanguageContracts.ILanguageModelContract): LanguageModels.LanguageModel {\r\n        return new LanguageModels.LanguageModel({\r\n            codename: rawModel.codename,\r\n            externalId: rawModel.external_id,\r\n            id: rawModel.id,\r\n            isActive: rawModel.is_active,\r\n            isDefault: rawModel.is_default,\r\n            name: rawModel.name,\r\n            fallbackLanguage: rawModel.fallback_language\r\n                ? new LanguageModels.FallbackLanguageModel({\r\n                      id: rawModel.fallback_language.id\r\n                  })\r\n                : undefined,\r\n            _raw: rawModel\r\n        });\r\n    }\r\n}\r\n\r\nexport const languageMapper = new LanguageMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\nimport { WebhookContracts } from '../contracts/webhook-contracts';\r\nimport { WebhookModels } from '../models/webhook/webhook.models';\r\nimport { WebhookResponses } from '../responses';\r\n\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class WebhookMapper extends BaseMapper {\r\n    mapGetWebhookResponse(\r\n        response: IResponse<WebhookContracts.IGetWebhookContract>\r\n    ): WebhookResponses.GetWebhookResponse {\r\n        return new WebhookResponses.GetWebhookResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapWebhook(response.data)\r\n        );\r\n    }\r\n\r\n    mapGetLegacyWebhookResponse(\r\n        response: IResponse<WebhookContracts.IGetLegacyWebhookContract>\r\n    ): WebhookResponses.GetLegacyWebhookResponse {\r\n        return new WebhookResponses.GetLegacyWebhookResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapLegacyWebhook(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddWebhookResponse(\r\n        response: IResponse<WebhookContracts.IGetWebhookContract>\r\n    ): WebhookResponses.AddWebhookResponse {\r\n        return new WebhookResponses.AddWebhookResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapWebhook(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddLegacyWebhookResponse(\r\n        response: IResponse<WebhookContracts.IGetLegacyWebhookContract>\r\n    ): WebhookResponses.AddLegacyWebhookResponse {\r\n        return new WebhookResponses.AddLegacyWebhookResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapLegacyWebhook(response.data)\r\n        );\r\n    }\r\n\r\n    mapWebhooksListResponse(\r\n        response: IResponse<WebhookContracts.IWebhookListContract>\r\n    ): WebhookResponses.WebhookListResponse {\r\n        return new WebhookResponses.WebhookListResponse(super.mapResponseDebug(response), response.data, {\r\n            webhooks: response.data.map((m) => this.mapWebhook(m))\r\n        });\r\n    }\r\n\r\n    mapLegacyWebhooksListResponse(\r\n        response: IResponse<WebhookContracts.ILegacyWebhookListContract>\r\n    ): WebhookResponses.LegacyWebhookListResponse {\r\n        return new WebhookResponses.LegacyWebhookListResponse(super.mapResponseDebug(response), response.data, {\r\n            webhooks: response.data.map((m) => this.mapLegacyWebhook(m))\r\n        });\r\n    }\r\n\r\n    mapLegacyWebhook(rawWebhook: WebhookContracts.ILegacyWebhookContract): WebhookModels.LegacyWebhook {\r\n        return new WebhookModels.LegacyWebhook({\r\n            id: rawWebhook.id,\r\n            name: rawWebhook.name,\r\n            lastModified: rawWebhook.last_modified ? new Date(rawWebhook.last_modified) : undefined,\r\n            healthStatus: rawWebhook.health_status ? rawWebhook.health_status : undefined,\r\n            secret: rawWebhook.secret,\r\n            triggers: {\r\n                deliveryApiContentChanges: rawWebhook.triggers.delivery_api_content_changes.map(\r\n                    (m) =>\r\n                        new WebhookModels.LegacyWebhookDeliveryApiContentChanges({\r\n                            operations: m.operations,\r\n                            type: m.type\r\n                        })\r\n                ),\r\n                workflowStepChanges: rawWebhook.triggers.workflow_step_changes.map(\r\n                    (m) =>\r\n                        new WebhookModels.LegacyWebhookWorkflowStepChanges({\r\n                            transitionsTo: m.transitions_to.map(\r\n                                (s) =>\r\n                                    new WebhookModels.WebhookTransitionsTo({\r\n                                        id: s.id\r\n                                    })\r\n                            ),\r\n                            type: m.type\r\n                        })\r\n                ),\r\n                previewDeliveryContentChanges: rawWebhook.triggers.preview_delivery_api_content_changes.map(\r\n                    (m) =>\r\n                        new WebhookModels.LegacyWebhookPreviewDeliveryApiContentChanges({\r\n                            operations: m.operations,\r\n                            type: m.type\r\n                        })\r\n                ),\r\n                managementApiContentChanges: rawWebhook.triggers.management_api_content_changes.map(\r\n                    (m) =>\r\n                        new WebhookModels.LegacyWebhookManagementApiContentChanges({\r\n                            operations: m.operations,\r\n                            type: m.type\r\n                        })\r\n                )\r\n            },\r\n            url: rawWebhook.url,\r\n            _raw: rawWebhook\r\n        });\r\n    }\r\n\r\n    mapWebhook(rawWebhook: WebhookContracts.IWebhookContract): WebhookModels.Webhook {\r\n        return new WebhookModels.Webhook({\r\n            id: rawWebhook.id,\r\n            name: rawWebhook.name,\r\n            lastModified: rawWebhook.last_modified ? new Date(rawWebhook.last_modified) : undefined,\r\n            healthStatus: rawWebhook.health_status as WebhookModels.WebhookHealthStatus,\r\n            enabled: rawWebhook.enabled,\r\n            headers: rawWebhook.headers,\r\n            secret: rawWebhook.secret,\r\n            deliveryTriggers: {\r\n                slot: rawWebhook.delivery_triggers.slot,\r\n                events: rawWebhook.delivery_triggers.events,\r\n                asset: rawWebhook.delivery_triggers.asset\r\n                    ? new WebhookModels.WebhookDeliveryTriggersAsset({\r\n                          enabled: rawWebhook.delivery_triggers.asset.enabled,\r\n                          actions: rawWebhook.delivery_triggers.asset.actions\r\n                      })\r\n                    : undefined,\r\n                contentType: rawWebhook.delivery_triggers.content_type\r\n                    ? new WebhookModels.WebhookDeliveryTriggersContentType({\r\n                          enabled: rawWebhook.delivery_triggers.content_type.enabled,\r\n                          actions: rawWebhook.delivery_triggers.content_type.actions\r\n                      })\r\n                    : undefined,\r\n                taxonomy: rawWebhook.delivery_triggers.taxonomy\r\n                    ? new WebhookModels.WebhookDeliveryTriggersTaxonomy({\r\n                          enabled: rawWebhook.delivery_triggers.taxonomy.enabled,\r\n                          actions: rawWebhook.delivery_triggers.taxonomy.actions\r\n                      })\r\n                    : undefined,\r\n                language: rawWebhook.delivery_triggers.language\r\n                    ? new WebhookModels.WebhookDeliveryTriggersLanguage({\r\n                          enabled: rawWebhook.delivery_triggers.language.enabled,\r\n                          actions: rawWebhook.delivery_triggers.language.actions\r\n                      })\r\n                    : undefined,\r\n                contentItem: rawWebhook.delivery_triggers.content_item\r\n                    ? new WebhookModels.WebhookDeliveryTriggersContentItem({\r\n                          enabled: rawWebhook.delivery_triggers.content_item.enabled,\r\n                          actions: rawWebhook.delivery_triggers.content_item.actions,\r\n                          filters: rawWebhook.delivery_triggers.content_item.filters\r\n                      })\r\n                    : undefined\r\n            },\r\n            url: rawWebhook.url,\r\n            _raw: rawWebhook\r\n        });\r\n    }\r\n}\r\n\r\nexport const webhookMapper = new WebhookMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { AssetFolderContracts } from '../contracts';\r\nimport { AssetFolderModels } from '../models';\r\nimport { AssetFolderResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class AssetFolderMapper extends BaseMapper {\r\n    mapListAssetFoldersResponse(\r\n        response: IResponse<AssetFolderContracts.IListAssetFoldersResponseContract>\r\n    ): AssetFolderResponses.AssetFoldersListResponse {\r\n        const items = response.data.folders.map(m => this.mapAssetFolder(m));\r\n\r\n        return new AssetFolderResponses.AssetFoldersListResponse(super.mapResponseDebug(response), response.data, {\r\n            last_modified: new Date(response.data.last_modified),\r\n            items: items\r\n        });\r\n    }\r\n\r\n    mapAddAssetFoldersResponse(\r\n        response: IResponse<AssetFolderContracts.IAddAssetFoldersResponseContract>\r\n    ): AssetFolderResponses.AddAssetFoldersResponse {\r\n        const items = response.data.folders.map(m => this.mapAssetFolder(m));\r\n\r\n        return new AssetFolderResponses.AddAssetFoldersResponse(super.mapResponseDebug(response), response.data, {\r\n            last_modified: new Date(response.data.last_modified),\r\n            items: items\r\n        });\r\n    }\r\n\r\n    mapModifyAssetFoldersResponse(\r\n        response: IResponse<AssetFolderContracts.IModifyAssetFoldersDataResponseContract>\r\n    ): AssetFolderResponses.ModifyAssetFoldersResponse {\r\n        const items = response.data.folders.map(m => this.mapAssetFolder(m));\r\n\r\n        return new AssetFolderResponses.ModifyAssetFoldersResponse(super.mapResponseDebug(response), response.data, {\r\n            last_modified: new Date(response.data.last_modified),\r\n            items: items\r\n        });\r\n    }\r\n\r\n    mapAssetFolder(rawFolder: AssetFolderContracts.IAssetFolderContract): AssetFolderModels.AssetFolder {\r\n        return new AssetFolderModels.AssetFolder({\r\n            externalId: rawFolder.external_id,\r\n            id: rawFolder.id,\r\n            name: rawFolder.name,\r\n            folders: rawFolder.folders.map(m => this.mapAssetFolder(m)),\r\n            _raw: rawFolder\r\n        });\r\n    }\r\n}\r\n\r\nexport const assetFolderMapper = new AssetFolderMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { GenericResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class GenericMapper extends BaseMapper {\r\n    mapGenericResponse(response: IResponse<any>): GenericResponses.GenericResponse {\r\n        return new GenericResponses.GenericResponse(super.mapResponseDebug(response), response.data);\r\n    }\r\n}\r\n\r\nexport const genericMapper = new GenericMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { CollectionContracts } from '../contracts';\r\nimport { CollectionModels } from '../models';\r\nimport { CollectionResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class CollectionsMapper extends BaseMapper {\r\n    mapListCollectionsResponse(\r\n        response: IResponse<CollectionContracts.ICollectionListResponseContract>\r\n    ): CollectionResponses.CollectionsListResponse {\r\n        const items = response.data.collections.map((m) => this.mapCollection(m));\r\n\r\n        return new CollectionResponses.CollectionsListResponse(super.mapResponseDebug(response), response.data, {\r\n            lastModified: response.data.last_modified ? new Date(response.data.last_modified) : undefined,\r\n            collections: items\r\n        });\r\n    }\r\n\r\n    mapSetCollectionsResponse(\r\n        response: IResponse<CollectionContracts.ISetCollectionsResponseContract>\r\n    ): CollectionResponses.SetCollectionsResponse {\r\n        const items = response.data.collections.map((m) => this.mapCollection(m));\r\n\r\n        return new CollectionResponses.SetCollectionsResponse(super.mapResponseDebug(response), response.data, {\r\n            lastModified: response.data.last_modified ? new Date(response.data.last_modified) : undefined,\r\n            collections: items\r\n        });\r\n    }\r\n\r\n    mapCollection(rawCollection: CollectionContracts.ICollectionContract): CollectionModels.Collection {\r\n        return new CollectionModels.Collection({\r\n            id: rawCollection.id,\r\n            name: rawCollection.name,\r\n            codename: rawCollection.codename,\r\n            _raw: rawCollection\r\n        });\r\n    }\r\n}\r\n\r\nexport const collectionsMappers = new CollectionsMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { SubscriptionContracts } from '../contracts';\r\nimport { SharedModels, SubscriptionModels } from '../models';\r\nimport { SubscriptionResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class SubscriptionMapper extends BaseMapper {\r\n    mapSubscriptionProjectsListResponse(\r\n        response: IResponse<SubscriptionContracts.IListSubscriptionProjectsResponseContract>\r\n    ): SubscriptionResponses.SubscriptionProjectsListResponse {\r\n        const subscriptionProjects: SubscriptionModels.SubscriptionProject[] = response.data.projects.map((m) =>\r\n            this.mapSubscriptionProject(m)\r\n        );\r\n        const pagination: SharedModels.Pagination = super.mapPagination(response.data.pagination);\r\n\r\n        return new SubscriptionResponses.SubscriptionProjectsListResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                pagination: pagination,\r\n                items: subscriptionProjects\r\n            }\r\n        );\r\n    }\r\n\r\n    mapSubscriptionUsersListResponse(\r\n        response: IResponse<SubscriptionContracts.IListSubscriptionUsersResponseContract>\r\n    ): SubscriptionResponses.SubscriptionUsersListResponse {\r\n        const subscriptionProjects: SubscriptionModels.SubscriptionUser[] = response.data.users.map((m) =>\r\n            this.mapSubscriptionUser(m)\r\n        );\r\n        const pagination: SharedModels.Pagination = super.mapPagination(response.data.pagination);\r\n\r\n        return new SubscriptionResponses.SubscriptionUsersListResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                pagination: pagination,\r\n                items: subscriptionProjects\r\n            }\r\n        );\r\n    }\r\n\r\n    mapViewSubscriptionProjectResponse(\r\n        response: IResponse<SubscriptionContracts.ISubscriptionProjectContract>\r\n    ): SubscriptionResponses.ViewSubscriptionProjectResponse {\r\n        return new SubscriptionResponses.ViewSubscriptionProjectResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapSubscriptionProject(response.data)\r\n        );\r\n    }\r\n\r\n    mapViewSubscriptionUserResponse(\r\n        response: IResponse<SubscriptionContracts.ISubscriptionUserContract>\r\n    ): SubscriptionResponses.ViewSubscriptionUserResponse {\r\n        return new SubscriptionResponses.ViewSubscriptionUserResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapSubscriptionUser(response.data)\r\n        );\r\n    }\r\n\r\n    mapSubscriptionProject(\r\n        raw: SubscriptionContracts.ISubscriptionProjectContract\r\n    ): SubscriptionModels.SubscriptionProject {\r\n        return new SubscriptionModels.SubscriptionProject({\r\n            environments: raw.environments,\r\n            id: raw.id,\r\n            isActive: raw.is_active,\r\n            name: raw.name,\r\n            _raw: raw\r\n        });\r\n    }\r\n\r\n    mapSubscriptionUser(raw: SubscriptionContracts.ISubscriptionUserContract): SubscriptionModels.SubscriptionUser {\r\n        return new SubscriptionModels.SubscriptionUser({\r\n            email: raw.email,\r\n            hasPendingInvitation: raw.has_pending_invitation,\r\n            id: raw.id,\r\n            firstName: raw.first_name,\r\n            lastName: raw.last_name,\r\n            projects: raw.projects.map((rawProject) => {\r\n                const project: SubscriptionModels.ISubscriptionUserProject = {\r\n                    id: rawProject.id,\r\n                    name: rawProject.name,\r\n                    environments: rawProject.environments.map((rawEnvironment) => {\r\n                        const environment: SubscriptionModels.ISubscriptionUserEnvironment = {\r\n                            id: rawEnvironment.id,\r\n                            name: rawEnvironment.name,\r\n                            isUserActive: rawEnvironment.is_user_active,\r\n                            lastActivityAt: rawEnvironment.last_activity_at\r\n                                ? new Date(rawEnvironment.last_activity_at)\r\n                                : undefined,\r\n                            collectionGroups: rawEnvironment.collection_groups.map((rawCollectionGroup) => {\r\n                                const collectionGroup: SubscriptionModels.ISubscriptionCollectionGroup = {\r\n                                    collections: rawCollectionGroup.collections,\r\n                                    roles: rawCollectionGroup.roles.map((rawRole) => {\r\n                                        const role: SubscriptionModels.ISubscriptionUserRole = {\r\n                                            codename: rawRole.codename,\r\n                                            id: rawRole.id,\r\n                                            languages: rawRole.languages.map((rawLanguage) => {\r\n                                                const language: SubscriptionModels.ISubscriptionUserRoleLanguage = {\r\n                                                    codename: rawLanguage.codename,\r\n                                                    id: rawLanguage.id,\r\n                                                    isActive: rawLanguage.is_active,\r\n                                                    name: rawLanguage.name\r\n                                                };\r\n\r\n                                                return language;\r\n                                            }),\r\n                                            name: rawRole.name\r\n                                        };\r\n\r\n                                        return role;\r\n                                    })\r\n                                };\r\n\r\n                                return collectionGroup;\r\n                            })\r\n                        };\r\n                        return environment;\r\n                    })\r\n                };\r\n                return project;\r\n            }),\r\n            _raw: raw\r\n        });\r\n    }\r\n}\r\n\r\nexport const subscriptionMapper = new SubscriptionMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { RoleContracts } from '../contracts';\r\nimport { RoleModels } from '../models';\r\nimport { RoleResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class RoleMapper extends BaseMapper {\r\n    mapRoleListResponse(response: IResponse<RoleContracts.IRoleListResponseContract>): RoleResponses.RoleListResponse {\r\n        const items = response.data.roles.map((m) => this.mapRole(m));\r\n\r\n        return new RoleResponses.RoleListResponse(super.mapResponseDebug(response), response.data, {\r\n            roles: items\r\n        });\r\n    }\r\n\r\n    mapViewRoleResponse(response: IResponse<RoleContracts.IRoleContract>): RoleResponses.ViewRoleResponse {\r\n        return new RoleResponses.ViewRoleResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapRole(response.data)\r\n        );\r\n    }\r\n\r\n    mapRole(rawItem: RoleContracts.IRoleContract): RoleModels.Role {\r\n        return new RoleModels.Role({\r\n            id: rawItem.id,\r\n            name: rawItem.name,\r\n            codename: rawItem.codename,\r\n            _raw: rawItem\r\n        });\r\n    }\r\n}\r\n\r\nexport const roleMapper = new RoleMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { ProjectUserContracts } from '../contracts';\r\nimport { ProjectUserModels } from '../models';\r\nimport { ProjectUsersResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class ProjectUserMapper extends BaseMapper {\r\n    mapInviteUserResponse(\r\n        response: IResponse<ProjectUserContracts.IInviteUserResponseContract>\r\n    ): ProjectUsersResponses.InviteUserResponse {\r\n        return new ProjectUsersResponses.InviteUserResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapProjectUser(response.data)\r\n        );\r\n    }\r\n\r\n    mapChangeUserRolesResponse(\r\n        response: IResponse<ProjectUserContracts.IChangeUserRolesResponseContract>\r\n    ): ProjectUsersResponses.ChangeUserRolesResponse {\r\n        return new ProjectUsersResponses.ChangeUserRolesResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapProjectUser(response.data)\r\n        );\r\n    }\r\n\r\n    mapCollectionGroup(\r\n        rawItem: ProjectUserContracts.IProjectUserCollectionGroupContract\r\n    ): ProjectUserModels.CollectionGroup {\r\n        return new ProjectUserModels.CollectionGroup({\r\n            collections: rawItem.collections,\r\n            roles: rawItem.roles,\r\n            _raw: rawItem\r\n        });\r\n    }\r\n\r\n    mapProjectUser(rawItem: ProjectUserContracts.IUserContract): ProjectUserModels.ProjectUser {\r\n        return new ProjectUserModels.ProjectUser({\r\n            userId: rawItem.user_id,\r\n            collectionGroups: rawItem.collection_groups.map((m) => this.mapCollectionGroup(m)),\r\n            _raw: rawItem\r\n        });\r\n    }\r\n}\r\n\r\nexport const projectUserMapper = new ProjectUserMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { AssetRenditionContracts } from '../contracts';\r\nimport { AssetRenditionModels } from '../models';\r\nimport { AssetRenditionResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class AssetRenditionMapper extends BaseMapper {\r\n    mapListAssetRenditionsResponse(\r\n        response: IResponse<AssetRenditionContracts.IListRenditionResponseContract>\r\n    ): AssetRenditionResponses.AssetRenditionsListResponse {\r\n        return new AssetRenditionResponses.AssetRenditionsListResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            {\r\n                items: response.data.asset_renditions.map((m) => this.mapAssetRendition(m)),\r\n                pagination: super.mapPagination(response.data.pagination)\r\n            }\r\n        );\r\n    }\r\n\r\n    mapViewAssetRenditionResponse(\r\n        response: IResponse<AssetRenditionContracts.IViewRenditionResponseContract>\r\n    ): AssetRenditionResponses.ViewAssetRenditionResponse {\r\n        return new AssetRenditionResponses.ViewAssetRenditionResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAssetRendition(response.data)\r\n        );\r\n    }\r\n\r\n    mapModifyAssetRenditionResponse(\r\n        response: IResponse<AssetRenditionContracts.IModifyAssetRenditionResponseContract>\r\n    ): AssetRenditionResponses.ModifyAssetRenditionResponse {\r\n        return new AssetRenditionResponses.ModifyAssetRenditionResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAssetRendition(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddAssetRenditionResponse(\r\n        response: IResponse<AssetRenditionContracts.IAddAssetRenditionResponseContract>\r\n    ): AssetRenditionResponses.AddAssetRenditionResponse {\r\n        return new AssetRenditionResponses.AddAssetRenditionResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapAssetRendition(response.data)\r\n        );\r\n    }\r\n\r\n    mapAssetRendition(raw: AssetRenditionContracts.IAssetRenditionContract): AssetRenditionModels.AssetRendition {\r\n        return new AssetRenditionModels.AssetRendition({\r\n            assetId: raw.asset_id,\r\n            externalId: raw.external_id,\r\n            lastModified: new Date(raw.last_modified),\r\n            renditionId: raw.rendition_id,\r\n            transformation: {\r\n                fit: raw.transformation.fit,\r\n                height: raw.transformation.height,\r\n                mode: raw.transformation.mode,\r\n                width: raw.transformation.width,\r\n                x: raw.transformation.x,\r\n                y: raw.transformation.y,\r\n                customHeight: raw.transformation.custom_height,\r\n                customWidth: raw.transformation.custom_width\r\n            },\r\n            _raw: raw\r\n        });\r\n    }\r\n}\r\n\r\nexport const assetRenditionMapper = new AssetRenditionMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { SpaceContracts } from '../contracts';\r\nimport { SpaceModels } from '../models';\r\nimport { SpaceResponses } from '../responses';\r\nimport { BaseMapper } from './base-mapper';\r\n\r\nexport class SpacesMapper extends BaseMapper {\r\n    mapListingSpacesResponse(\r\n        response: IResponse<SpaceContracts.ISpacesListingResponseContract>\r\n    ): SpaceResponses.SpacesListResponse {\r\n        const items = response.data.map((m) => this.mapSpace(m));\r\n\r\n        return new SpaceResponses.SpacesListResponse(super.mapResponseDebug(response), response.data, items);\r\n    }\r\n\r\n    mapViewSpaceResponse(response: IResponse<SpaceContracts.ISpaceContract>): SpaceResponses.ViewSpaceResponse {\r\n        return new SpaceResponses.ViewSpaceResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapSpace(response.data)\r\n        );\r\n    }\r\n\r\n    mapAddSpaceResponse(\r\n        response: IResponse<SpaceContracts.IAddSpaceResponseContract>\r\n    ): SpaceResponses.AddSpaceResponse {\r\n        return new SpaceResponses.AddSpaceResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapSpace(response.data)\r\n        );\r\n    }\r\n\r\n    mapModifySpaceResponse(\r\n        response: IResponse<SpaceContracts.IModifySpaceResponseContract>\r\n    ): SpaceResponses.ModifySpaceResponse {\r\n        return new SpaceResponses.ModifySpaceResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapSpace(response.data)\r\n        );\r\n    }\r\n\r\n    mapSpace(rawItem: SpaceContracts.ISpaceContract): SpaceModels.Space {\r\n        return new SpaceModels.Space({\r\n            codename: rawItem.codename,\r\n            id: rawItem.id,\r\n            name: rawItem.name,\r\n            webSpotlightRootItem: rawItem.web_spotlight_root_item,\r\n            collections: rawItem.collections,\r\n            _raw: rawItem\r\n        });\r\n    }\r\n}\r\n\r\nexport const spacesMapper = new SpacesMapper();\r\n", "import { IResponse } from '@kontent-ai/core-sdk';\r\n\r\nimport { PreviewContracts } from '../contracts';\r\nimport { PreviewModels } from '../models';\r\nimport { BaseMapper } from './base-mapper';\r\nimport { PreviewResponses } from '../responses/preview/preview-responses';\r\n\r\nexport class PreviewMapper extends BaseMapper {\r\n    mapPreviewConfigurationResponse(\r\n        response: IResponse<PreviewContracts.IPreviewConfigurationContract>\r\n    ): PreviewResponses.PreviewConfigurationResponse {\r\n        return new PreviewResponses.PreviewConfigurationResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapPreviewConfiguration(response.data)\r\n        );\r\n    }\r\n\r\n    mapModifyConfigurationResponse(\r\n        response: IResponse<PreviewContracts.IPreviewConfigurationContract>\r\n    ): PreviewResponses.ModifyConfigurationResponse {\r\n        return new PreviewResponses.ModifyConfigurationResponse(\r\n            super.mapResponseDebug(response),\r\n            response.data,\r\n            this.mapPreviewConfiguration(response.data)\r\n        );\r\n    }\r\n\r\n    private mapPreviewConfiguration(\r\n        rawItem: PreviewContracts.IPreviewConfigurationContract\r\n    ): PreviewModels.PreviewConfiguration {\r\n        return new PreviewModels.PreviewConfiguration({\r\n            _raw: rawItem,\r\n            previewUrlPatterns: rawItem.preview_url_patterns.map((urlPatternsContract) => {\r\n                const urlPatterns: PreviewModels.IPreviewUrlPatterns = {\r\n                    contentType: urlPatternsContract.content_type,\r\n                    urlPatterns: urlPatternsContract.url_patterns.map((urlPatternContract) => {\r\n                        const urlPattern: PreviewModels.IPreviewUrlPattern = {\r\n                            space: urlPatternContract.space,\r\n                            urlPattern: urlPatternContract.url_pattern\r\n                        };\r\n\r\n                        return urlPattern;\r\n                    })\r\n                };\r\n\r\n                return urlPatterns;\r\n            }),\r\n            spaceDomains: rawItem.space_domains\r\n        });\r\n    }\r\n}\r\n\r\nexport const previewMapper = new PreviewMapper();\r\n", "\nimport { ISDKInfo } from '@kontent-ai/core-sdk';\nexport const sdkInfo: ISDKInfo = {\n    host: 'npmjs.com',\n    version: '5.9.0',\n    name: '@kontent-ai/management-sdk'\n};\n", "import {\r\n    headerHelper,\r\n    IResponse,\r\n    IHeader,\r\n    IHttpService,\r\n    IQueryParameter,\r\n    ISDKInfo,\r\n    urlHelper\r\n} from '@kontent-ai/core-sdk';\r\nimport { AxiosError } from 'axios';\r\n\r\nimport { IManagementClientConfig } from '../config/imanagement-client-config.interface';\r\nimport { SharedContracts } from '../contracts';\r\nimport { IContentManagementInternalQueryConfig, IContentManagementQueryConfig, SharedModels } from '../models';\r\nimport { getType } from 'mime';\r\n\r\nexport abstract class BaseManagementQueryService<TCancelToken> {\r\n    /**\r\n     * Default base url for content management API\r\n     */\r\n    private readonly defaultBaseCMUrl: string = 'https://manage.kontent.ai/v2';\r\n\r\n    constructor(\r\n        protected readonly config: IManagementClientConfig,\r\n        protected readonly httpService: IHttpService<TCancelToken>,\r\n        protected readonly sdkInfo: ISDKInfo\r\n    ) {}\r\n\r\n    /**\r\n     * Gets url based on the action, query configuration and options (parameters)\r\n     * @param action Action (= url part) that will be hit\r\n     * @param options Query options\r\n     * @param addSlash Indicates if slash is added to query\r\n     */\r\n    getFullUrl(action: string, options?: IQueryParameter[], addSlash: boolean = true): string {\r\n        return urlHelper.addOptionsToUrl(this.getBaseUrl() + (addSlash ? '/' : '') + action, options);\r\n    }\r\n\r\n    /**\r\n     * Gets proper set of headers for given request.\r\n     * @param config Query config\r\n     */\r\n    getHeaders(config: IContentManagementQueryConfig): IHeader[] {\r\n        const headers: IHeader[] = [\r\n            // sdk tracking header\r\n            headerHelper.getSdkIdHeader({\r\n                host: this.sdkInfo.host,\r\n                name: this.sdkInfo.name,\r\n                version: this.sdkInfo.version\r\n            }),\r\n            // add authorization header\r\n            this.getAuthorizationHeader()\r\n        ];\r\n\r\n        // add query headers\r\n        headers.push(...config.headers);\r\n\r\n        return headers;\r\n    }\r\n\r\n    /**\r\n     * Http PATCH response\r\n     * @param url Url of request\r\n     * @param config Query configuration\r\n     */\r\n    protected async patchResponseAsync<TRawData>(\r\n        url: string,\r\n        body: any,\r\n        internalConfig: IContentManagementInternalQueryConfig,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<IResponse<TRawData>> {\r\n        try {\r\n            return await this.httpService.patchAsync<TRawData>(\r\n                {\r\n                    url: url,\r\n                    body: body\r\n                },\r\n                {\r\n                    cancelToken: config.cancelTokenRequest,\r\n                    retryStrategy: this.config.retryStrategy,\r\n                    headers: this.getHeaders(config),\r\n                    responseType:\r\n                        internalConfig && internalConfig.responseType ? internalConfig.responseType : undefined\r\n                }\r\n            );\r\n        } catch (error) {\r\n            throw this.mapContentManagementError(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Http GET response\r\n     * @param url Url of request\r\n     * @param config Query configuration\r\n     */\r\n    protected async getResponseAsync<TRawData>(\r\n        url: string,\r\n        internalConfig: IContentManagementInternalQueryConfig,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<IResponse<TRawData>> {\r\n        try {\r\n            return await this.httpService.getAsync<TRawData>(\r\n                {\r\n                    url: url\r\n                },\r\n                {\r\n                    cancelToken: config.cancelTokenRequest,\r\n                    retryStrategy: this.config.retryStrategy,\r\n                    headers: this.getHeaders(config),\r\n                    responseType:\r\n                        internalConfig && internalConfig.responseType ? internalConfig.responseType : undefined\r\n                }\r\n            );\r\n        } catch (err) {\r\n            throw this.mapContentManagementError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Http POST response\r\n     * @param url Url of request\r\n     * @param body Body of the request (names and values)\r\n     * @param config Query configuration\r\n     */\r\n    protected async postResponseAsync<TRawData>(\r\n        url: string,\r\n        body: any,\r\n        internalConfig: IContentManagementInternalQueryConfig,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<IResponse<TRawData>> {\r\n        try {\r\n            return await this.httpService.postAsync<TRawData>(\r\n                {\r\n                    url: url,\r\n                    body: body\r\n                },\r\n                {\r\n                    cancelToken: config.cancelTokenRequest,\r\n                    retryStrategy: this.config.retryStrategy,\r\n                    headers: this.getHeaders(config),\r\n                    responseType:\r\n                        internalConfig && internalConfig.responseType ? internalConfig.responseType : undefined\r\n                }\r\n            );\r\n        } catch (err) {\r\n            throw this.mapContentManagementError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Http PUT response\r\n     * @param url Url of request\r\n     * @param body Body of the request (names and values)\r\n     * @param config Query configuration\r\n     */\r\n    protected async putResponseAsync<TRawData>(\r\n        url: string,\r\n        body: any,\r\n        internalConfig: IContentManagementInternalQueryConfig,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<IResponse<TRawData>> {\r\n        try {\r\n            return await this.httpService.putAsync<TRawData>(\r\n                {\r\n                    url: url,\r\n                    body: body\r\n                },\r\n                {\r\n                    cancelToken: config.cancelTokenRequest,\r\n                    retryStrategy: this.config.retryStrategy,\r\n                    headers: this.getHeaders(config),\r\n                    responseType:\r\n                        internalConfig && internalConfig.responseType ? internalConfig.responseType : undefined\r\n                }\r\n            );\r\n        } catch (err) {\r\n            throw this.mapContentManagementError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Http Delete response\r\n     * @param url Url of request\r\n     * @param body Body of the request (names and values)\r\n     * @param config Query configuration\r\n     */\r\n    protected async deleteResponseAsync<TRawData>(\r\n        url: string,\r\n        internalConfig: IContentManagementInternalQueryConfig,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<IResponse<TRawData>> {\r\n        try {\r\n            return await this.httpService.deleteAsync<TRawData>(\r\n                {\r\n                    url: url\r\n                },\r\n                {\r\n                    cancelToken: config.cancelTokenRequest,\r\n                    retryStrategy: this.config.retryStrategy,\r\n                    headers: this.getHeaders(config),\r\n                    responseType:\r\n                        internalConfig && internalConfig.responseType ? internalConfig.responseType : undefined\r\n                }\r\n            );\r\n        } catch (err) {\r\n            throw this.mapContentManagementError(err);\r\n        }\r\n    }\r\n\r\n    protected async getBinaryDataFromUrlAsync(url: string): Promise<ArrayBuffer> {\r\n        // temp fix for repository not validating url\r\n        url = url.replace('#', '%23');\r\n\r\n        const response = await this.httpService.getAsync<ArrayBuffer>(\r\n            {\r\n                url: url\r\n            },\r\n            {\r\n                responseType: 'arraybuffer'\r\n            }\r\n        );\r\n\r\n        return response.data;\r\n    }\r\n\r\n    protected getMimeTypeFromFilename(filename: string): string | null {\r\n        return getType(filename);\r\n    }\r\n\r\n    private mapContentManagementError(error: any): SharedModels.ContentManagementBaseKontentError | any {\r\n        let axiosError: AxiosError | undefined;\r\n\r\n        if (error.error) {\r\n            axiosError = error.error;\r\n        } else {\r\n            axiosError = error;\r\n        }\r\n\r\n        if (!axiosError || !axiosError.isAxiosError) {\r\n            return error;\r\n        }\r\n\r\n        const cmError = axiosError.response?.data as SharedContracts.IContentManagementError;\r\n\r\n        if (cmError?.error_code || cmError?.request_id) {\r\n            const validationErrors: SharedModels.ValidationError[] = [];\r\n\r\n            if (cmError.validation_errors) {\r\n                validationErrors.push(\r\n                    ...cmError.validation_errors.map(\r\n                        (validationErrorRaw) =>\r\n                            new SharedModels.ValidationError({\r\n                                message: validationErrorRaw.message\r\n                            })\r\n                    )\r\n                );\r\n            }\r\n\r\n            return new SharedModels.ContentManagementBaseKontentError({\r\n                errorCode: cmError.error_code,\r\n                message: cmError.message,\r\n                originalError: error,\r\n                requestId: cmError.request_id,\r\n                validationErrors: validationErrors\r\n            });\r\n        }\r\n\r\n        return error;\r\n\r\n    }\r\n\r\n    /**\r\n     * Gets authorization header\r\n     */\r\n    private getAuthorizationHeader(): IHeader {\r\n        const key: string = this.config.apiKey;\r\n\r\n        if (!key) {\r\n            throw Error(`Cannot get authorization header for query type because API Key is undefined`);\r\n        }\r\n\r\n        return {\r\n            header: 'authorization',\r\n            value: `bearer ${key}`\r\n        };\r\n    }\r\n    /**\r\n     * Gets base URL of the request including the project Id\r\n     */\r\n    private getBaseUrl(): string {\r\n        if (this.config.baseUrl) {\r\n            return this.config.baseUrl;\r\n        }\r\n        return this.defaultBaseCMUrl;\r\n    }\r\n}\r\n", "import { IHttpService, ISDKInfo } from '@kontent-ai/core-sdk';\r\n\r\nimport { IManagementClientConfig } from '../config/imanagement-client-config.interface';\r\nimport {\r\n    AssetContracts,\r\n    AssetFolderContracts,\r\n    AssetRenditionContracts,\r\n    CollectionContracts,\r\n    ContentItemContracts,\r\n    ContentTypeContracts,\r\n    ContentTypeSnippetContracts,\r\n    EnvironmentContracts,\r\n    LanguageContracts,\r\n    LanguageVariantContracts,\r\n    ProjectUserContracts,\r\n    RoleContracts,\r\n    SubscriptionContracts,\r\n    SpaceContracts,\r\n    TaxonomyContracts,\r\n    WebhookContracts,\r\n    WorkflowContracts,\r\n    PreviewContracts\r\n} from '../contracts';\r\nimport {\r\n    assetFolderMapper,\r\n    assetsMapper,\r\n    contentItemsMapper,\r\n    contentTypeMapper,\r\n    contentTypeSnippetMapper,\r\n    languageMapper,\r\n    languageVariantMapper,\r\n    environmentMapper,\r\n    taxonomyMappper,\r\n    workflowMapper,\r\n    genericMapper,\r\n    collectionsMappers,\r\n    subscriptionMapper,\r\n    roleMapper,\r\n    projectUserMapper,\r\n    assetRenditionMapper,\r\n    spacesMapper,\r\n    previewMapper\r\n} from '../mappers';\r\nimport { webhookMapper } from '../mappers/webhook-mapper';\r\nimport {\r\n    AssetModels,\r\n    ContentTypeModels,\r\n    ContentTypeSnippetModels,\r\n    IContentManagementQueryConfig,\r\n    LanguageModels,\r\n    TaxonomyModels,\r\n    WebhookModels,\r\n    WorkflowModels,\r\n    AssetFolderModels,\r\n    IContentManagementListQueryConfig,\r\n    CollectionModels,\r\n    ProjectUserModels,\r\n    AssetRenditionModels,\r\n    SpaceModels,\r\n    PreviewModels\r\n} from '../models';\r\nimport {\r\n    AssetFolderResponses,\r\n    AssetResponses,\r\n    BaseResponses,\r\n    ContentItemResponses,\r\n    ContentTypeResponses,\r\n    ContentTypeSnippetResponses,\r\n    LanguageResponses,\r\n    LanguageVariantResponses,\r\n    TaxonomyResponses,\r\n    WebhookResponses,\r\n    WorkflowResponses,\r\n    GenericResponses,\r\n    CollectionResponses,\r\n    SubscriptionResponses,\r\n    RoleResponses,\r\n    ProjectUsersResponses,\r\n    AssetRenditionResponses,\r\n    SpaceResponses,\r\n    PreviewResponses\r\n} from '../responses';\r\nimport { BaseManagementQueryService } from './base-management-service.class';\r\nimport { EnvironmentResponses } from '../responses/environments/environment-responses';\r\nimport { EnvironmentModels } from '../models/environments/environment.models';\r\n\r\nexport class ManagementQueryService extends BaseManagementQueryService<any> {\r\n    constructor(\r\n        protected config: IManagementClientConfig,\r\n        protected httpService: IHttpService<any>,\r\n        protected sdkInfo: ISDKInfo\r\n    ) {\r\n        super(config, httpService, sdkInfo);\r\n    }\r\n\r\n    async genericPostResponseAsync(\r\n        url: string,\r\n        data: any,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<GenericResponses.GenericResponse> {\r\n        return genericMapper.mapGenericResponse(await super.postResponseAsync<void>(url, data, {}, config));\r\n    }\r\n\r\n    async genericPatchResponseAsync(\r\n        url: string,\r\n        data: any,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<GenericResponses.GenericResponse> {\r\n        return genericMapper.mapGenericResponse(await super.patchResponseAsync<void>(url, data, {}, config));\r\n    }\r\n\r\n    async genericDeleteResponseAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<GenericResponses.GenericResponse> {\r\n        return genericMapper.mapGenericResponse(await super.deleteResponseAsync<void>(url, {}, config));\r\n    }\r\n\r\n    async genericGetResponseAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<GenericResponses.GenericResponse> {\r\n        return genericMapper.mapGenericResponse(await super.getResponseAsync<void>(url, {}, config));\r\n    }\r\n\r\n    async genericPutResponseAsync(\r\n        url: string,\r\n        data: any,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<GenericResponses.GenericResponse> {\r\n        return genericMapper.mapGenericResponse(await super.putResponseAsync<void>(url, data, {}, config));\r\n    }\r\n\r\n    async getListAllResponseAsync<\r\n        TResponse extends BaseResponses.IContentManagementListResponse,\r\n        TAllResponse extends BaseResponses.IContentManagementListAllResponse\r\n    >(data: {\r\n        getResponse: (xContinuationToken?: string) => Promise<TResponse>;\r\n        allResponseFactory: (items: any[], responses: TResponse[]) => TAllResponse;\r\n        listQueryConfig: IContentManagementListQueryConfig<TResponse> | undefined;\r\n    }): Promise<TAllResponse> {\r\n        const responses = await this.getListAllResponseInternalAsync({\r\n            resolvedResponses: [],\r\n            getResponse: data.getResponse,\r\n            xContinuationToken: undefined,\r\n            listQueryConfig: data.listQueryConfig\r\n        });\r\n\r\n        return data.allResponseFactory(\r\n            responses.reduce((prev: any[], current) => {\r\n                prev.push(...current.data.items);\r\n                return prev;\r\n            }, []),\r\n            responses\r\n        );\r\n    }\r\n\r\n    async publishLanguageVariantAsync(\r\n        url: string,\r\n        data: WorkflowModels.IPublishLanguageVariantData | undefined,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return workflowMapper.mapEmptyResponse(await this.putResponseAsync<void>(url, data, {}, config));\r\n    }\r\n\r\n    async createNewVersionOfLanguageVariantAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return workflowMapper.mapEmptyResponse(await this.putResponseAsync<void>(url, undefined, {}, config));\r\n    }\r\n\r\n    async unpublishLanguageVariantAsync(\r\n        url: string,\r\n        data: WorkflowModels.IUnpublishLanguageVarianthData | undefined,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return workflowMapper.mapEmptyResponse(await this.putResponseAsync<void>(url, data, {}, config));\r\n    }\r\n\r\n    async cancelScheduledPublishingOfLanguageVariantAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return workflowMapper.mapEmptyResponse(await this.putResponseAsync<void>(url, undefined, {}, config));\r\n    }\r\n\r\n    async cancelScheduledUnpublishingOfLanguageVariantAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return workflowMapper.mapEmptyResponse(await this.putResponseAsync<void>(url, undefined, {}, config));\r\n    }\r\n\r\n    async changeWorkflowStepOfLanguageVariantAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return workflowMapper.mapEmptyResponse(await this.putResponseAsync<void>(url, undefined, {}, config));\r\n    }\r\n\r\n    async changeWorkflowOfLanguageVariantAsync(\r\n        url: string,\r\n        data: WorkflowModels.IChangeWorkflowOfLanguageVariantData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return workflowMapper.mapEmptyResponse(await this.putResponseAsync<void>(url, data, {}, config));\r\n    }\r\n\r\n    async listWorkflowStepsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<WorkflowResponses.ListWorkflowStepsResponse> {\r\n        return workflowMapper.mapListWorkflowStepsResponse(\r\n            await this.getResponseAsync<WorkflowContracts.IListWorkflowStepsResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listWorkflowsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<WorkflowResponses.ListWorkflowsResponse> {\r\n        return workflowMapper.mapListWorkflowsResponse(\r\n            await this.getResponseAsync<WorkflowContracts.IListWorkflowsResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async addWorkflowAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: WorkflowModels.IAddWorkflowData\r\n    ): Promise<WorkflowResponses.AddWorkflowResponse> {\r\n        return workflowMapper.mapAddWorkflowResponse(\r\n            await this.postResponseAsync<WorkflowContracts.IAddWorkflowContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async updateWorkflowAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: WorkflowModels.IUpdateWorkflowData\r\n    ): Promise<WorkflowResponses.AddWorkflowResponse> {\r\n        return workflowMapper.mapUpdateWorkflowResponse(\r\n            await this.putResponseAsync<WorkflowContracts.IUpdateWorkflowContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteWorkflowAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return webhookMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<BaseResponses.EmptyContentManagementResponse>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewContentTypeSnippetAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentTypeSnippetResponses.ViewContentTypeSnippetResponse> {\r\n        return contentTypeSnippetMapper.mapViewContentTypeSnippetResponse(\r\n            await this.getResponseAsync<ContentTypeSnippetContracts.IViewContentTypeSnippetResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async deleteContentTypeSnippetAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return contentTypeSnippetMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<ContentTypeSnippetContracts.IDeleteContentTypeSnippetResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async addContentTypeSnippetAsync(\r\n        url: string,\r\n        data: ContentTypeSnippetModels.IAddContentTypeSnippetData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentTypeSnippetResponses.AddContentTypeSnippetResponse> {\r\n        return contentTypeSnippetMapper.mapAddContentTypeSnippetResponse(\r\n            await this.postResponseAsync<ContentTypeSnippetContracts.IAddContentTypeSnippetResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async listContentTypeSnippetsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentTypeSnippetResponses.ContentTypeSnippetListResponse> {\r\n        return contentTypeSnippetMapper.mapListingResponse(\r\n            await this.getResponseAsync<ContentTypeSnippetContracts.IContentTypeSnippetListResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async environmentInformationAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<EnvironmentResponses.EnvironmentInformationResponse> {\r\n        return environmentMapper.mapEnvironmentInformationResponse(\r\n            await this.getResponseAsync<EnvironmentContracts.IEnvironmentInformationResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listEnvironmentValidationIssuesAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<EnvironmentResponses.EnvironmentValidationIssuesListResponse> {\r\n        return environmentMapper.mapProjectValidationIssuesListResponse(\r\n            await this.getResponseAsync<EnvironmentContracts.IEnvironmentValidationListResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async startEnvironmentValidationAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<EnvironmentResponses.StartEnvironmentValidationResponse> {\r\n        return environmentMapper.mapStartEnvironmentValidationResponse(\r\n            await this.postResponseAsync<EnvironmentContracts.IStartEnvironmentValidationResponseContract>(\r\n                url,\r\n                {},\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async checkEnvironmentValidationAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<EnvironmentResponses.CheckEnvironmentValidationResponse> {\r\n        return environmentMapper.mapCheckEnvironmentValidationResponse(\r\n            await this.getResponseAsync<EnvironmentContracts.ICheckEnvironmentValidationResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async addContentTypeAsync(\r\n        url: string,\r\n        data: ContentTypeModels.IAddContentTypeData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentTypeResponses.AddContentTypeResponse> {\r\n        return contentTypeMapper.mapAddContentTypeResponse(\r\n            await this.postResponseAsync<ContentTypeContracts.IAddContentTypeResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteContentTypeAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return contentTypeMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<ContentTypeContracts.IDeleteContentTypeResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifyContentTypeAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: ContentTypeModels.IModifyContentTypeData[]\r\n    ): Promise<ContentTypeResponses.ModifyContentTypeResponse> {\r\n        return contentTypeMapper.mapModifyContentTypeResponse(\r\n            await this.patchResponseAsync<ContentTypeContracts.IModifyContentTypeResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async modifyTaxonomyAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: TaxonomyModels.IModifyTaxonomyData[]\r\n    ): Promise<TaxonomyResponses.ModifyTaxonomyResponse> {\r\n        return taxonomyMappper.mapModifyTaxonomyResponse(\r\n            await this.patchResponseAsync<TaxonomyContracts.IModifyTaxonomyResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifyContentTypeSnippetAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: ContentTypeSnippetModels.IModifyContentTypeSnippetData[]\r\n    ): Promise<ContentTypeSnippetResponses.ModifyContentTypeSnippetResponse> {\r\n        return contentTypeSnippetMapper.mapModifyContentTypeSnippetResponse(\r\n            await this.patchResponseAsync<ContentTypeContracts.IModifyContentTypeResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async viewContentTypeAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentTypeResponses.ViewContentTypeResponse> {\r\n        return contentTypeMapper.mapViewContentTypeResponse(\r\n            await this.getResponseAsync<ContentTypeContracts.IViewContentTypeResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listContentTypesAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentTypeResponses.ContentTypeListResponse> {\r\n        return contentTypeMapper.mapListingResponse(\r\n            await this.getResponseAsync<ContentTypeContracts.IContentTypeListResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listAssetRenditionsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetRenditionResponses.AssetRenditionsListResponse> {\r\n        return assetRenditionMapper.mapListAssetRenditionsResponse(\r\n            await this.getResponseAsync<AssetRenditionContracts.IListRenditionResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewAssetRenditionAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetRenditionResponses.ViewAssetRenditionResponse> {\r\n        return assetRenditionMapper.mapViewAssetRenditionResponse(\r\n            await this.getResponseAsync<AssetRenditionContracts.IViewRenditionResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async addAssetRenditionAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: AssetRenditionModels.IAddAssetRenditionData\r\n    ): Promise<AssetRenditionResponses.AddAssetRenditionResponse> {\r\n        return assetRenditionMapper.mapAddAssetRenditionResponse(\r\n            await this.postResponseAsync<AssetRenditionContracts.IAddAssetRenditionResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async modifyAssetRenditionAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: AssetRenditionModels.IModifyAssetRenditionData\r\n    ): Promise<AssetRenditionResponses.AddAssetRenditionResponse> {\r\n        return assetRenditionMapper.mapModifyAssetRenditionResponse(\r\n            await this.putResponseAsync<AssetRenditionContracts.IModifyAssetRenditionResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async addTaxonomyAsync(\r\n        url: string,\r\n        data: TaxonomyModels.IAddTaxonomyRequestModel,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<TaxonomyResponses.AddTaxonomyResponse> {\r\n        return taxonomyMappper.mapAddTaxonomyResponse(\r\n            await this.postResponseAsync<TaxonomyContracts.IAddTaxonomyResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteTaxonomyAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return taxonomyMappper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<TaxonomyContracts.IDeleteTaxonomyResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async getTaxonomyAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<TaxonomyResponses.GetTaxonomyResponse> {\r\n        return taxonomyMappper.mapGetTaxonomyResponse(\r\n            await this.getResponseAsync<TaxonomyContracts.IGetTaxonomyResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listTaxonomiesAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<TaxonomyResponses.TaxonomyListResponse> {\r\n        return taxonomyMappper.mapListingTaxonomysResponse(\r\n            await this.getResponseAsync<TaxonomyContracts.IListTaxonomyResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteAssetAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return assetsMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<AssetContracts.IDeleteAssetResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async upsertAssetAsync(\r\n        url: string,\r\n        data: AssetModels.IUpsertAssetRequestData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetResponses.UpdateAssetResponse> {\r\n        return assetsMapper.mapUpsertAssetResponse(\r\n            await this.putResponseAsync<AssetContracts.IUpsertAssetResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async addAssetAsync(\r\n        url: string,\r\n        data: AssetModels.IAddAssetRequestData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetResponses.AddAssetResponse> {\r\n        return assetsMapper.mapAddAssetResponse(\r\n            await this.postResponseAsync<AssetContracts.IAddAssetResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async listSubscriptionProjectsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SubscriptionResponses.SubscriptionProjectsListResponse> {\r\n        return subscriptionMapper.mapSubscriptionProjectsListResponse(\r\n            await this.getResponseAsync<SubscriptionContracts.IListSubscriptionProjectsResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async litSubscriptionUsersAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SubscriptionResponses.SubscriptionUsersListResponse> {\r\n        return subscriptionMapper.mapSubscriptionUsersListResponse(\r\n            await this.getResponseAsync<SubscriptionContracts.IListSubscriptionUsersResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewSubscriptionProjectAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SubscriptionResponses.ViewSubscriptionProjectResponse> {\r\n        return subscriptionMapper.mapViewSubscriptionProjectResponse(\r\n            await this.getResponseAsync<SubscriptionContracts.ISubscriptionProjectContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewSubscriptionUserAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SubscriptionResponses.ViewSubscriptionUserResponse> {\r\n        return subscriptionMapper.mapViewSubscriptionUserResponse(\r\n            await this.getResponseAsync<SubscriptionContracts.ISubscriptionUserContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async activateUserInAllProjectsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return contentItemsMapper.mapEmptyResponse(\r\n            await this.putResponseAsync<ContentItemContracts.IDeleteContentItemResponseContract>(url, {}, {}, config)\r\n        );\r\n    }\r\n\r\n    async deactivateUserInAllProjectsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return contentItemsMapper.mapEmptyResponse(\r\n            await this.putResponseAsync<ContentItemContracts.IDeleteContentItemResponseContract>(url, {}, {}, config)\r\n        );\r\n    }\r\n\r\n    async uploadAssetFromUrlAsync(\r\n        uploadBinaryFileUrl: string,\r\n        addAssetUrl: string,\r\n        data: AssetModels.IUploadAssetFromUrlRequestData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetResponses.AddAssetResponse> {\r\n        // get binary data from url\r\n        const binaryData = await super.getBinaryDataFromUrlAsync(data.fileUrl);\r\n\r\n        const mimeType = super.getMimeTypeFromFilename(data.binaryFile.filename);\r\n\r\n        if (!mimeType) {\r\n            throw Error(\r\n                `Could not get MIME type for filename '${data.binaryFile.filename}'. Please include extension in your filename (e.g. myfile.png)`\r\n            );\r\n        }\r\n\r\n        // config needs to be cloned as otherwise it would be mutated with invalid\r\n        // headers in uploadBinaryFile method\r\n        const configForUploadBinaryFile = JSON.parse(JSON.stringify(config));\r\n\r\n        // upload binary file\r\n        const uploadedBinaryFileResponse = await this.uploadBinaryFileAsync(\r\n            uploadBinaryFileUrl,\r\n            {\r\n                binaryData: binaryData,\r\n                contentType: mimeType,\r\n                filename: data.binaryFile.filename,\r\n                contentLength: binaryData.byteLength\r\n            },\r\n            configForUploadBinaryFile\r\n        );\r\n\r\n        // creta asset & assign it to binary file\r\n        const assetResponse = await this.addAssetAsync(\r\n            addAssetUrl,\r\n            {\r\n                file_reference: {\r\n                    id: uploadedBinaryFileResponse.data.id,\r\n                    type: uploadedBinaryFileResponse.data.type\r\n                },\r\n                descriptions: data.asset.descriptions,\r\n                external_id: data.asset.external_id,\r\n                folder: data.asset.folder,\r\n                title: data.asset.title,\r\n                codename: data.asset.codename,\r\n                collection: data.asset.collection,\r\n                elements: data.asset.elements\r\n            },\r\n            config\r\n        );\r\n\r\n        return assetResponse;\r\n    }\r\n\r\n    async uploadBinaryFileAsync(\r\n        url: string,\r\n        data: AssetModels.IUploadBinaryFileRequestData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetResponses.UploadBinaryFileResponse> {\r\n        config.headers.push({\r\n            header: 'Content-type',\r\n            value: data.contentType\r\n        });\r\n\r\n        if (data.contentLength) {\r\n            config.headers.push({ header: 'Content-length', value: data.contentLength.toString() });\r\n        }\r\n\r\n        return assetsMapper.mapUploadBinaryFileResponse(\r\n            await this.postResponseAsync<AssetContracts.IUploadBinaryFileResponseContract>(\r\n                url,\r\n                data.binaryData,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async viewAssetAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetResponses.ViewAssetResponse> {\r\n        return assetsMapper.mapViewAssetResponse(\r\n            await this.getResponseAsync<AssetContracts.IAssetModelContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listAssetsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetResponses.AssetsListResponse> {\r\n        return assetsMapper.mapListingAssetsResponse(\r\n            await this.getResponseAsync<AssetContracts.IAssetsListingResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listContentItemsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentItemResponses.ContentItemsResponse> {\r\n        return contentItemsMapper.mapListingItemsResponse(\r\n            await this.getResponseAsync<ContentItemContracts.IContentItemsListingResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewContentItemAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentItemResponses.ViewContentItemResponse> {\r\n        return contentItemsMapper.mapViewContentItemResponse(\r\n            await this.getResponseAsync<ContentItemContracts.IViewContentItemResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async addContentItemAsync(\r\n        url: string,\r\n        data: ContentItemContracts.IAddContentItemPostContract,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentItemResponses.AddContentItemResponse> {\r\n        return contentItemsMapper.mapAddContentItemResponse(\r\n            await this.postResponseAsync<ContentItemContracts.IAddContentItemResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async upsertContentItemAsync(\r\n        url: string,\r\n        data: ContentItemContracts.IUpsertContentItemPostContract,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentItemResponses.UpsertContentItemResponse> {\r\n        return contentItemsMapper.mapUpsertContentItemResponse(\r\n            await this.putResponseAsync<ContentItemContracts.IUpsertContentItemResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async updateContentItemAsync(\r\n        url: string,\r\n        data: ContentItemContracts.IUpdateContentItemPostContract,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<ContentItemResponses.AddContentItemResponse> {\r\n        return contentItemsMapper.mapUpdateContentItemResponse(\r\n            await this.putResponseAsync<ContentItemContracts.IUpdateContentItemResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteContentItemAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return contentItemsMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<ContentItemContracts.IDeleteContentItemResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteLanguageVariantAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return contentItemsMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<ContentItemContracts.IDeleteContentItemResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async upsertLanguageVariantAsync(\r\n        url: string,\r\n        data: LanguageVariantContracts.IUpsertLanguageVariantPostContract,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.UpsertLanguageVariantResponse> {\r\n        return languageVariantMapper.mapUpsertLanguageVariantResponse(\r\n            await this.putResponseAsync<LanguageVariantContracts.IUpsertLanguageVariantResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async viewLanguageVariantAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.ViewLanguageVariantResponse> {\r\n        return languageVariantMapper.mapViewLanguageVariantResponse(\r\n            await this.getResponseAsync<LanguageVariantContracts.IViewLanguageVariantResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listLanguageVariantsOfItemAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.ListLanguageVariantsOfItemResponse> {\r\n        return languageVariantMapper.mapLanguageVariantsOfItemResponse(\r\n            await this.getResponseAsync<LanguageVariantContracts.IListLanguageVariantsOfItemResponseContract[]>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async listLanguageVariantsOfContentTypeWithComponentsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.ListLanguageVariantsOfContentTypeWithComponentsResponse> {\r\n        return languageVariantMapper.mapLanguageVariantsOfContentTypeWithComponentsResponse(\r\n            await this.getResponseAsync<LanguageVariantContracts.IListLanguageVariantsOfContentTypeWithComponentsResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async listLanguageVariantsOfContentTypeAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.ListLanguageVariantsOfContentTypeResponse> {\r\n        return languageVariantMapper.mapLanguageVariantsOfContentTypeResponse(\r\n            await this.getResponseAsync<LanguageVariantContracts.IListLanguageVariantsOfContentTypeResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async listLanguageVariantsByCollectionAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.ListLanguageVariantsByCollectionResponse> {\r\n        return languageVariantMapper.mapLanguageVariantsByCollectionResponse(\r\n            await this.getResponseAsync<LanguageVariantContracts.IListLanguageVariantsByCollectionResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }  \r\n\r\n    async listLanguageVariantsBySpaceAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageVariantResponses.ListLanguageVariantsBySpaceResponse> {\r\n        return languageVariantMapper.mapLanguageVariantsBySpaceResponse(\r\n            await this.getResponseAsync<LanguageVariantContracts.IListLanguageVariantsBySpaceResponseContract>(\r\n                url,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }  \r\n\r\n\r\n\r\n\r\n    async listLanguagesAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageResponses.ListLanguagesResponse> {\r\n        return languageMapper.mapListLanguagesResponse(\r\n            await this.getResponseAsync<LanguageContracts.IListLanguagesResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewLanguageAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<LanguageResponses.ViewLanguageResponse> {\r\n        return languageMapper.mapViewLanguageResponse(\r\n            await this.getResponseAsync<LanguageContracts.IViewLanguageResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async addLanguageAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: LanguageModels.IAddLanguageData\r\n    ): Promise<LanguageResponses.AddLanguageResponse> {\r\n        return languageMapper.mapAddLanguageResponse(\r\n            await this.postResponseAsync<LanguageContracts.IAddLanguageResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifyLanguageAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: LanguageModels.IModifyLanguageData[]\r\n    ): Promise<LanguageResponses.ModifyLanguageResponse> {\r\n        return languageMapper.mapModifyLanguageResponse(\r\n            await this.patchResponseAsync<LanguageContracts.IModifyLanguageResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async listWebhooksAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<WebhookResponses.WebhookListResponse> {\r\n        return webhookMapper.mapWebhooksListResponse(\r\n            await this.getResponseAsync<WebhookContracts.IWebhookListContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listLegacyWebhooksAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<WebhookResponses.LegacyWebhookListResponse> {\r\n        return webhookMapper.mapLegacyWebhooksListResponse(\r\n            await this.getResponseAsync<WebhookContracts.ILegacyWebhookListContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async getWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<WebhookResponses.GetWebhookResponse> {\r\n        return webhookMapper.mapGetWebhookResponse(\r\n            await this.getResponseAsync<WebhookContracts.IGetWebhookContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async getLegacyWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<WebhookResponses.GetLegacyWebhookResponse> {\r\n        return webhookMapper.mapGetLegacyWebhookResponse(\r\n            await this.getResponseAsync<WebhookContracts.IGetLegacyWebhookContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async addWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: WebhookModels.IAddWebhookData\r\n    ): Promise<WebhookResponses.AddWebhookResponse> {\r\n        return webhookMapper.mapAddWebhookResponse(\r\n            await this.postResponseAsync<WebhookContracts.IAddWebhookContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async addLegacyWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: WebhookModels.IAddLegacyWebhookData\r\n    ): Promise<WebhookResponses.AddLegacyWebhookResponse> {\r\n        return webhookMapper.mapAddLegacyWebhookResponse(\r\n            await this.postResponseAsync<WebhookContracts.IAddLegacyWebhookContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async enableWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return webhookMapper.mapEmptyResponse(\r\n            await this.putResponseAsync<BaseResponses.EmptyContentManagementResponse>(url, {}, {}, config)\r\n        );\r\n    }\r\n\r\n    async disableWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return webhookMapper.mapEmptyResponse(\r\n            await this.putResponseAsync<BaseResponses.EmptyContentManagementResponse>(url, {}, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteWebhookAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return webhookMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<BaseResponses.EmptyContentManagementResponse>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listAssetFoldersAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<AssetFolderResponses.AssetFoldersListResponse> {\r\n        return assetFolderMapper.mapListAssetFoldersResponse(\r\n            await this.getResponseAsync<AssetFolderContracts.IListAssetFoldersResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async addAssetFoldersAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: AssetFolderModels.IAddAssetFoldersData\r\n    ): Promise<AssetFolderResponses.AddAssetFoldersResponse> {\r\n        return assetFolderMapper.mapAddAssetFoldersResponse(\r\n            await this.postResponseAsync<AssetFolderContracts.IAddAssetFoldersResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifyAssetFoldersAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: AssetFolderModels.IModifyAssetFoldersData[]\r\n    ): Promise<AssetFolderResponses.ModifyAssetFoldersResponse> {\r\n        return assetFolderMapper.mapModifyAssetFoldersResponse(\r\n            await this.patchResponseAsync<AssetFolderContracts.IModifyAssetFoldersDataResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async listCollectionsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<CollectionResponses.CollectionsListResponse> {\r\n        return collectionsMappers.mapListCollectionsResponse(\r\n            await this.getResponseAsync<CollectionContracts.ICollectionListResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listRolesAsync(url: string, config: IContentManagementQueryConfig): Promise<RoleResponses.RoleListResponse> {\r\n        return roleMapper.mapRoleListResponse(\r\n            await this.getResponseAsync<RoleContracts.IRoleListResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewRoleAsync(url: string, config: IContentManagementQueryConfig): Promise<RoleResponses.ViewRoleResponse> {\r\n        return roleMapper.mapViewRoleResponse(\r\n            await this.getResponseAsync<RoleContracts.IRoleContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async getPreviewConfigurationAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<PreviewResponses.PreviewConfigurationResponse> {\r\n        return previewMapper.mapPreviewConfigurationResponse(\r\n            await this.getResponseAsync<PreviewContracts.IPreviewConfigurationContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifyPreviewConfigurationAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: PreviewModels.IModifyPreviewConfigurationData\r\n    ): Promise<PreviewResponses.ModifyConfigurationResponse> {\r\n        return previewMapper.mapModifyConfigurationResponse(\r\n            await this.putResponseAsync<PreviewContracts.IPreviewConfigurationContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async setCollectionsAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: CollectionModels.ISetCollectionData[]\r\n    ): Promise<CollectionResponses.SetCollectionsResponse> {\r\n        return collectionsMappers.mapSetCollectionsResponse(\r\n            await this.patchResponseAsync<CollectionContracts.ISetCollectionsResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async inviteProjectUserAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: ProjectUserModels.IInviteUserData\r\n    ): Promise<ProjectUsersResponses.InviteUserResponse> {\r\n        return projectUserMapper.mapInviteUserResponse(\r\n            await this.postResponseAsync<ProjectUserContracts.IInviteUserResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async changeUserRolesAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: ProjectUserModels.IChangeUserRoleData\r\n    ): Promise<ProjectUsersResponses.ChangeUserRolesResponse> {\r\n        return projectUserMapper.mapChangeUserRolesResponse(\r\n            await this.putResponseAsync<ProjectUserContracts.IChangeUserRolesResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async getEnvironmentCloningStateAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<EnvironmentResponses.GetCloningStateResponse> {\r\n        return environmentMapper.mapGetEnvironmentCloningStateResponse(\r\n            await this.getResponseAsync<EnvironmentContracts.IEnvironmentCloningStateResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteEnvironmentAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return environmentMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<EnvironmentContracts.IDeleteEnvironmentResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifyEnvironmentAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: EnvironmentModels.IModifyEnvironmentData[]\r\n    ): Promise<EnvironmentResponses.ModifyEnvironmentResponse> {\r\n        return environmentMapper.mapModifyEnvironmentResponse(\r\n            await this.patchResponseAsync<EnvironmentContracts.IModifyEnvironmentResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async cloneEnvironmentAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: EnvironmentModels.ICloneEnvironmentData\r\n    ): Promise<EnvironmentResponses.CloneEnvironmentResponse> {\r\n        return environmentMapper.mapCloneEnvironmentResponse(\r\n            await this.postResponseAsync<EnvironmentContracts.ICloneEnvironmentResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async markEnvironmentAsProductionAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: EnvironmentModels.IMarkEnvironmentAsProductionData\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return environmentMapper.mapEmptyResponse(\r\n            await this.putResponseAsync<EnvironmentContracts.IMarkEnvironmentAsProductionResponseContract>(\r\n                url,\r\n                data,\r\n                {},\r\n                config\r\n            )\r\n        );\r\n    }\r\n\r\n    async addSpaceAsync(\r\n        url: string,\r\n        data: SpaceModels.IAddSpaceData,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SpaceResponses.AddSpaceResponse> {\r\n        return spacesMapper.mapAddSpaceResponse(\r\n            await this.postResponseAsync<SpaceContracts.IAddSpaceResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    async viewSpaceAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SpaceResponses.ViewSpaceResponse> {\r\n        return spacesMapper.mapViewSpaceResponse(\r\n            await this.getResponseAsync<SpaceContracts.IViewSpaceResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async listSpacesAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<SpaceResponses.SpacesListResponse> {\r\n        return spacesMapper.mapListingSpacesResponse(\r\n            await this.getResponseAsync<SpaceContracts.ISpacesListingResponseContract>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async deleteSpaceAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig\r\n    ): Promise<BaseResponses.EmptyContentManagementResponse> {\r\n        return spacesMapper.mapEmptyResponse(\r\n            await this.deleteResponseAsync<SpaceContracts.IDeleteSpaceResponseContact>(url, {}, config)\r\n        );\r\n    }\r\n\r\n    async modifySpaceAsync(\r\n        url: string,\r\n        config: IContentManagementQueryConfig,\r\n        data: SpaceModels.IModifySpaceData[]\r\n    ): Promise<SpaceResponses.ModifySpaceResponse> {\r\n        return spacesMapper.mapModifySpaceResponse(\r\n            await this.patchResponseAsync<SpaceContracts.IModifySpaceResponseContract>(url, data, {}, config)\r\n        );\r\n    }\r\n\r\n    private async getListAllResponseInternalAsync<\r\n        TResponse extends BaseResponses.IContentManagementListResponse\r\n    >(data: {\r\n        xContinuationToken: string | undefined;\r\n        getResponse: (xContinuationToken?: string) => Promise<TResponse>;\r\n        resolvedResponses: TResponse[];\r\n        listQueryConfig: IContentManagementListQueryConfig<TResponse> | undefined;\r\n    }): Promise<TResponse[]> {\r\n        const response = await data.getResponse(data.xContinuationToken);\r\n\r\n        if (data.listQueryConfig?.delayBetweenRequests) {\r\n            await this.sleepAsync(data.listQueryConfig.delayBetweenRequests);\r\n        }\r\n\r\n        data.resolvedResponses.push(response);\r\n\r\n        if (data.listQueryConfig?.responseFetched) {\r\n            data.listQueryConfig.responseFetched(response, data.xContinuationToken);\r\n        }\r\n\r\n        if (response.data.pagination.continuationToken) {\r\n            // recursively fetch next page data\r\n            return await this.getListAllResponseInternalAsync({\r\n                xContinuationToken: response.data.pagination.continuationToken,\r\n                getResponse: data.getResponse,\r\n                resolvedResponses: data.resolvedResponses,\r\n                listQueryConfig: data.listQueryConfig\r\n            });\r\n        }\r\n\r\n        return data.resolvedResponses;\r\n    }\r\n\r\n    private async sleepAsync(ms: number): Promise<void> {\r\n        return await new Promise((resolve) => setTimeout(resolve, ms));\r\n    }\r\n}\r\n", "import {\r\n    AssetFolderMapper,\r\n    assetFolderMapper,\r\n    AssetsMapper,\r\n    assetsMapper,\r\n    ContentItemsMapper,\r\n    contentItemsMapper,\r\n    ContentTypeMapper,\r\n    contentTypeMapper,\r\n    ContentTypeSnippetMapper,\r\n    contentTypeSnippetMapper,\r\n    ElementsMapper,\r\n    elementsMapper,\r\n    LanguageMapper,\r\n    languageMapper,\r\n    LanguageVariantMapper,\r\n    languageVariantMapper,\r\n    EnvironmentMapper,\r\n    environmentMapper,\r\n    TaxonomyMapper,\r\n    taxonomyMappper,\r\n    WebhookMapper,\r\n    webhookMapper,\r\n    WorkflowMapper,\r\n    workflowMapper,\r\n} from '../mappers';\r\n\r\nexport interface IMappingService {\r\n    assetFoldersMapper: AssetFolderMapper;\r\n    assetsMapper: AssetsMapper;\r\n    contentItemsMapper: ContentItemsMapper;\r\n    contentTypeMapper: ContentTypeMapper;\r\n    contentTypeSnippetMapper: ContentTypeSnippetMapper;\r\n    elementsMapper: ElementsMapper;\r\n    languageMapper: LanguageMapper;\r\n    languageVariantMapper: LanguageVariantMapper;\r\n    environmentMapper: EnvironmentMapper;\r\n    taxonomyMapper: TaxonomyMapper;\r\n    webhookMapper: WebhookMapper;\r\n    workflowMapper: WorkflowMapper;\r\n}\r\n\r\nexport class MappingService implements IMappingService {\r\n    public assetFoldersMapper: AssetFolderMapper;\r\n    public assetsMapper: AssetsMapper;\r\n    public contentItemsMapper: ContentItemsMapper;\r\n    public contentTypeMapper: ContentTypeMapper;\r\n    public contentTypeSnippetMapper: ContentTypeSnippetMapper;\r\n    public elementsMapper: ElementsMapper;\r\n    public languageMapper: LanguageMapper;\r\n    public languageVariantMapper: LanguageVariantMapper;\r\n    public environmentMapper: EnvironmentMapper;\r\n    public taxonomyMapper: TaxonomyMapper;\r\n    public webhookMapper: WebhookMapper;\r\n    public workflowMapper: WorkflowMapper;\r\n\r\n    constructor() {\r\n        this.assetFoldersMapper = assetFolderMapper;\r\n        this.assetsMapper = assetsMapper;\r\n        this.contentItemsMapper = contentItemsMapper;\r\n        this.contentTypeMapper = contentTypeMapper;\r\n        this.contentTypeSnippetMapper = contentTypeSnippetMapper;\r\n        this.elementsMapper = elementsMapper;\r\n        this.languageMapper = languageMapper;\r\n        this.languageVariantMapper = languageVariantMapper;\r\n        this.environmentMapper = environmentMapper;\r\n        this.taxonomyMapper = taxonomyMappper;\r\n        this.webhookMapper = webhookMapper;\r\n        this.workflowMapper = workflowMapper;\r\n    }\r\n}\r\n", "import { HttpService, IHttpCancelRequestToken, IHttpService } from '@kontent-ai/core-sdk';\r\nimport {\r\n    AssetElementsBuilder,\r\n    AssetRenditionModels,\r\n    CollectionModels,\r\n    LanguageVariantElementsBuilder,\r\n    PreviewModels,\r\n    ProjectUserModels,\r\n    SpaceModels\r\n} from '../models';\r\n\r\nimport { IManagementClientConfig } from '../config';\r\nimport { ContentItemContracts, LanguageVariantContracts } from '../contracts';\r\nimport {\r\n    AssetFolderModels,\r\n    AssetModels,\r\n    ContentTypeElementsBuilder,\r\n    ContentTypeModels,\r\n    ContentTypeSnippetElements,\r\n    ContentTypeSnippetModels,\r\n    LanguageModels,\r\n    TaxonomyModels,\r\n    WebhookModels,\r\n    WorkflowModels\r\n} from '../models';\r\nimport {\r\n    AddAssetFoldersQuery,\r\n    AddAssetQuery,\r\n    AddContentItemQuery,\r\n    AddContentTypeQuery,\r\n    AddContentTypeSnippetQuery,\r\n    AddLanguageQuery,\r\n    AddTaxonomyQuery,\r\n    AddWebhookQuery,\r\n    AddLegacyWebhookQuery,\r\n    AssetIdentifierQuery,\r\n    CancelScheduledPublishingOfLanguageVariantQuery,\r\n    ChangeWorkflowStepOfLanguageOrVariantQuery,\r\n    ContentItemIdentifierQuery,\r\n    ContentTypeCodenameAndIdIdentifierQuery,\r\n    ContentTypeIdentifierQuery,\r\n    CreateNewVersionOfLanguageVariantQuery,\r\n    DataQuery,\r\n    DataQueryOptional,\r\n    DeleteAssetQuery,\r\n    DeleteContentItemQuery,\r\n    DeleteContentTypeQuery,\r\n    DeleteContentTypeSnippetQuery,\r\n    DeleteLanguageVariantQuery,\r\n    DeleteTaxonomyQuery,\r\n    DeleteWebhookQuery,\r\n    DeleteLegacyWebhookQuery,\r\n    GetTaxonomyQuery,\r\n    GetWebhookQuery,\r\n    GetLegacyWebhookQuery,\r\n    LanguageIdAndCodenameIdentifierQuery,\r\n    LanguageIdentifierQuery,\r\n    ListAssetFoldersQuery,\r\n    ListAssetsQuery,\r\n    ListContentItemsQuery,\r\n    ListContentTypeSnippetsQuery,\r\n    ListContentTypesQuery,\r\n    ListLanguagesQuery,\r\n    ListLanguageVariantsOfContentTypeQuery,\r\n    ListLanguageVariantsOfContentTypeWithComponentsQuery,\r\n    ListLanguageVariantsOfItemQuery,\r\n    ListLanguageVariantsBySpaceQuery,\r\n    ListTaxonomiesQuery,\r\n    ListWebhooksQuery,\r\n    ListLegacyWebhooksQuery,\r\n    ListWorkflowStepsQuery,\r\n    ModifyAssetFoldersQuery,\r\n    ModifyContentTypeQuery,\r\n    ModifyContentTypeSnippetQuery,\r\n    ModifyLanguageQuery,\r\n    EnvironmentIdentifierQuery,\r\n    EnvironmentInformationQuery,\r\n    PublishLanguageVariantQuery,\r\n    TaxonomyIdentifierQuery,\r\n    UnpublishLanguageVariantQuery,\r\n    UpdateContentItemQuery,\r\n    UploadBinaryFileQuery,\r\n    UpsertAssetQuery,\r\n    UpsertContentItemQuery,\r\n    UpsertLanguageVariantQuery,\r\n    ViewAssetsQuery,\r\n    ViewContentItemQuery,\r\n    ViewContentTypeQuery,\r\n    ViewContentTypeSnippetQuery,\r\n    ViewLanguageQuery,\r\n    ViewLanguageVariantQuery,\r\n    WebhookIdentifierQuery,\r\n    WorkflowStepIdentifierQuery,\r\n    ModifyTaxonomyQuery,\r\n    PostQuery,\r\n    ActionQuery,\r\n    PatchQuery,\r\n    PutQuery,\r\n    DeleteQuery,\r\n    GetQuery,\r\n    CancelScheduledUnpublishingOfLanguageVariantQuery,\r\n    EnableWebhookQuery,\r\n    EnableLegacyWebhookQuery,\r\n    DisableWebhookQuery,\r\n    DisableLegacyWebhookQuery,\r\n    ListCollectionsQuery,\r\n    CollectionIdentifierQuery,\r\n    ListLanguageVariantsByCollectionQuery,\r\n    SetCollectionsQuery,\r\n    UploadAssetFromUrlQuery,\r\n    ListSubscriptionProjectsQuery,\r\n    ViewSubscriptionProjectQuery,\r\n    ListSubscriptionUsersQuery,\r\n    UserIdentifierQuery,\r\n    ViewSubscriptionUserQuery,\r\n    ActivateUserInAllProjectsQuery,\r\n    DeactivateUserInAllProjectsQuery,\r\n    ListRolesQuery,\r\n    InviteProjectUserQuery,\r\n    ChangeUserRolesQuery,\r\n    RoleIdentifierQuery,\r\n    ViewRoleQuery,\r\n    ListAssetRenditionsQuery,\r\n    ModifyAssetRenditionQuery,\r\n    AddAssetRenditionQuery,\r\n    RenditionIdentifierQuery,\r\n    ViewAssetRenditionQuery,\r\n    ChangeWorkflowOfLanguageOrVariantQuery,\r\n    ListWorkflowsQuery,\r\n    WorkflowIdentifierQuery,\r\n    DeleteWorkflowQuery,\r\n    AddWorkflowQuery,\r\n    UpdateWorkflowQuery,\r\n    StartEnvironmentValidationQuery,\r\n    TaskIdentifierQuery,\r\n    CheckEnvironmentValidationQuery,\r\n    ListEnvironmentValidationIssuesQuery,\r\n    AddSpaceQuery,\r\n    DeleteSpaceQuery,\r\n    ListSpacesQuery,\r\n    ModifySpaceQuery,\r\n    ViewSpaceQuery,\r\n    SpaceIdentifierQuery,\r\n    GetPreviewConfigurationQuery,\r\n    ModifyPreviewConfigurationQuery\r\n} from '../queries';\r\nimport { sdkInfo } from '../sdk-info.generated';\r\nimport { ManagementQueryService, IMappingService, MappingService } from '../services';\r\nimport { IManagementClient } from './imanagement-client.interface';\r\nimport { CancelToken } from 'axios';\r\nimport { GetEnvironmentCloningStateQuery } from '../queries/environments';\r\nimport { DeleteEnvironmentQuery } from '../queries/environments/delete-environment-query';\r\nimport { EnvironmentModels } from '../models/environments/environment.models';\r\nimport { CloneEnvironmentQuery } from '../queries/environments/clone-environment-query';\r\nimport { MarkEnvironmentAsProductionQuery } from '../queries/environments/mark-environment-as-production-query';\r\nimport { ModifyEnvironmentQuery } from '../queries/environments/modify-environment-query';\r\n\r\nexport class ManagementClient implements IManagementClient<CancelToken> {\r\n    private readonly queryService: ManagementQueryService;\r\n    private httpService: IHttpService<CancelToken>;\r\n\r\n    public readonly mappingService: IMappingService = new MappingService();\r\n\r\n    constructor(protected readonly config: IManagementClientConfig) {\r\n        const httpService = config.httpService ? config.httpService : new HttpService();\r\n        this.queryService = new ManagementQueryService(config, httpService, {\r\n            host: sdkInfo.host,\r\n            name: sdkInfo.name,\r\n            version: sdkInfo.version\r\n        });\r\n\r\n        this.httpService = httpService;\r\n    }\r\n\r\n    createCancelToken(): IHttpCancelRequestToken<CancelToken> {\r\n        return this.httpService.createCancelToken();\r\n    }\r\n\r\n    post(): ActionQuery<DataQuery<PostQuery, any>> {\r\n        return new ActionQuery<DataQuery<PostQuery, any>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, action) =>\r\n                new DataQuery<PostQuery, any>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new PostQuery(nConfig, nQueryService, action, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    patch(): ActionQuery<DataQuery<PatchQuery, any>> {\r\n        return new ActionQuery<DataQuery<PatchQuery, any>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, action) =>\r\n                new DataQuery<PatchQuery, any>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new PatchQuery(nConfig, nQueryService, action, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    put(): ActionQuery<DataQuery<PutQuery, any>> {\r\n        return new ActionQuery<DataQuery<PutQuery, any>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, action) =>\r\n                new DataQuery<PutQuery, any>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new PutQuery(nConfig, nQueryService, action, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    delete(): ActionQuery<DeleteQuery> {\r\n        return new ActionQuery<DeleteQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, action) => new DeleteQuery(config, queryService, action)\r\n        );\r\n    }\r\n\r\n    get(): ActionQuery<GetQuery> {\r\n        return new ActionQuery<GetQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, action) => new GetQuery(config, queryService, action)\r\n        );\r\n    }\r\n\r\n    createNewVersionOfLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<CreateNewVersionOfLanguageVariantQuery>\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<CreateNewVersionOfLanguageVariantQuery>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<CreateNewVersionOfLanguageVariantQuery>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new CreateNewVersionOfLanguageVariantQuery(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            contentItemIdentifier,\r\n                            languageIdentifier\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    unpublishLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<\r\n            DataQueryOptional<UnpublishLanguageVariantQuery, WorkflowModels.IUnpublishLanguageVarianthData>\r\n        >\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<\r\n                DataQueryOptional<UnpublishLanguageVariantQuery, WorkflowModels.IUnpublishLanguageVarianthData>\r\n            >\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<\r\n                    DataQueryOptional<UnpublishLanguageVariantQuery, WorkflowModels.IUnpublishLanguageVarianthData>\r\n                >(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new DataQueryOptional<\r\n                            UnpublishLanguageVariantQuery,\r\n                            WorkflowModels.IUnpublishLanguageVarianthData\r\n                        >(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            (pConfig, pQueryService, data) =>\r\n                                new UnpublishLanguageVariantQuery(\r\n                                    pConfig,\r\n                                    pQueryService,\r\n                                    contentItemIdentifier,\r\n                                    languageIdentifier,\r\n                                    data\r\n                                )\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    cancelSheduledPublishingOfLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<CancelScheduledPublishingOfLanguageVariantQuery>\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<CancelScheduledPublishingOfLanguageVariantQuery>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<CancelScheduledPublishingOfLanguageVariantQuery>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new CancelScheduledPublishingOfLanguageVariantQuery(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            contentItemIdentifier,\r\n                            languageIdentifier\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    cancelSheduledUnpublishingOfLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<CancelScheduledUnpublishingOfLanguageVariantQuery>\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<CancelScheduledUnpublishingOfLanguageVariantQuery>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<CancelScheduledUnpublishingOfLanguageVariantQuery>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new CancelScheduledUnpublishingOfLanguageVariantQuery(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            contentItemIdentifier,\r\n                            languageIdentifier\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    changeWorkflowStepOfLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<WorkflowStepIdentifierQuery<ChangeWorkflowStepOfLanguageOrVariantQuery>>\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<\r\n                WorkflowStepIdentifierQuery<ChangeWorkflowStepOfLanguageOrVariantQuery>\r\n            >\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<\r\n                    WorkflowStepIdentifierQuery<ChangeWorkflowStepOfLanguageOrVariantQuery>\r\n                >(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new WorkflowStepIdentifierQuery<ChangeWorkflowStepOfLanguageOrVariantQuery>(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            (mConfig, mQueryservice, workflowIdentifier) => {\r\n                                return new ChangeWorkflowStepOfLanguageOrVariantQuery(\r\n                                    config,\r\n                                    queryService,\r\n                                    contentItemIdentifier,\r\n                                    languageIdentifier,\r\n                                    workflowIdentifier\r\n                                );\r\n                            }\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    changeWorkflowOfLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<\r\n            DataQuery<ChangeWorkflowOfLanguageOrVariantQuery, WorkflowModels.IChangeWorkflowOfLanguageVariantData>\r\n        >\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<\r\n                DataQuery<ChangeWorkflowOfLanguageOrVariantQuery, WorkflowModels.IChangeWorkflowOfLanguageVariantData>\r\n            >\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<\r\n                    DataQuery<\r\n                        ChangeWorkflowOfLanguageOrVariantQuery,\r\n                        WorkflowModels.IChangeWorkflowOfLanguageVariantData\r\n                    >\r\n                >(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new DataQuery<\r\n                            ChangeWorkflowOfLanguageOrVariantQuery,\r\n                            WorkflowModels.IChangeWorkflowOfLanguageVariantData\r\n                        >(nConfig, nQueryService, (mConfig, mQueryservice, data) => {\r\n                            return new ChangeWorkflowOfLanguageOrVariantQuery(\r\n                                config,\r\n                                queryService,\r\n                                contentItemIdentifier,\r\n                                languageIdentifier,\r\n                                data\r\n                            );\r\n                        })\r\n                )\r\n        );\r\n    }\r\n\r\n    listWorkflows(): ListWorkflowsQuery {\r\n        return new ListWorkflowsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    deleteWorkflow(): WorkflowIdentifierQuery<DeleteWorkflowQuery> {\r\n        return new WorkflowIdentifierQuery<DeleteWorkflowQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteWorkflowQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addWorkflow(): DataQuery<AddWorkflowQuery, WorkflowModels.IAddWorkflowData> {\r\n        return new DataQuery<AddWorkflowQuery, WorkflowModels.IAddWorkflowData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddWorkflowQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    updateWorkflow(): WorkflowIdentifierQuery<DataQuery<UpdateWorkflowQuery, WorkflowModels.IUpdateWorkflowData>> {\r\n        return new WorkflowIdentifierQuery<DataQuery<UpdateWorkflowQuery, WorkflowModels.IUpdateWorkflowData>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<UpdateWorkflowQuery, WorkflowModels.IUpdateWorkflowData>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new UpdateWorkflowQuery(nConfig, nQueryService, data, identifier)\r\n                )\r\n        );\r\n    }\r\n\r\n    publishLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<\r\n            DataQueryOptional<PublishLanguageVariantQuery, WorkflowModels.IPublishLanguageVariantData>\r\n        >\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<\r\n                DataQueryOptional<PublishLanguageVariantQuery, WorkflowModels.IPublishLanguageVariantData>\r\n            >\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<\r\n                    DataQueryOptional<PublishLanguageVariantQuery, WorkflowModels.IPublishLanguageVariantData>\r\n                >(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new DataQueryOptional<PublishLanguageVariantQuery, WorkflowModels.IPublishLanguageVariantData>(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            (pConfig, pQueryService, data) =>\r\n                                new PublishLanguageVariantQuery(\r\n                                    pConfig,\r\n                                    pQueryService,\r\n                                    contentItemIdentifier,\r\n                                    languageIdentifier,\r\n                                    data\r\n                                )\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    listWorkflowSteps(): ListWorkflowStepsQuery {\r\n        return new ListWorkflowStepsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    listContentTypeSnippets(): ListContentTypeSnippetsQuery {\r\n        return new ListContentTypeSnippetsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    viewContentTypeSnippet(): ContentTypeIdentifierQuery<ViewContentTypeSnippetQuery> {\r\n        return new ContentTypeIdentifierQuery<ViewContentTypeSnippetQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewContentTypeSnippetQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    deleteContentTypeSnippet(): ContentTypeIdentifierQuery<DeleteContentTypeSnippetQuery> {\r\n        return new ContentTypeIdentifierQuery<DeleteContentTypeSnippetQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteContentTypeSnippetQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addContentTypeSnippet(): DataQuery<\r\n        AddContentTypeSnippetQuery,\r\n        (builder: ContentTypeSnippetElements) => ContentTypeSnippetModels.IAddContentTypeSnippetData\r\n    > {\r\n        return new DataQuery<\r\n            AddContentTypeSnippetQuery,\r\n            (builder: ContentTypeSnippetElements) => ContentTypeSnippetModels.IAddContentTypeSnippetData\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddContentTypeSnippetQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    viewLanguageVariant(): ContentItemIdentifierQuery<LanguageIdAndCodenameIdentifierQuery<ViewLanguageVariantQuery>> {\r\n        return new ContentItemIdentifierQuery<LanguageIdAndCodenameIdentifierQuery<ViewLanguageVariantQuery>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<ViewLanguageVariantQuery>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new ViewLanguageVariantQuery(nConfig, nQueryService, contentItemIdentifier, languageIdentifier)\r\n                )\r\n        );\r\n    }\r\n\r\n    upsertLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<\r\n            DataQuery<\r\n                UpsertLanguageVariantQuery,\r\n                (builder: LanguageVariantElementsBuilder) => LanguageVariantContracts.IUpsertLanguageVariantPostContract\r\n            >\r\n        >\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            LanguageIdAndCodenameIdentifierQuery<\r\n                DataQuery<\r\n                    UpsertLanguageVariantQuery,\r\n                    (\r\n                        builder: LanguageVariantElementsBuilder\r\n                    ) => LanguageVariantContracts.IUpsertLanguageVariantPostContract\r\n                >\r\n            >\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<\r\n                    DataQuery<\r\n                        UpsertLanguageVariantQuery,\r\n                        (\r\n                            builder: LanguageVariantElementsBuilder\r\n                        ) => LanguageVariantContracts.IUpsertLanguageVariantPostContract\r\n                    >\r\n                >(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new DataQuery<\r\n                            UpsertLanguageVariantQuery,\r\n                            (\r\n                                builder: LanguageVariantElementsBuilder\r\n                            ) => LanguageVariantContracts.IUpsertLanguageVariantPostContract\r\n                        >(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            (mConfig, mQueryService, elements) =>\r\n                                new UpsertLanguageVariantQuery(\r\n                                    mConfig,\r\n                                    mQueryService,\r\n                                    contentItemIdentifier,\r\n                                    languageIdentifier,\r\n                                    elements\r\n                                )\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    deleteLanguageVariant(): ContentItemIdentifierQuery<\r\n        LanguageIdAndCodenameIdentifierQuery<DeleteLanguageVariantQuery>\r\n    > {\r\n        return new ContentItemIdentifierQuery<LanguageIdAndCodenameIdentifierQuery<DeleteLanguageVariantQuery>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, contentItemIdentifier) =>\r\n                new LanguageIdAndCodenameIdentifierQuery<DeleteLanguageVariantQuery>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, languageIdentifier) =>\r\n                        new DeleteLanguageVariantQuery(\r\n                            nConfig,\r\n                            nQueryService,\r\n                            contentItemIdentifier,\r\n                            languageIdentifier\r\n                        )\r\n                )\r\n        );\r\n    }\r\n\r\n    startEnvironmentValidation(): StartEnvironmentValidationQuery {\r\n        return new StartEnvironmentValidationQuery(this.config, this.queryService);\r\n    }\r\n\r\n    checkEnvironmentValidation(): TaskIdentifierQuery<CheckEnvironmentValidationQuery> {\r\n        return new TaskIdentifierQuery<CheckEnvironmentValidationQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new CheckEnvironmentValidationQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listEnvironmentValidationIssues(): TaskIdentifierQuery<ListEnvironmentValidationIssuesQuery> {\r\n        return new TaskIdentifierQuery<ListEnvironmentValidationIssuesQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new ListEnvironmentValidationIssuesQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    deleteContentType(): ContentTypeIdentifierQuery<DeleteContentTypeQuery> {\r\n        return new ContentTypeIdentifierQuery<DeleteContentTypeQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteContentTypeQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addContentType(): DataQuery<\r\n        AddContentTypeQuery,\r\n        (builder: ContentTypeElementsBuilder) => ContentTypeModels.IAddContentTypeData\r\n    > {\r\n        return new DataQuery<\r\n            AddContentTypeQuery,\r\n            (builder: ContentTypeElementsBuilder) => ContentTypeModels.IAddContentTypeData\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddContentTypeQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    modifyContentTypeSnippet(): ContentTypeIdentifierQuery<\r\n        DataQuery<ModifyContentTypeSnippetQuery, ContentTypeSnippetModels.IModifyContentTypeSnippetData[]>\r\n    > {\r\n        return new ContentTypeIdentifierQuery<\r\n            DataQuery<ModifyContentTypeSnippetQuery, ContentTypeSnippetModels.IModifyContentTypeSnippetData[]>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<ModifyContentTypeSnippetQuery, ContentTypeSnippetModels.IModifyContentTypeSnippetData[]>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) =>\r\n                        new ModifyContentTypeSnippetQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    modifyContentType(): ContentTypeIdentifierQuery<\r\n        DataQuery<ModifyContentTypeQuery, ContentTypeModels.IModifyContentTypeData[]>\r\n    > {\r\n        return new ContentTypeIdentifierQuery<\r\n            DataQuery<ModifyContentTypeQuery, ContentTypeModels.IModifyContentTypeData[]>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<ModifyContentTypeQuery, ContentTypeModels.IModifyContentTypeData[]>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) =>\r\n                        new ModifyContentTypeQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    modifyTaxonomy(): TaxonomyIdentifierQuery<DataQuery<ModifyTaxonomyQuery, TaxonomyModels.IModifyTaxonomyData[]>> {\r\n        return new TaxonomyIdentifierQuery<DataQuery<ModifyTaxonomyQuery, TaxonomyModels.IModifyTaxonomyData[]>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<ModifyTaxonomyQuery, TaxonomyModels.IModifyTaxonomyData[]>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new ModifyTaxonomyQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    viewContentType(): ContentTypeIdentifierQuery<ViewContentTypeQuery> {\r\n        return new ContentTypeIdentifierQuery<ViewContentTypeQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewContentTypeQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listContentTypes(): ListContentTypesQuery {\r\n        return new ListContentTypesQuery(this.config, this.queryService);\r\n    }\r\n\r\n    listAssetRenditions(): AssetIdentifierQuery<ListAssetRenditionsQuery> {\r\n        return new AssetIdentifierQuery<ListAssetRenditionsQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ListAssetRenditionsQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addAssetRendition(): AssetIdentifierQuery<\r\n        DataQuery<AddAssetRenditionQuery, AssetRenditionModels.IAddAssetRenditionData>\r\n    > {\r\n        return new AssetIdentifierQuery<DataQuery<AddAssetRenditionQuery, AssetRenditionModels.IAddAssetRenditionData>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<AddAssetRenditionQuery, AssetRenditionModels.IAddAssetRenditionData>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) =>\r\n                        new AddAssetRenditionQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    modifyAssetRendition(): AssetIdentifierQuery<\r\n        RenditionIdentifierQuery<DataQuery<ModifyAssetRenditionQuery, AssetRenditionModels.IModifyAssetRenditionData>>\r\n    > {\r\n        return new AssetIdentifierQuery<\r\n            RenditionIdentifierQuery<\r\n                DataQuery<ModifyAssetRenditionQuery, AssetRenditionModels.IModifyAssetRenditionData>\r\n            >\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, assetIdentifier) =>\r\n                new RenditionIdentifierQuery<\r\n                    DataQuery<ModifyAssetRenditionQuery, AssetRenditionModels.IModifyAssetRenditionData>\r\n                >(config, queryService, (mConfig, mQueryService, renditionIdentifier) => {\r\n                    return new DataQuery<ModifyAssetRenditionQuery, AssetRenditionModels.IModifyAssetRenditionData>(\r\n                        config,\r\n                        queryService,\r\n                        (nConfig, nQueryService, data) =>\r\n                            new ModifyAssetRenditionQuery(\r\n                                nConfig,\r\n                                nQueryService,\r\n                                assetIdentifier,\r\n                                renditionIdentifier,\r\n                                data\r\n                            )\r\n                    );\r\n                })\r\n        );\r\n    }\r\n\r\n    viewAssetRendition(): AssetIdentifierQuery<RenditionIdentifierQuery<ViewAssetRenditionQuery>> {\r\n        return new AssetIdentifierQuery<RenditionIdentifierQuery<ViewAssetRenditionQuery>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, assetIdentifier) =>\r\n                new RenditionIdentifierQuery<ViewAssetRenditionQuery>(\r\n                    config,\r\n                    queryService,\r\n                    (xConfig, xQueryService, renditionIdentifier) => {\r\n                        return new ViewAssetRenditionQuery(config, queryService, assetIdentifier, renditionIdentifier);\r\n                    }\r\n                )\r\n        );\r\n    }\r\n\r\n    deleteTaxonomy(): TaxonomyIdentifierQuery<DeleteTaxonomyQuery> {\r\n        return new TaxonomyIdentifierQuery<DeleteTaxonomyQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteTaxonomyQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addTaxonomy(): DataQuery<AddTaxonomyQuery, TaxonomyModels.IAddTaxonomyRequestModel> {\r\n        return new DataQuery<AddTaxonomyQuery, TaxonomyModels.IAddTaxonomyRequestModel>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddTaxonomyQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    listTaxonomies(): ListTaxonomiesQuery {\r\n        return new ListTaxonomiesQuery(this.config, this.queryService);\r\n    }\r\n\r\n    getTaxonomy(): TaxonomyIdentifierQuery<GetTaxonomyQuery> {\r\n        return new TaxonomyIdentifierQuery<GetTaxonomyQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new GetTaxonomyQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    deleteAsset(): AssetIdentifierQuery<DeleteAssetQuery> {\r\n        return new AssetIdentifierQuery<DeleteAssetQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteAssetQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    upsertAsset(): AssetIdentifierQuery<\r\n        DataQuery<UpsertAssetQuery, (builder: AssetElementsBuilder) => AssetModels.IUpsertAssetRequestData>\r\n    > {\r\n        return new AssetIdentifierQuery<\r\n            DataQuery<UpsertAssetQuery, (builder: AssetElementsBuilder) => AssetModels.IUpsertAssetRequestData>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<UpsertAssetQuery, (builder: AssetElementsBuilder) => AssetModels.IUpsertAssetRequestData>(\r\n                    this.config,\r\n                    this.queryService,\r\n                    (xConfig, xQueryService, data) => new UpsertAssetQuery(config, queryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    addAsset(): DataQuery<AddAssetQuery, (builder: AssetElementsBuilder) => AssetModels.IAddAssetRequestData> {\r\n        return new DataQuery<AddAssetQuery, (builder: AssetElementsBuilder) => AssetModels.IAddAssetRequestData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddAssetQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    uploadBinaryFile(): DataQuery<UploadBinaryFileQuery, AssetModels.IUploadBinaryFileRequestData> {\r\n        return new DataQuery<UploadBinaryFileQuery, AssetModels.IUploadBinaryFileRequestData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new UploadBinaryFileQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    uploadAssetFromUrl(): DataQuery<UploadAssetFromUrlQuery, AssetModels.IUploadAssetFromUrlRequestData> {\r\n        return new DataQuery<UploadAssetFromUrlQuery, AssetModels.IUploadAssetFromUrlRequestData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new UploadAssetFromUrlQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    viewAsset(): AssetIdentifierQuery<ViewAssetsQuery> {\r\n        return new AssetIdentifierQuery<ViewAssetsQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewAssetsQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listAssets(): ListAssetsQuery {\r\n        return new ListAssetsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    listContentItems(): ListContentItemsQuery {\r\n        return new ListContentItemsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    viewContentItem(): ContentItemIdentifierQuery<ViewContentItemQuery> {\r\n        return new ContentItemIdentifierQuery<ViewContentItemQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewContentItemQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addContentItem(): DataQuery<AddContentItemQuery, ContentItemContracts.IAddContentItemPostContract> {\r\n        return new DataQuery<AddContentItemQuery, ContentItemContracts.IAddContentItemPostContract>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddContentItemQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    updateContentItem(): ContentItemIdentifierQuery<\r\n        DataQuery<UpdateContentItemQuery, ContentItemContracts.IUpdateContentItemPostContract>\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            DataQuery<UpdateContentItemQuery, ContentItemContracts.IUpdateContentItemPostContract>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<UpdateContentItemQuery, ContentItemContracts.IUpdateContentItemPostContract>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) =>\r\n                        new UpdateContentItemQuery(nConfig, nQueryService, data, identifier)\r\n                )\r\n        );\r\n    }\r\n\r\n    upsertContentItem(): ContentItemIdentifierQuery<\r\n        DataQuery<UpsertContentItemQuery, ContentItemContracts.IUpsertContentItemPostContract>\r\n    > {\r\n        return new ContentItemIdentifierQuery<\r\n            DataQuery<UpsertContentItemQuery, ContentItemContracts.IUpsertContentItemPostContract>\r\n        >(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<UpsertContentItemQuery, ContentItemContracts.IUpsertContentItemPostContract>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) =>\r\n                        new UpsertContentItemQuery(nConfig, nQueryService, data, identifier)\r\n                )\r\n        );\r\n    }\r\n\r\n    deleteContentItem(): ContentItemIdentifierQuery<DeleteContentItemQuery> {\r\n        return new ContentItemIdentifierQuery<DeleteContentItemQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteContentItemQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listLanguageVariantsOfItem(): ContentItemIdentifierQuery<ListLanguageVariantsOfItemQuery> {\r\n        return new ContentItemIdentifierQuery<ListLanguageVariantsOfItemQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ListLanguageVariantsOfItemQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listLanguageVariantsOfContentType(): ContentTypeCodenameAndIdIdentifierQuery<ListLanguageVariantsOfContentTypeQuery> {\r\n        return new ContentTypeCodenameAndIdIdentifierQuery<ListLanguageVariantsOfContentTypeQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new ListLanguageVariantsOfContentTypeQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listLanguageVariantsByCollection(): CollectionIdentifierQuery<ListLanguageVariantsByCollectionQuery> {\r\n        return new CollectionIdentifierQuery<ListLanguageVariantsByCollectionQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new ListLanguageVariantsByCollectionQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listLanguageVariantsBySpace(): SpaceIdentifierQuery<ListLanguageVariantsBySpaceQuery> {\r\n        return new SpaceIdentifierQuery<ListLanguageVariantsBySpaceQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new ListLanguageVariantsBySpaceQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n\r\n    listLanguageVariantsOfContentTypeWithComponents(): ContentTypeCodenameAndIdIdentifierQuery<ListLanguageVariantsOfContentTypeWithComponentsQuery> {\r\n        return new ContentTypeCodenameAndIdIdentifierQuery<ListLanguageVariantsOfContentTypeWithComponentsQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new ListLanguageVariantsOfContentTypeWithComponentsQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listLanguages(): ListLanguagesQuery {\r\n        return new ListLanguagesQuery(this.config, this.queryService);\r\n    }\r\n\r\n    viewLanguage(): LanguageIdentifierQuery<ViewLanguageQuery> {\r\n        return new LanguageIdentifierQuery<ViewLanguageQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewLanguageQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addLanguage(): DataQuery<AddLanguageQuery, LanguageModels.IAddLanguageData> {\r\n        return new DataQuery<AddLanguageQuery, LanguageModels.IAddLanguageData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddLanguageQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    modifyLanguage(): LanguageIdentifierQuery<DataQuery<ModifyLanguageQuery, LanguageModels.IModifyLanguageData[]>> {\r\n        return new LanguageIdentifierQuery<DataQuery<ModifyLanguageQuery, LanguageModels.IModifyLanguageData[]>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<ModifyLanguageQuery, LanguageModels.IModifyLanguageData[]>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new ModifyLanguageQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    deleteWebhook(): WebhookIdentifierQuery<DeleteWebhookQuery> {\r\n        return new WebhookIdentifierQuery<DeleteWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addWebhook(): DataQuery<AddWebhookQuery, WebhookModels.IAddWebhookData> {\r\n        return new DataQuery<AddWebhookQuery, WebhookModels.IAddWebhookData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddWebhookQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    enableWebhook(): WebhookIdentifierQuery<EnableWebhookQuery> {\r\n        return new WebhookIdentifierQuery<EnableWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new EnableWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    disableWebhook(): WebhookIdentifierQuery<DisableWebhookQuery> {\r\n        return new WebhookIdentifierQuery<DisableWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DisableWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    getWebhook(): WebhookIdentifierQuery<GetWebhookQuery> {\r\n        return new WebhookIdentifierQuery<GetWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new GetWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listWebhooks(): ListWebhooksQuery {\r\n        return new ListWebhooksQuery(this.config, this.queryService);\r\n    }\r\n\r\n    deleteLegacyWebhook(): WebhookIdentifierQuery<DeleteLegacyWebhookQuery> {\r\n        return new WebhookIdentifierQuery<DeleteLegacyWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteLegacyWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    addLegacyWebhook(): DataQuery<AddLegacyWebhookQuery, WebhookModels.IAddLegacyWebhookData> {\r\n        return new DataQuery<AddLegacyWebhookQuery, WebhookModels.IAddLegacyWebhookData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddLegacyWebhookQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    enableLegacyWebhook(): WebhookIdentifierQuery<EnableLegacyWebhookQuery> {\r\n        return new WebhookIdentifierQuery<EnableLegacyWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new EnableLegacyWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    disableLegacyWebhook(): WebhookIdentifierQuery<DisableLegacyWebhookQuery> {\r\n        return new WebhookIdentifierQuery<DisableLegacyWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DisableLegacyWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    getLegacyWebhook(): WebhookIdentifierQuery<GetLegacyWebhookQuery> {\r\n        return new WebhookIdentifierQuery<GetLegacyWebhookQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new GetLegacyWebhookQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listLegacyWebhooks(): ListLegacyWebhooksQuery {\r\n        return new ListLegacyWebhooksQuery(this.config, this.queryService);\r\n    }\r\n\r\n\r\n    environmentInformation(): EnvironmentInformationQuery {\r\n        return new EnvironmentInformationQuery(this.config, this.queryService);\r\n    }\r\n\r\n    listAssetFolders(): ListAssetFoldersQuery {\r\n        return new ListAssetFoldersQuery(this.config, this.queryService);\r\n    }\r\n\r\n    addAssetFolders(): DataQuery<AddAssetFoldersQuery, AssetFolderModels.IAddAssetFoldersData> {\r\n        return new DataQuery<AddAssetFoldersQuery, AssetFolderModels.IAddAssetFoldersData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddAssetFoldersQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    modifyAssetFolders(): DataQuery<ModifyAssetFoldersQuery, AssetFolderModels.IModifyAssetFoldersData[]> {\r\n        return new DataQuery<ModifyAssetFoldersQuery, AssetFolderModels.IModifyAssetFoldersData[]>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new ModifyAssetFoldersQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    listCollections(): ListCollectionsQuery {\r\n        return new ListCollectionsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    setCollections(): DataQuery<SetCollectionsQuery, CollectionModels.ISetCollectionData[]> {\r\n        return new DataQuery<SetCollectionsQuery, CollectionModels.ISetCollectionData[]>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new SetCollectionsQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    createLanguageVariantEditUrl(data: {\r\n        variantId: string;\r\n        languageCodename: string;\r\n        elementCodename?: string;\r\n        nestedItemId?: string;\r\n        nestedItemElementCodename?: string;\r\n    }): string {\r\n        let url: string = `https://app.kontent.ai/goto/edit-item/project/${this.config.environmentId}/variant-codename/${data.languageCodename}/item/${data.variantId}`;\r\n\r\n        if (data.elementCodename) {\r\n            url += `/element/${data.elementCodename}`;\r\n        }\r\n\r\n        if (data.nestedItemId) {\r\n            url += `/item/${data.nestedItemId}`;\r\n\r\n            if (data.nestedItemElementCodename) {\r\n                url += `/element/${data.nestedItemElementCodename}`;\r\n            }\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    listSubscriptionProjects(): ListSubscriptionProjectsQuery {\r\n        return new ListSubscriptionProjectsQuery(this.config, this.queryService);\r\n    }\r\n\r\n    listSubscriptionUsers(): ListSubscriptionUsersQuery {\r\n        return new ListSubscriptionUsersQuery(this.config, this.queryService);\r\n    }\r\n\r\n    viewSubscriptionProject(): EnvironmentIdentifierQuery<ViewSubscriptionProjectQuery> {\r\n        return new EnvironmentIdentifierQuery<ViewSubscriptionProjectQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewSubscriptionProjectQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    viewSubscriptionUser(): UserIdentifierQuery<ViewSubscriptionUserQuery> {\r\n        return new UserIdentifierQuery<ViewSubscriptionUserQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewSubscriptionUserQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    activateUserInAllProjects(): UserIdentifierQuery<ActivateUserInAllProjectsQuery> {\r\n        return new UserIdentifierQuery<ActivateUserInAllProjectsQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ActivateUserInAllProjectsQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    deactivateUserInAllProjects(): UserIdentifierQuery<DeactivateUserInAllProjectsQuery> {\r\n        return new UserIdentifierQuery<DeactivateUserInAllProjectsQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeactivateUserInAllProjectsQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listRoles(): ListRolesQuery {\r\n        return new ListRolesQuery(this.config, this.queryService);\r\n    }\r\n\r\n    viewRole(): RoleIdentifierQuery<ViewRoleQuery> {\r\n        return new RoleIdentifierQuery<ViewRoleQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewRoleQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    getPreviewConfiguration(): GetPreviewConfigurationQuery {\r\n        return new GetPreviewConfigurationQuery(this.config, this.queryService);\r\n    }\r\n\r\n    modifyPreviewConfiguration(): DataQuery<\r\n        ModifyPreviewConfigurationQuery,\r\n        PreviewModels.IModifyPreviewConfigurationData\r\n    > {\r\n        return new DataQuery<ModifyPreviewConfigurationQuery, PreviewModels.IModifyPreviewConfigurationData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new ModifyPreviewConfigurationQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    inviteUser(): DataQuery<InviteProjectUserQuery, ProjectUserModels.IInviteUserData> {\r\n        return new DataQuery<InviteProjectUserQuery, ProjectUserModels.IInviteUserData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new InviteProjectUserQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    changeUserRoles(): UserIdentifierQuery<DataQuery<ChangeUserRolesQuery, ProjectUserModels.IChangeUserRoleData>> {\r\n        return new UserIdentifierQuery<DataQuery<ChangeUserRolesQuery, ProjectUserModels.IChangeUserRoleData>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<ChangeUserRolesQuery, ProjectUserModels.IChangeUserRoleData>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new ChangeUserRolesQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    getEnvironmentCloningState(): GetEnvironmentCloningStateQuery {\r\n        return new GetEnvironmentCloningStateQuery(this.config, this.queryService);\r\n    }\r\n\r\n    deleteEnvironment(): DeleteEnvironmentQuery {\r\n        return new DeleteEnvironmentQuery(this.config, this.queryService);\r\n    }\r\n\r\n    modifyEnvironment(): DataQuery<ModifyEnvironmentQuery, EnvironmentModels.IModifyEnvironmentData[]> {\r\n        return new DataQuery<ModifyEnvironmentQuery, EnvironmentModels.IModifyEnvironmentData[]>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new ModifyEnvironmentQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    cloneEnvironment(): DataQuery<CloneEnvironmentQuery, EnvironmentModels.ICloneEnvironmentData> {\r\n        return new DataQuery<CloneEnvironmentQuery, EnvironmentModels.ICloneEnvironmentData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new CloneEnvironmentQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    markEnvironmentAsProduction(): DataQuery<\r\n        MarkEnvironmentAsProductionQuery,\r\n        EnvironmentModels.IMarkEnvironmentAsProductionData\r\n    > {\r\n        return new DataQuery<MarkEnvironmentAsProductionQuery, EnvironmentModels.IMarkEnvironmentAsProductionData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new MarkEnvironmentAsProductionQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    addSpace(): DataQuery<AddSpaceQuery, SpaceModels.IAddSpaceData> {\r\n        return new DataQuery<AddSpaceQuery, SpaceModels.IAddSpaceData>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, data) => new AddSpaceQuery(config, queryService, data)\r\n        );\r\n    }\r\n\r\n    deleteSpace(): SpaceIdentifierQuery<DeleteSpaceQuery> {\r\n        return new SpaceIdentifierQuery<DeleteSpaceQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new DeleteSpaceQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n\r\n    listSpaces(): ListSpacesQuery {\r\n        return new ListSpacesQuery(this.config, this.queryService);\r\n    }\r\n\r\n    modifySpace(): SpaceIdentifierQuery<DataQuery<ModifySpaceQuery, SpaceModels.IModifySpaceData[]>> {\r\n        return new SpaceIdentifierQuery<DataQuery<ModifySpaceQuery, SpaceModels.IModifySpaceData[]>>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) =>\r\n                new DataQuery<ModifySpaceQuery, SpaceModels.IModifySpaceData[]>(\r\n                    config,\r\n                    queryService,\r\n                    (nConfig, nQueryService, data) => new ModifySpaceQuery(nConfig, nQueryService, identifier, data)\r\n                )\r\n        );\r\n    }\r\n\r\n    viewSpace(): SpaceIdentifierQuery<ViewSpaceQuery> {\r\n        return new SpaceIdentifierQuery<ViewSpaceQuery>(\r\n            this.config,\r\n            this.queryService,\r\n            (config, queryService, identifier) => new ViewSpaceQuery(config, queryService, identifier)\r\n        );\r\n    }\r\n}\r\n", "import { ManagementClient } from './management-client.class';\r\nimport { IManagementClientConfig } from '../config';\r\n\r\nexport function createManagementClient(config: IManagementClientConfig): ManagementClient {\r\n    return new ManagementClient(config);\r\n}\r\n"],
  "mappings": "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",
  "names": ["filter", "Parameters", "prototype", "descriptors", "filter", "hasOwnProperty", "filter", "prototype", "toString", "encode", "isFormData", "isFileList", "transitional", "filter", "self", "prototype", "validateStatus", "transitional", "merge", "validators", "transitional", "Axios", "AxiosError", "CanceledError", "isCancel", "CancelToken", "VERSION", "all", "isAxiosError", "spread", "toFormData", "AxiosHeaders", "HttpStatusCode", "mergeConfig", "ContentItemModels", "SharedModels", "AssetModels", "AssetFolderModels", "TaxonomyModels", "ContentTypeModels", "LanguageVariantModels", "ElementModels", "ContentTypeSnippetModels", "WorkflowModels", "LanguageModels", "Identifiers", "TaskIdentifierEnum", "ContentItemIdentifierEnum", "ContentTypeIdentifierEnum", "RenditionIdentifierEnum", "CollectionIdentifierEnum", "LanguageIdentifierEnum", "WorkflowIdentifierEnum", "TaxonomyIdentifierEnum", "AssetIdentifierEnum", "WebhookIdentifierEnum", "EnvironmentIdentifierEnum", "UserIdentifierEnum", "RoleIdentifierEnum", "SpaceIdentifierEnum", "WebhookModels", "CollectionModels", "SubscriptionModels", "RoleModels", "ProjectUserModels", "AssetRenditionModels", "EnvironmentModels", "CloneEnvironmentModel", "SpaceModels", "PreviewModels", "BaseResponses", "ContentItemResponses", "AssetResponses", "AssetFolderResponses", "TaxonomyResponses", "ContentTypeResponses", "LanguageVariantResponses", "ContentTypeSnippetResponses", "WorkflowResponses", "LanguageResponses", "WebhookResponses", "GenericResponses", "CollectionResponses", "SubscriptionResponses", "RoleResponses", "ProjectUsersResponses", "AssetRenditionResponses", "SpaceResponses", "EnvironmentResponses", "PreviewResponses", "sdkInfo", "sdkInfo"]
}
